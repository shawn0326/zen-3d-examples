// github.com/shawn0326/zen-3d
!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports):"function"==typeof define&&define.amd?define(["exports"],t):t(e.zen3d={})}(this,function(e){"use strict";var t,r,i,n,u=(r="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz".split(""),i=new Array(36),n=0,function(){for(var e=0;e<36;e++)8===e||13===e||18===e||23===e?i[e]="-":14===e?i[e]="4":(n<=2&&(n=33554432+16777216*Math.random()|0),t=15&n,n>>=4,i[e]=r[19===e?3&t|8:t]);return i.join("")}),a=function(){if(!window.navigator)return!0;var e=navigator.userAgent.toLowerCase();return-1!=e.indexOf("mobile")||-1!=e.indexOf("android")}(),f=!!document;function s(e){return 0==(e&e-1)&&0!==e}function _(e){return Math.pow(2,Math.round(Math.log(e)/Math.LN2))}function c(e){return e--,e|=e>>1,e|=e>>2,e|=e>>4,e|=e>>8,e|=e>>16,++e}function o(e){var t={};for(var r in e){var i=e[r];Array.isArray(i)?t[r]=i.slice():t[r]=i}return t}var l,d,h,p,m,v,g,x,y,M,E,T,b,S,w,A,P,L,N,R,C,O,U,I,F,D,z,B,G,k,V,H,j,X,W,Y,q={MESH:"mesh",SKINNED_MESH:"skinned_mesh",LIGHT:"light",CAMERA:"camera",SCENE:"scene",GROUP:"group",POINT:"point",LINE:"line",LINE_LOOP:"line_loop",LINE_SEGMENTS:"line_segments",CANVAS2D:"canvas2d"},Z={AMBIENT:"ambient",DIRECT:"direct",POINT:"point",SPOT:"spot"},K={BASIC:"basic",LAMBERT:"lambert",PHONG:"phong",PBR:"pbr",POINT:"point",LINE:"line",LINE_LOOP:"lineloop",LINE_DASHED:"linedashed",CANVAS2D:"canvas2d",SHADER:"shader",DEPTH:"depth",DISTANCE:"distance"},Q={NORMAL:"normal",EXP2:"exp2"},J={NONE:"none",NORMAL:"normal",ADD:"add",CUSTOM:"custom"},$={ADD:32774,SUBTRACT:32778,REVERSE_SUBTRACT:32779},ee={ZERO:0,ONE:1,SRC_COLOR:768,ONE_MINUS_SRC_COLOR:769,SRC_ALPHA:770,ONE_MINUS_SRC_ALPHA:771,DST_ALPHA:772,ONE_MINUS_DST_ALPHA:773,DST_COLOR:774,ONE_MINUS_DST_COLOR:775},te={NONE:"none",FRONT:"front",BACK:"back",FRONT_AND_BACK:"front_and_back"},re={FRONT:"front",BACK:"back",DOUBLE:"double"},ie={SMOOTH_SHADING:"smooth_shading",FLAT_SHADING:"flat_shading"},ne={TEXTURE_2D:3553,TEXTURE_CUBE_MAP:34067},ae={DEPTH_COMPONENT:6402,DEPTH_STENCIL:34041,ALPHA:6406,RGB:6407,RGBA:6408,LUMINANCE:6409,LUMINANCE_ALPHA:6410},se={BYTE:5120,UNSIGNED_BYTE:5121,SHORT:5122,UNSIGNED_SHORT:5123,INT:5124,UNSIGNED_INT:5125,FLOAT:5126,HALF_FLOAT:36193,UNSIGNED_INT_24_8:34042,UNSIGNED_SHORT_4_4_4_4:32819,UNSIGNED_SHORT_5_5_5_1:32820,UNSIGNED_SHORT_5_6_5:33635},oe={NEAREST:9728,LINEAR:9729,NEAREST_MIPMAP_NEAREST:9984,LINEAR_MIPMAP_NEAREST:9985,NEAREST_MIPMAP_LINEAR:9986,LINEAR_MIPMAP_LINEAR:9987},he={REPEAT:10497,CLAMP_TO_EDGE:33071,MIRRORED_REPEAT:33648},ue={FLOAT_VEC2:35664,FLOAT_VEC3:35665,FLOAT_VEC4:35666,INT_VEC2:35667,INT_VEC3:35668,INT_VEC4:35669,BOOL:35670,BOOL_VEC2:35671,BOOL_VEC3:35672,BOOL_VEC4:35673,FLOAT_MAT2:35674,FLOAT_MAT3:35675,FLOAT_MAT4:35676,SAMPLER_2D:35678,SAMPLER_CUBE:35680,BYTE:65535,UNSIGNED_BYTE:5121,SHORT:5122,UNSIGNED_SHORT:5123,INT:5124,UNSIGNED_INT:5125,FLOAT:5126},ce={FLOAT_VEC2:35664,FLOAT_VEC3:35665,FLOAT_VEC4:35666,FLOAT:5126,BYTE:65535,UNSIGNED_BYTE:5121,UNSIGNED_SHORT:5123},le={STREAM_DRAW:35040,STATIC_DRAW:35044,DYNAMIC_DRAW:35048},de={HARD:"hard",PCF_SOFT:"pcf_soft"},pe={LINEAR:"linear",SRGB:"sRGB",RGBE:"RGBE",RGBM7:"RGBM7",RGBM16:"RGBM16",RGBD:"RGBD",GAMMA:"Gamma"},fe={MULTIPLY:"ENVMAP_BLENDING_MULTIPLY",MIX:"ENVMAP_BLENDING_MIX",ADD:"ENVMAP_BLENDING_ADD"},_e={POINTS:0,LINES:1,LINE_LOOP:2,LINE_STRIP:3,TRIANGLES:4,TRIANGLE_STRIP:5,TRIANGLE_FAN:6};function me(){this.eventMap={}}function ve(){this.elements=new Float32Array([1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1])}function ge(e,t,r){this.x=e||0,this.y=t||0,this.z=r||0}function xe(e,t){this.origin=void 0!==e?e:new ge,this.direction=void 0!==t?t:new ge}function ye(e,t,r,i){this.ray=new xe(e,t),this.near=r||0,this.far=i||1/0}function Me(e,t){return e.distance-t.distance}function Ee(e,t,r,i){if(e.raycast(t,r),!0===i)for(var n=e.children,a=0,s=n.length;a<s;a++)Ee(n[a],t,r,!0)}function Te(e,t,r,i){this._x=e||0,this._y=t||0,this._z=r||0,this._order=i||Te.DefaultOrder}function be(e,t){this.x=e||0,this.y=t||0}function Se(e,t,r,i){this.x=e||0,this.y=t||0,this.z=r||0,this.w=void 0!==i?i:1}function we(){this.elements=new Float32Array([1,0,0,0,1,0,0,0,1])}function Ae(e,t,r,i){this._x=e||0,this._y=t||0,this._z=r||0,this._w=void 0!==i?i:1}function Pe(e,t){this.min=void 0!==e?e:new be(1/0,1/0),this.max=void 0!==t?t:new be(-1/0,-1/0)}function Le(e,t){this.min=void 0!==e?e:new ge(1/0,1/0,1/0),this.max=void 0!==t?t:new ge(-1/0,-1/0,-1/0)}function Ne(e,t){this.center=void 0!==e?e:new ge,this.radius=void 0!==t?t:0}function Re(e,t){this.normal=void 0!==e?e:new ge(1,0,0),this.constant=void 0!==t?t:0}function Ce(e,t,r,i,n,a){this.planes=[void 0!==e?e:new Re,void 0!==t?t:new Re,void 0!==r?r:new Re,void 0!==i?i:new Re,void 0!==n?n:new Re,void 0!==a?a:new Re]}function Oe(e,t,r){return this.r=0,this.g=0,void(this.b=0)===t&&void 0===r?this.setHex(e):this.setRGB(e,t,r)}function Ue(e,t,r){this.a=void 0!==e?e:new ge,this.b=void 0!==t?t:new ge,this.c=void 0!==r?r:new ge}function Ie(e,t){this.posPoints=void 0,this.ctrlPoints=void 0,this.segCount=0,this.set(e,t)}function Fe(e,t,r){this.radius=void 0!==e?e:1,this.phi=void 0!==t?t:0,this.theta=void 0!==r?r:0}function De(){me.call(this),this.uuid=u(),this.textureType="",this.border=0,this.pixelFormat=ae.RGBA,this.pixelType=se.UNSIGNED_BYTE,this.magFilter=oe.LINEAR,this.minFilter=oe.LINEAR_MIPMAP_LINEAR,this.wrapS=he.CLAMP_TO_EDGE,this.wrapT=he.CLAMP_TO_EDGE,this.anisotropy=1,this.generateMipmaps=!0,this.encoding=pe.LINEAR,this.flipY=!0,this.version=0}function ze(){this.crossOrigin=void 0,this.path=void 0}function Be(){this.path=void 0,this.responseType=void 0,this.withCredentials=void 0,this.mimeType=void 0,this.requestHeader=void 0}function Ge(){}function ke(){De.call(this),this.textureType=ne.TEXTURE_2D,this.image=null,this.mipmaps=[],this.offset=new be,this.repeat=new be(1,1),this.center=new be,this.rotation=0,this.matrix=new we,this.matrixAutoUpdate=!0}function Ve(){De.call(this),this.textureType=ne.TEXTURE_CUBE_MAP,this.images=[],this.flipY=!1}function He(e,t,r){ke.call(this),this.image={data:e,width:t,height:r},this.pixelType=se.FLOAT,this.magFilter=oe.NEAREST,this.minFilter=oe.NEAREST,this.generateMipmaps=!1,this.flipY=!1}function je(e,t){ke.call(this),this.image={width:e,height:t},this.pixelType=se.UNSIGNED_SHORT,this.pixelFormat=ae.DEPTH_COMPONENT,this.magFilter=oe.NEAREST,this.minFilter=oe.NEAREST,this.generateMipmaps=!1,this.flipY=!1}function Xe(){this.uuid=u(),this.name="",this.type="",this.position=new ge,this.scale=new ge(1,1,1);var e=this.euler=new Te,t=this.quaternion=new Ae;e.onChange(function(){t.setFromEuler(e,!1)}),t.onChange(function(){e.setFromQuaternion(t,void 0,!1)}),this.matrix=new ve,this.worldMatrix=new ve,this.children=new Array,this.parent=null,this.castShadow=!1,this.receiveShadow=!1,this.shadowType=de.PCF_SOFT,this.frustumCulled=!0,this.visible=!0,this.userData={},this.renderOrder=0}function We(){Xe.call(this),this.type="bone",this.offsetMatrix=new ve}function Ye(e){e=e||[],this.bones=e.slice(0),this.boneMatrices=new Float32Array(16*this.bones.length),this.boneTexture=void 0,this.boneTextureSize=0}function qe(e,t,r,i,n){if(.5<=i)for(var a=0;a!==n;++a)e[t+a]=e[r+a]}function Ze(e,t,r,i){Ae.slerpFlat(e,t,e,t,e,r,i)}function Ke(e,t,r,i,n){for(var a=1-i,s=0;s!==n;++s){var o=t+s;e[o]=e[o]*a+e[r+s]*i}}function Qe(e,t,r,i){this.target=null,this.property="",this.parseBinding(e,t),this.valueSize=i;var n,a=Float64Array;switch(r){case"quaternion":n=Ze;break;case"string":case"bool":a=Array,n=qe;break;default:n=Ke}this.buffer=new a(2*i),this._mixBufferFunction=n,this.cumulativeWeight=0,this.referenceCount=0,this.useCount=0}function Je(){this._clips={},this._bindings={},this._activeClips={}}function $e(e,t,r,i,n){this.target=e,this.propertyPath=t,this.name=this.target.uuid+"."+t,this.times=r,this.values=i,this.valueSize=i.length/r.length,this.interpolant=void 0===n||n}function et(e,t,r,i,n){$e.call(this,e,t,r,i,n)}function tt(e,t,r,i,n){$e.call(this,e,t,r,i,n)}function rt(e){this.name=e||"",this.tracks=[],this.loop=!0,this.startFrame=0,this.endFrame=0,this.frame=0}function it(e,t,r,i,n){$e.call(this,e,t,r,i,n)}function nt(e,t,r,i,n){$e.call(this,e,t,r,i,n)}function at(e,t,r,i,n){$e.call(this,e,t,r,i,n)}function st(e,t,r,i,n){$e.call(this,e,t,r,i,n)}function ot(e,t,r){this.uuid=u(),this.array=e,this.size=t,this.count=void 0!==e?e.length/t:0,this.normalized=!0===r,this.dynamic=!1,this.updateRange={offset:0,count:-1},this.version=0}function ht(){me.call(this),this.uuid=u(),this.attributes={},this.index=null,this.usageType=le.STATIC_DRAW,this.boundingBox=new Le,this.boundingSphere=new Ne,this.dirtyRange={enable:!1,start:0,count:0},this.groups=[]}function ut(e,t,r,i,n,a){ht.call(this),this.buildGeometry(e,t,r,i,n,a)}function ct(e,t,r,i,n,a,s,o){ht.call(this),this.buildGeometry(e,t,r,i,n,a,s,o)}function lt(e,t,r){ot.call(this,e,t),this.meshPerAttribute=r||1}function dt(){ht.call(this),this.maxInstancedCount=void 0}function pt(e,t){this.uuid=u(),this.array=e,this.stride=t,this.count=void 0!==e?e.length/t:0,this.dynamic=!1,this.updateRange={offset:0,count:-1},this.version=0}function ft(e,t,r){pt.call(this,e,t),this.meshPerAttribute=r||1}function _t(e,t,r,i){this.uuid=u(),this.data=e,this.size=t,this.offset=r,this.normalized=!0===i}function mt(e,t,r,i){ht.call(this),this.buildGeometry(e,t,r,i)}function vt(e,t,r,i,n,a,s){ht.call(this),this.buildGeometry(e,t,r,i,n,a,s)}function gt(){this.type="",this.opacity=1,this.transparent=!1,this.blending=J.NORMAL,this.blendSrc=ee.SRC_ALPHA,this.blendDst=ee.ONE_MINUS_SRC_ALPHA,this.blendEquation=$.ADD,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.premultipliedAlpha=!1,this.vertexColors=!1,this.diffuse=new Oe(16777215),this.diffuseMap=null,this.normalMap=null,this.aoMap=null,this.aoMapIntensity=1,this.bumpMap=null,this.bumpScale=1,this.envMap=null,this.envMapIntensity=1,this.envMapCombine=fe.MULTIPLY,this.emissive=new Oe(0),this.emissiveMap=null,this.emissiveIntensity=1,this.depthTest=!0,this.depthWrite=!0,this.colorWrite=!0,this.alphaTest=0,this.side=re.FRONT,this.shading=ie.SMOOTH_SHADING,this.acceptLight=!1,this.drawMode=_e.TRIANGLES}function xt(){gt.call(this),this.type=K.BASIC}function yt(){gt.call(this),this.type=K.LAMBERT,this.acceptLight=!0}function Mt(){gt.call(this),this.type=K.PHONG,this.shininess=30,this.specular=new Oe(6710886),this.specularMap=null,this.acceptLight=!0}function Et(){gt.call(this),this.type=K.PBR,this.roughness=.5,this.metalness=.5,this.roughnessMap=null,this.metalnessMap=null,this.acceptLight=!0}function Tt(){gt.call(this),this.type=K.POINT,this.size=1,this.sizeAttenuation=!0,this.drawMode=_e.POINTS}function bt(){gt.call(this),this.type=K.LINE,this.lineWidth=1,this.drawMode=_e.LINES}function St(){gt.call(this),this.type=K.LINE_LOOP,this.lineWidth=1,this.drawMode=_e.LINE_LOOP}function wt(){gt.call(this),this.type=K.LINE_DASHED,this.lineWidth=1,this.scale=1,this.dashSize=3,this.gapSize=1,this.drawMode=_e.LINE_STRIP}function At(e){gt.call(this),this.type=K.SHADER,this.vertexShader=e.vertexShader||"",this.fragmentShader=e.fragmentShader||"",this.defines={},Object.assign(this.defines,e.defines),this.uniforms=o(e.uniforms)}function Pt(){gt.call(this),this.type=K.DEPTH,this.blending=J.NONE,this.packToRGBA=!1}function Lt(){gt.call(this),this.type=K.DISTANCE,this.blending=J.NONE}function Nt(i){var n=["","WEBKIT_","MOZ_"],a={};function e(e){if(a[e])return a[e];var t=null;for(var r in n)if(t=i.getExtension(n[r]+e))break;return a[e]=t}e("OES_standard_derivatives"),e("GL_OES_standard_derivatives"),e("WEBGL_depth_texture"),e("OES_element_index_uint"),e("OES_texture_half_float");var t=e("EXT_texture_filter_anisotropic");return{version:parseFloat(/^WebGL\ ([0-9])/.exec(i.getParameter(i.VERSION))[1]),maxPrecision:function(e,t){if("highp"===t){if(0<e.getShaderPrecisionFormat(e.VERTEX_SHADER,e.HIGH_FLOAT).precision&&0<e.getShaderPrecisionFormat(e.FRAGMENT_SHADER,e.HIGH_FLOAT).precision)return"highp";t="mediump"}return"mediump"===t&&0<e.getShaderPrecisionFormat(e.VERTEX_SHADER,e.MEDIUM_FLOAT).precision&&0<e.getShaderPrecisionFormat(e.FRAGMENT_SHADER,e.MEDIUM_FLOAT).precision?"mediump":"lowp"}(i,"highp"),maxTextures:i.getParameter(i.MAX_TEXTURE_IMAGE_UNITS),maxVertexTextures:i.getParameter(i.MAX_VERTEX_TEXTURE_IMAGE_UNITS),maxTextureSize:i.getParameter(i.MAX_TEXTURE_SIZE),maxCubemapSize:i.getParameter(i.MAX_CUBE_MAP_TEXTURE_SIZE),maxVertexUniformVectors:i.getParameter(i.MAX_VERTEX_UNIFORM_VECTORS),floatTextures:!!e("OES_texture_float"),shaderTextureLOD:e("EXT_shader_texture_lod"),angleInstancedArraysExt:e("ANGLE_instanced_arrays"),anisotropyExt:t,maxAnisotropy:null!==t?i.getParameter(t.MAX_TEXTURE_MAX_ANISOTROPY_EXT):0,getExtension:e}}function Rt(e,t,r,i){var n=new Uint8Array(4),a=e.createTexture();e.bindTexture(t,a),e.texParameteri(t,e.TEXTURE_MIN_FILTER,e.NEAREST),e.texParameteri(t,e.TEXTURE_MAG_FILTER,e.NEAREST);for(var s=0;s<i;s++)e.texImage2D(r+s,0,e.RGBA,1,1,0,e.RGBA,e.UNSIGNED_BYTE,n);return a}function Ct(e,t){this.gl=e,this.capabilities=t,this.states={},this.currentBlending=null,this.currentBlendEquation=null,this.currentBlendSrc=null,this.currentBlendDst=null,this.currentBlendEquationAlpha=null,this.currentBlendSrcAlpha=null,this.currentBlendDstAlpha=null,this.currentPremultipliedAlpha=null,this.currentCullFace=null,this.currentViewport=new Se,this.currentColorMask=null,this.currentClearColor=new Se,this.currentTextureSlot=null,this.currentBoundTextures={},this.currentBoundBuffers={},this.emptyTextures={},this.emptyTextures[e.TEXTURE_2D]=Rt(e,e.TEXTURE_2D,e.TEXTURE_2D,1),this.emptyTextures[e.TEXTURE_CUBE_MAP]=Rt(e,e.TEXTURE_CUBE_MAP,e.TEXTURE_CUBE_MAP_POSITIVE_X,6),this.currentFlipSided=!1,this.currentDepthMask=!0,this.currentLineWidth=null,this.currentProgram=null,this.currentStencilMask=null,this.currentStencilFunc=null,this.currentStencilRef=null,this.currentStencilFuncMask=null,this.currentStencilFail=null,this.currentStencilZFail=null,this.currentStencilZPass=null,this.currentStencilClear=null,this.currentRenderTarget=null}function Ot(){this.properties={}}function Ut(e){return e===oe.NEAREST||e===oe.NEAREST_MIPMAP_LINEAR||e===oe.NEAREST_MIPMAP_NEAREST?oe.NEAREST:oe.LINEAR}function It(e){return s(e.width)&&s(e.height)}function Ft(e,t){if(e.width>t||e.height>t){if(!f)return console.warn("image is too big ("+e.width+"x"+e.height+"). max size is "+t+"x"+t,e),e;var r=t/Math.max(e.width,e.height),i=document.createElementNS("http://www.w3.org/1999/xhtml","canvas");return i.width=Math.floor(e.width*r),i.height=Math.floor(e.height*r),i.getContext("2d").drawImage(e,0,0,e.width,e.height,0,0,i.width,i.height),console.warn("image is too big ("+e.width+"x"+e.height+"). Resized to "+i.width+"x"+i.height,e),i}return e}function Dt(e,t,r,i){this.gl=e,this.state=t,this.properties=r,this.capabilities=i}function zt(e,t,r,i){r.isInterleavedBufferAttribute&&(r=r.data);var n,a,s,o,h,u,c=t.get(r);void 0===c.buffer?function(e,t,r,i){var n=r.array,a=r.dynamic?e.DYNAMIC_DRAW:e.STATIC_DRAW,s=e.createBuffer();e.bindBuffer(i,s),e.bufferData(i,n,a);var o=e.FLOAT;n instanceof Float32Array?o=e.FLOAT:n instanceof Float64Array?console.warn("Unsupported data buffer format: Float64Array."):n instanceof Uint16Array?o=e.UNSIGNED_SHORT:n instanceof Int16Array?o=e.SHORT:n instanceof Uint32Array?o=e.UNSIGNED_INT:n instanceof Int32Array?o=e.INT:n instanceof Int8Array?o=e.BYTE:n instanceof Uint8Array&&(o=e.UNSIGNED_BYTE),t.buffer=s,t.type=o,t.bytesPerElement=n.BYTES_PER_ELEMENT,t.version=r.version}(e,c,r,i):c.version<r.version&&(n=e,a=c.buffer,o=i,h=(s=r).array,u=s.updateRange,n.bindBuffer(o,a),!1===s.dynamic?n.bufferData(o,h,n.STATIC_DRAW):-1===u.count?n.bufferSubData(o,0,h):0===u.count?console.error("updateBuffer: dynamic BufferAttribute marked as needsUpdate but updateRange.count is 0, ensure you are using set methods or updating manually."):(n.bufferSubData(o,u.offset*h.BYTES_PER_ELEMENT,h.subarray(u.offset,u.offset+u.count)),u.count=-1),c.version=r.version)}function Bt(e,t,r){r.isInterleavedBufferAttribute&&(r=r.data);var i=t.get(r);i.buffer&&e.deleteBuffer(i.buffer),buffers.delete(r)}function Gt(e,t,r,i){this.gl=e,this.state=t,this.properties=r,this.capabilities=i}function kt(e,t,r){this.gl=e,this.name=r.name,this.type=r.type,this.size=r.size,this.location=e.getUniformLocation(t,this.name),this.setValue=void 0,this.set=void 0,this._generateSetValue()}function Vt(e,t,r){this.gl=e,this.name=r.name,this.type=r.type,this.size=r.size,this.location=e.getAttribLocation(t,this.name),this.count=0,this.initCount(e),this.format=e.FLOAT,this.initFormat(e)}function Ht(e,t,r){var i=e.createShader(t);return e.shaderSource(i,r),e.compileShader(i),e.getShaderParameter(i,e.COMPILE_STATUS)||console.warn("shader not compiled!",e.getShaderInfoLog(i),function(e){for(var t=e.split("\n"),r=0;r<t.length;r++)t[r]=r+1+": "+t[r];return t.join("\n")}(r)),i}function jt(e,t,r){this.uuid=u(),this.vshaderSource=t,this.fshaderSource=r;var i,n,a,s,o=Ht(e,e.VERTEX_SHADER,this.vshaderSource),h=Ht(e,e.FRAGMENT_SHADER,this.fshaderSource);this.id=(n=o,a=h,s=(i=e).createProgram(),i.attachShader(s,n),i.attachShader(s,a),i.linkProgram(s),i.getProgramParameter(s,i.LINK_STATUS)||console.warn("program not linked!",i.getProgramInfoLog(s)),s),this.uniforms=function(e,t){for(var r={},i=e.getProgramParameter(t,e.ACTIVE_UNIFORMS),n=0;n<i;n++){var a=e.getActiveUniform(t,n),s=a.name,o=new kt(e,t,a);r[s]=o}return r}(e,this.id),this.attributes=function(e,t){for(var r={},i=e.getProgramParameter(t,e.ACTIVE_ATTRIBUTES),n=0;n<i;n++){var a=e.getActiveAttrib(t,n),s=a.name,o=new Vt(e,t,a);r[s]=o}return r}(e,this.id),e.deleteShader(o),e.deleteShader(h)}Object.assign(me.prototype,{addEventListener:function(e,t,r){var i=this.eventMap[e];i||(i=this.eventMap[e]=[]),i.push({listener:t,thisObject:r||this})},removeEventListener:function(e,t,r){var i=this.eventMap[e];if(i)for(var n=0,a=i.length;n<a;n++){var s=i[n];if(s.listener==t&&s.thisObject==(r||this)){i.splice(n,1);break}}},dispatchEvent:function(e){(e.target=this).notifyListener(e)},notifyListener:function(e){var t=this.eventMap[e.type];if(t)for(var r=0,i=t.length;r<i;r++){var n=t[r];n.listener.call(n.thisObject,e)}}}),Object.assign(ve.prototype,{identity:function(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this},set:function(e,t,r,i,n,a,s,o,h,u,c,l,d,p,f,_){var m=this.elements;return m[0]=e,m[4]=t,m[8]=r,m[12]=i,m[1]=n,m[5]=a,m[9]=s,m[13]=o,m[2]=h,m[6]=u,m[10]=c,m[14]=l,m[3]=d,m[7]=p,m[11]=f,m[15]=_,this},copy:function(e){return this.elements.set(e.elements),this},makeTranslation:function(e,t,r){return this.set(1,0,0,e,0,1,0,t,0,0,1,r,0,0,0,1),this},multiply:function(e){return this.multiplyMatrices(this,e)},premultiply:function(e){return this.multiplyMatrices(e,this)},multiplyMatrices:function(e,t){var r=e.elements,i=t.elements,n=this.elements,a=r[0],s=r[4],o=r[8],h=r[12],u=r[1],c=r[5],l=r[9],d=r[13],p=r[2],f=r[6],_=r[10],m=r[14],v=r[3],g=r[7],x=r[11],y=r[15],M=i[0],E=i[4],T=i[8],b=i[12],S=i[1],w=i[5],A=i[9],P=i[13],L=i[2],N=i[6],R=i[10],C=i[14],O=i[3],U=i[7],I=i[11],F=i[15];return n[0]=a*M+s*S+o*L+h*O,n[4]=a*E+s*w+o*N+h*U,n[8]=a*T+s*A+o*R+h*I,n[12]=a*b+s*P+o*C+h*F,n[1]=u*M+c*S+l*L+d*O,n[5]=u*E+c*w+l*N+d*U,n[9]=u*T+c*A+l*R+d*I,n[13]=u*b+c*P+l*C+d*F,n[2]=p*M+f*S+_*L+m*O,n[6]=p*E+f*w+_*N+m*U,n[10]=p*T+f*A+_*R+m*I,n[14]=p*b+f*P+_*C+m*F,n[3]=v*M+g*S+x*L+y*O,n[7]=v*E+g*w+x*N+y*U,n[11]=v*T+g*A+x*R+y*I,n[15]=v*b+g*P+x*C+y*F,this},transpose:function(){var e,t=this.elements;return e=t[1],t[1]=t[4],t[4]=e,e=t[2],t[2]=t[8],t[8]=e,e=t[6],t[6]=t[9],t[9]=e,e=t[3],t[3]=t[12],t[12]=e,e=t[7],t[7]=t[13],t[13]=e,e=t[11],t[11]=t[14],t[14]=e,this},inverse:function(){return this.getInverse(this)},getInverse:function(e){var t=this.elements,r=e.elements,i=r[0],n=r[1],a=r[2],s=r[3],o=r[4],h=r[5],u=r[6],c=r[7],l=r[8],d=r[9],p=r[10],f=r[11],_=r[12],m=r[13],v=r[14],g=r[15],x=d*v*c-m*p*c+m*u*f-h*v*f-d*u*g+h*p*g,y=_*p*c-l*v*c-_*u*f+o*v*f+l*u*g-o*p*g,M=l*m*c-_*d*c+_*h*f-o*m*f-l*h*g+o*d*g,E=_*d*u-l*m*u-_*h*p+o*m*p+l*h*v-o*d*v,T=i*x+n*y+a*M+s*E;if(0===T)return console.warn("can't invert matrix, determinant is 0"),this.identity();var b=1/T;return t[0]=x*b,t[1]=(m*p*s-d*v*s-m*a*f+n*v*f+d*a*g-n*p*g)*b,t[2]=(h*v*s-m*u*s+m*a*c-n*v*c-h*a*g+n*u*g)*b,t[3]=(d*u*s-h*p*s-d*a*c+n*p*c+h*a*f-n*u*f)*b,t[4]=y*b,t[5]=(l*v*s-_*p*s+_*a*f-i*v*f-l*a*g+i*p*g)*b,t[6]=(_*u*s-o*v*s-_*a*c+i*v*c+o*a*g-i*u*g)*b,t[7]=(o*p*s-l*u*s+l*a*c-i*p*c-o*a*f+i*u*f)*b,t[8]=M*b,t[9]=(_*d*s-l*m*s-_*n*f+i*m*f+l*n*g-i*d*g)*b,t[10]=(o*m*s-_*h*s+_*n*c-i*m*c-o*n*g+i*h*g)*b,t[11]=(l*h*s-o*d*s-l*n*c+i*d*c+o*n*f-i*h*f)*b,t[12]=E*b,t[13]=(l*m*a-_*d*a+_*n*p-i*m*p-l*n*v+i*d*v)*b,t[14]=(_*h*a-o*m*a-_*n*u+i*m*u+o*n*v-i*h*v)*b,t[15]=(o*d*a-l*h*a+l*n*u-i*d*u-o*n*p+i*h*p)*b,this},transform:(v=new ve,function(e,t,r){var i=r.toMatrix4(v).elements,n=this.elements;return n[0]=i[0]*t.x,n[1]=i[1]*t.x,n[2]=i[2]*t.x,n[3]=0,n[4]=i[4]*t.y,n[5]=i[5]*t.y,n[6]=i[6]*t.y,n[7]=0,n[8]=i[8]*t.z,n[9]=i[9]*t.z,n[10]=i[10]*t.z,n[11]=0,n[12]=e.x,n[13]=e.y,n[14]=e.z,n[15]=1,this}),makeRotationFromQuaternion:function(e){var t=this.elements,r=e.x,i=e.y,n=e.z,a=e.w,s=r+r,o=i+i,h=n+n,u=r*s,c=r*o,l=r*h,d=i*o,p=i*h,f=n*h,_=a*s,m=a*o,v=a*h;return t[0]=1-(d+f),t[4]=c-v,t[8]=l+m,t[1]=c+v,t[5]=1-(u+f),t[9]=p-_,t[2]=l-m,t[6]=p+_,t[10]=1-(u+d),t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this},lookAtRH:(h=new ge,p=new ge,m=new ge,function(e,t,r){var i=this.elements;return m.subVectors(e,t),0===m.getLengthSquared()&&(m.z=1),m.normalize(),h.crossVectors(r,m),0===h.getLengthSquared()&&(1===Math.abs(r.z)?m.x+=1e-4:m.z+=1e-4,m.normalize(),h.crossVectors(r,m)),h.normalize(),p.crossVectors(m,h),i[0]=h.x,i[4]=p.x,i[8]=m.x,i[1]=h.y,i[5]=p.y,i[9]=m.y,i[2]=h.z,i[6]=p.z,i[10]=m.z,this}),decompose:(l=new ge,d=new ve,function(e,t,r){var i=this.elements,n=l.set(i[0],i[1],i[2]).getLength(),a=l.set(i[4],i[5],i[6]).getLength(),s=l.set(i[8],i[9],i[10]).getLength();this.determinant()<0&&(n=-n),e.x=i[12],e.y=i[13],e.z=i[14],d.elements.set(this.elements);var o=1/n,h=1/a,u=1/s;return d.elements[0]*=o,d.elements[1]*=o,d.elements[2]*=o,d.elements[4]*=h,d.elements[5]*=h,d.elements[6]*=h,d.elements[8]*=u,d.elements[9]*=u,d.elements[10]*=u,t.setFromRotationMatrix(d),r.x=n,r.y=a,r.z=s,this}),determinant:function(){var e=this.elements,t=e[0],r=e[4],i=e[8],n=e[12],a=e[1],s=e[5],o=e[9],h=e[13],u=e[2],c=e[6],l=e[10],d=e[14];return e[3]*(+n*o*c-i*h*c-n*s*l+r*h*l+i*s*d-r*o*d)+e[7]*(+t*o*d-t*h*l+n*a*l-i*a*d+i*h*u-n*o*u)+e[11]*(+t*h*c-t*s*d-n*a*c+r*a*d+n*s*u-r*h*u)+e[15]*(-i*s*u-t*o*c+t*s*l+i*a*c-r*a*l+r*o*u)},fromArray:function(e,t){void 0===t&&(t=0);for(var r=0;r<16;r++)this.elements[r]=e[r+t];return this},getMaxScaleOnAxis:function(){var e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],r=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],i=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,r,i))},toArray:function(e,t){void 0===e&&(e=[]),void 0===t&&(t=0);var r=this.elements;return e[t]=r[0],e[t+1]=r[1],e[t+2]=r[2],e[t+3]=r[3],e[t+4]=r[4],e[t+5]=r[5],e[t+6]=r[6],e[t+7]=r[7],e[t+8]=r[8],e[t+9]=r[9],e[t+10]=r[10],e[t+11]=r[11],e[t+12]=r[12],e[t+13]=r[13],e[t+14]=r[14],e[t+15]=r[15],e}}),Object.assign(ge.prototype,{lerpVectors:function(e,t,r){return this.subVectors(t,e).multiplyScalar(r).add(e)},set:function(e,t,r){return this.x=e||0,this.y=t||0,this.z=r||0,this},min:function(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this},max:function(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this},getLength:function(){return Math.sqrt(this.getLengthSquared())},getLengthSquared:function(){return this.x*this.x+this.y*this.y+this.z*this.z},normalize:function(e){e=e||1;var t=this.getLength();if(0!=t){var r=e/t;return this.x*=r,this.y*=r,this.z*=r,this}},subtract:function(e,t){return t||(t=new ge),t.set(this.x-e.x,this.y-e.y,this.z-e.z),t},multiply:function(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this},crossVectors:function(e,t){var r=e.x,i=e.y,n=e.z,a=t.x,s=t.y,o=t.z;return this.x=i*o-n*s,this.y=n*a-r*o,this.z=r*s-i*a,this},cross:function(e){var t=this.x,r=this.y,i=this.z;return this.x=r*e.z-i*e.y,this.y=i*e.x-t*e.z,this.z=t*e.y-r*e.x,this},dot:function(e){return this.x*e.x+this.y*e.y+this.z*e.z},applyQuaternion:function(e){var t=this.x,r=this.y,i=this.z,n=e._x,a=e._y,s=e._z,o=e._w,h=o*t+a*i-s*r,u=o*r+s*t-n*i,c=o*i+n*r-a*t,l=-n*t-a*r-s*i;return this.x=h*o+l*-n+u*-s-c*-a,this.y=u*o+l*-a+c*-n-h*-s,this.z=c*o+l*-s+h*-a-u*-n,this},applyMatrix4:function(e){var t=this.x,r=this.y,i=this.z,n=e.elements;return this.x=n[0]*t+n[4]*r+n[8]*i+n[12],this.y=n[1]*t+n[5]*r+n[9]*i+n[13],this.z=n[2]*t+n[6]*r+n[10]*i+n[14],this},applyMatrix3:function(e){var t=this.x,r=this.y,i=this.z,n=e.elements;return this.x=n[0]*t+n[3]*r+n[6]*i,this.y=n[1]*t+n[4]*r+n[7]*i,this.z=n[2]*t+n[5]*r+n[8]*i,this},transformDirection:function(e){var t=this.x,r=this.y,i=this.z,n=e.elements;return this.x=n[0]*t+n[4]*r+n[8]*i,this.y=n[1]*t+n[5]*r+n[9]*i,this.z=n[2]*t+n[6]*r+n[10]*i,this.normalize()},setFromMatrixPosition:function(e){return this.setFromMatrixColumn(e,3)},setFromMatrixColumn:function(e,t){return this.fromArray(e.elements,4*t)},fromArray:function(e,t){return void 0===t&&(t=0),this.x=e[t],this.y=e[t+1],this.z=e[t+2],this},copy:function(e){return this.x=e.x,this.y=e.y,this.z=e.z,this},addVectors:function(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this},addScalar:function(e){return this.x+=e,this.y+=e,this.z+=e,this},add:function(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this},subVectors:function(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this},sub:function(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this},multiplyScalar:function(e){return this.x*=e,this.y*=e,this.z*=e,this},distanceToSquared:function(e){var t=this.x-e.x,r=this.y-e.y,i=this.z-e.z;return t*t+r*r+i*i},distanceTo:function(e){return Math.sqrt(this.distanceToSquared(e))},setFromSpherical:function(e){var t=Math.sin(e.phi)*e.radius;return this.x=t*Math.sin(e.theta),this.y=Math.cos(e.phi)*e.radius,this.z=t*Math.cos(e.theta),this},unproject:function(e){return void 0===g&&(g=new ve),g.multiplyMatrices(e.worldMatrix,g.getInverse(e.projectionMatrix)),this.applyProjection(g)},applyProjection:function(e){var t=this.x,r=this.y,i=this.z,n=e.elements,a=1/(n[3]*t+n[7]*r+n[11]*i+n[15]);return this.x=(n[0]*t+n[4]*r+n[8]*i+n[12])*a,this.y=(n[1]*t+n[5]*r+n[9]*i+n[13])*a,this.z=(n[2]*t+n[6]*r+n[10]*i+n[14])*a,this},equals:function(e){return e.x===this.x&&e.y===this.y&&e.z===this.z},clone:function(){return new ge(this.x,this.y,this.z)}}),Object.assign(xe.prototype,{set:function(e,t){this.origin.copy(e),this.direction.copy(t)},at:function(e,t){return(t||new ge).copy(this.direction).multiplyScalar(e).add(this.origin)},intersectsSphere:(T=new ge,function(e,t){T.subVectors(e.center,this.origin);var r=T.dot(this.direction),i=T.dot(T)-r*r,n=e.radius*e.radius;if(n<i)return null;var a=Math.sqrt(n-i),s=r-a,o=r+a;return s<0&&o<0?null:s<0?this.at(o,t):this.at(s,t)}),intersectsBox:function(e,t){var r,i,n,a,s,o,h=1/this.direction.x,u=1/this.direction.y,c=1/this.direction.z,l=this.origin;return 0<=h?(r=(e.min.x-l.x)*h,i=(e.max.x-l.x)*h):(r=(e.max.x-l.x)*h,i=(e.min.x-l.x)*h),0<=u?(n=(e.min.y-l.y)*u,a=(e.max.y-l.y)*u):(n=(e.max.y-l.y)*u,a=(e.min.y-l.y)*u),a<r||i<n?null:((r<n||r!=r)&&(r=n),(a<i||i!=i)&&(i=a),0<=c?(s=(e.min.z-l.z)*c,o=(e.max.z-l.z)*c):(s=(e.max.z-l.z)*c,o=(e.min.z-l.z)*c),o<r||i<s?null:((r<s||r!=r)&&(r=s),(o<i||i!=i)&&(i=o),i<0?null:this.at(0<=r?r:i,t)))},intersectTriangle:(x=new ge,y=new ge,M=new ge,E=new ge,function(e,t,r,i,n){y.subVectors(t,e),M.subVectors(r,e),E.crossVectors(y,M);var a,s=this.direction.dot(E);if(0<s){if(i)return null;a=1}else{if(!(s<0))return null;a=-1,s=-s}x.subVectors(this.origin,e);var o=a*this.direction.dot(M.crossVectors(x,M));if(o<0)return null;var h=a*this.direction.dot(y.cross(x));if(h<0)return null;if(s<o+h)return null;var u=-a*x.dot(E);return u<0?null:this.at(u/s,n)}),copy:function(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this},applyMatrix4:function(e){return this.direction.add(this.origin).applyMatrix4(e),this.origin.applyMatrix4(e),this.direction.sub(this.origin),this.direction.normalize(),this}}),Object.assign(ye.prototype,{set:function(e,t){this.ray.set(e,t)},setFromCamera:function(e,t){this.ray.origin.setFromMatrixPosition(t.worldMatrix),this.ray.direction.set(e.x,e.y,.5).unproject(t).sub(this.ray.origin).normalize()},intersectObject:function(e,t){var r=[];return Ee(e,this,r,t),r.sort(Me),r},intersectObjects:function(e,t){var r=[];if(!1===Array.isArray(e))return console.warn("Raycaster.intersectObjects: objects is not an Array."),r;for(var i=0,n=e.length;i<n;i++)Ee(e[i],this,r,t);return r.sort(Me),r}}),Te.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"],Te.DefaultOrder="XYZ",Object.defineProperties(Te.prototype,{x:{get:function(){return this._x},set:function(e){this._x=e,this.onChangeCallback()}},y:{get:function(){return this._y},set:function(e){this._y=e,this.onChangeCallback()}},z:{get:function(){return this._z},set:function(e){this._z=e,this.onChangeCallback()}},order:{get:function(){return this._order},set:function(e){this._order=e,this.onChangeCallback()}}}),Object.assign(Te.prototype,{copyFrom:function(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this.onChangeCallback(),this},set:function(e,t,r,i){return this._x=e||0,this._y=t||0,this._z=r||0,this._order=i||this._order,this.onChangeCallback(),this},setFromRotationMatrix:function(e,t,r){var i=function(e,t,r){return Math.max(t,Math.min(r,e))},n=e.elements,a=n[0],s=n[4],o=n[8],h=n[1],u=n[5],c=n[9],l=n[2],d=n[6],p=n[10];return"XYZ"===(t=t||this._order)?(this._y=Math.asin(i(o,-1,1)),Math.abs(o)<.99999?(this._x=Math.atan2(-c,p),this._z=Math.atan2(-s,a)):(this._x=Math.atan2(d,u),this._z=0)):"YXZ"===t?(this._x=Math.asin(-i(c,-1,1)),Math.abs(c)<.99999?(this._y=Math.atan2(o,p),this._z=Math.atan2(h,u)):(this._y=Math.atan2(-l,a),this._z=0)):"ZXY"===t?(this._x=Math.asin(i(d,-1,1)),Math.abs(d)<.99999?(this._y=Math.atan2(-l,p),this._z=Math.atan2(-s,u)):(this._y=0,this._z=Math.atan2(h,a))):"ZYX"===t?(this._y=Math.asin(-i(l,-1,1)),Math.abs(l)<.99999?(this._x=Math.atan2(d,p),this._z=Math.atan2(h,a)):(this._x=0,this._z=Math.atan2(-s,u))):"YZX"===t?(this._z=Math.asin(i(h,-1,1)),Math.abs(h)<.99999?(this._x=Math.atan2(-c,u),this._y=Math.atan2(-l,a)):(this._x=0,this._y=Math.atan2(o,p))):"XZY"===t?(this._z=Math.asin(-i(s,-1,1)),Math.abs(s)<.99999?(this._x=Math.atan2(d,u),this._y=Math.atan2(o,a)):(this._x=Math.atan2(-c,p),this._y=0)):console.warn("given unsupported order: "+t),this._order=t,!1!==r&&this.onChangeCallback(),this},setFromQuaternion:(b=new ve,function(e,t,r){return e.toMatrix4(b),this.setFromRotationMatrix(b,t,r)}),onChange:function(e){return this.onChangeCallback=e,this},onChangeCallback:function(){}}),Object.assign(be.prototype,{set:function(e,t){return this.x=e||0,this.y=t||0,this},lerpVectors:function(e,t,r){return this.subVectors(t,e).multiplyScalar(r).add(e)},min:function(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this},max:function(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this},getLength:function(){return Math.sqrt(this.getLengthSquared())},getLengthSquared:function(){return this.x*this.x+this.y*this.y},normalize:function(e){e=e||1;var t=this.getLength();if(0!=t){var r=e/t;return this.x*=r,this.y*=r,this}},subtract:function(e,t){return t||(t=new be),t.set(this.x-e.x,this.y-e.y),t},copy:function(e){return this.x=e.x,this.y=e.y,this},addVectors:function(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this},subVectors:function(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this},multiplyScalar:function(e){return this.x*=e,this.y*=e,this},distanceToSquared:function(e){var t=this.x-e.x,r=this.y-e.y;return t*t+r*r},distanceTo:function(e){return Math.sqrt(this.distanceToSquared(e))},fromArray:function(e,t){return void 0===t&&(t=0),this.x=e[t],this.y=e[t+1],this},add:function(e){return this.x+=e.x,this.y+=e.y,this},clone:function(){return new be(this.x,this.y)}}),Object.assign(Se.prototype,{lerpVectors:function(e,t,r){return this.subVectors(t,e).multiplyScalar(r).add(e)},set:function(e,t,r,i){return this.x=e||0,this.y=t||0,this.z=r||0,this.w=void 0!==i?i:1,this},normalize:function(){return this.multiplyScalar(1/(this.getLength()||1))},multiplyScalar:function(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this},getLengthSquared:function(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w},getLength:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},applyMatrix4:function(e){var t=this.x,r=this.y,i=this.z,n=this.w,a=e.elements;return this.x=a[0]*t+a[4]*r+a[8]*i+a[12]*n,this.y=a[1]*t+a[5]*r+a[9]*i+a[13]*n,this.z=a[2]*t+a[6]*r+a[10]*i+a[14]*n,this.w=a[3]*t+a[7]*r+a[11]*i+a[15]*n,this},equals:function(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w},add:function(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this},multiply:function(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this},multiplyScalar:function(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this},subVectors:function(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this},copy:function(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=void 0!==e.w?e.w:1,this}}),Object.assign(we.prototype,{identity:function(){return this.set(1,0,0,0,1,0,0,0,1),this},inverse:function(){return this.getInverse(this)},getInverse:function(e){var t=e.elements,r=this.elements,i=t[0],n=t[1],a=t[2],s=t[3],o=t[4],h=t[5],u=t[6],c=t[7],l=t[8],d=l*o-h*c,p=h*u-l*s,f=c*s-o*u,_=i*d+n*p+a*f;if(0===_){return console.warn("zen3d.Matrix3: .getInverse() can't invert matrix, determinant is 0"),this.identity()}var m=1/_;return r[0]=d*m,r[1]=(a*c-l*n)*m,r[2]=(h*n-a*o)*m,r[3]=p*m,r[4]=(l*i-a*u)*m,r[5]=(a*s-h*i)*m,r[6]=f*m,r[7]=(n*u-c*i)*m,r[8]=(o*i-n*s)*m,this},transpose:function(){var e,t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this},set:function(e,t,r,i,n,a,s,o,h){var u=this.elements;return u[0]=e,u[3]=t,u[6]=r,u[1]=i,u[4]=n,u[7]=a,u[2]=s,u[5]=o,u[8]=h,this},copy:function(e){return this.elements.set(e.elements),this},multiply:function(e){return this.multiplyMatrices(this,e)},premultiply:function(e){return this.multiplyMatrices(e,this)},multiplyMatrices:function(e,t){var r=e.elements,i=t.elements,n=this.elements,a=r[0],s=r[3],o=r[6],h=r[1],u=r[4],c=r[7],l=r[2],d=r[5],p=r[8],f=i[0],_=i[3],m=i[6],v=i[1],g=i[4],x=i[7],y=i[2],M=i[5],E=i[8];return n[0]=a*f+s*v+o*y,n[3]=a*_+s*g+o*M,n[6]=a*m+s*x+o*E,n[1]=h*f+u*v+c*y,n[4]=h*_+u*g+c*M,n[7]=h*m+u*x+c*E,n[2]=l*f+d*v+p*y,n[5]=l*_+d*g+p*M,n[8]=l*m+d*x+p*E,this},transform:function(e,t,r,i,n,a,s){var o=this.elements,h=1,u=0;if(n%360){var c=n;h=Math.cos(c),u=Math.sin(c)}return o[0]=h*r,o[3]=-u*i,o[6]=e,o[1]=u*r,o[4]=h*i,o[7]=t,o[2]=0,o[5]=0,o[8]=1,(a||s)&&(o[6]-=a*o[0]+s*o[3],o[7]-=a*o[1]+s*o[4]),this},setUvTransform:function(e,t,r,i,n,a,s){var o=Math.cos(n),h=Math.sin(n);this.set(r*o,r*h,-r*(o*a+h*s)+a+e,-i*h,i*o,-i*(-h*a+o*s)+s+t,0,0,1)},setFromMatrix4:function(e){var t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this}}),Object.defineProperties(Ae.prototype,{x:{get:function(){return this._x},set:function(e){this._x=e,this.onChangeCallback()}},y:{get:function(){return this._y},set:function(e){this._y=e,this.onChangeCallback()}},z:{get:function(){return this._z},set:function(e){this._z=e,this.onChangeCallback()}},w:{get:function(){return this._w},set:function(e){this._w=e,this.onChangeCallback()}}}),Object.assign(Ae.prototype,{normalize:function(e){var t=this.length();return 0===t?(this._x=0,this._y=0,this._z=0,this._w=1):(t=1/t,this._x=this._x*t,this._y=this._y*t,this._z=this._z*t,this._w=this._w*t),this.onChangeCallback(),this},length:function(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)},lerpQuaternions:function(e,t,r){var i=e._w,n=e._x,a=e._y,s=e._z,o=t._w,h=t._x,u=t._y,c=t._z,l=i*o+n*h+a*u+s*c;l<0&&(l=-l,o=-o,h=-h,u=-u,c=-c),this._w=i+r*(o-i),this._x=n+r*(h-n),this._y=a+r*(u-a),this._z=s+r*(c-s);var d=1/Math.sqrt(this._w*this._w+this._x*this._x+this._y*this._y+this._z*this._z);return this._w*=d,this._x*=d,this._y*=d,this._z*=d,this.onChangeCallback(),this},slerpQuaternions:function(e,t,r){var i=e._w,n=e._x,a=e._y,s=e._z,o=t._w,h=t._x,u=t._y,c=t._z,l=i*o+n*h+a*u+s*c;if(l<0&&(l=-l,o=-o,h=-h,u=-u,c=-c),l<.95){var d=Math.acos(l),p=1/Math.sin(d),f=Math.sin(d*(1-r))*p,_=Math.sin(d*r)*p;this._w=i*f+o*_,this._x=n*f+h*_,this._y=a*f+u*_,this._z=s*f+c*_}else{this._w=i+r*(o-i),this._x=n+r*(h-n),this._y=a+r*(u-a),this._z=s+r*(c-s);var m=1/Math.sqrt(this._w*this._w+this._x*this._x+this._y*this._y+this._z*this._z);this._w*=m,this._x*=m,this._y*=m,this._z*=m}return this.onChangeCallback(),this},set:function(e,t,r,i){return this._x=e||0,this._y=t||0,this._z=r||0,this._w=void 0!==i?i:1,this.onChangeCallback(),this},copy:function(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=void 0!==e.w?e.w:1,this.onChangeCallback(),this},setFromEuler:function(e,t){var r=Math.cos(e._x/2),i=Math.cos(e._y/2),n=Math.cos(e._z/2),a=Math.sin(e._x/2),s=Math.sin(e._y/2),o=Math.sin(e._z/2),h=e._order;return"XYZ"===h?(this._x=a*i*n+r*s*o,this._y=r*s*n-a*i*o,this._z=r*i*o+a*s*n,this._w=r*i*n-a*s*o):"YXZ"===h?(this._x=a*i*n+r*s*o,this._y=r*s*n-a*i*o,this._z=r*i*o-a*s*n,this._w=r*i*n+a*s*o):"ZXY"===h?(this._x=a*i*n-r*s*o,this._y=r*s*n+a*i*o,this._z=r*i*o+a*s*n,this._w=r*i*n-a*s*o):"ZYX"===h?(this._x=a*i*n-r*s*o,this._y=r*s*n+a*i*o,this._z=r*i*o-a*s*n,this._w=r*i*n+a*s*o):"YZX"===h?(this._x=a*i*n+r*s*o,this._y=r*s*n+a*i*o,this._z=r*i*o-a*s*n,this._w=r*i*n-a*s*o):"XZY"===h&&(this._x=a*i*n-r*s*o,this._y=r*s*n-a*i*o,this._z=r*i*o+a*s*n,this._w=r*i*n+a*s*o),!1!==t&&this.onChangeCallback(),this},setFromRotationMatrix:function(e){var t,r=e.elements,i=r[0],n=r[4],a=r[8],s=r[1],o=r[5],h=r[9],u=r[2],c=r[6],l=r[10],d=i+o+l;return 0<d?(t=.5/Math.sqrt(d+1),this._w=.25/t,this._x=(c-h)*t,this._y=(a-u)*t,this._z=(s-n)*t):o<i&&l<i?(t=2*Math.sqrt(1+i-o-l),this._w=(c-h)/t,this._x=.25*t,this._y=(n+s)/t,this._z=(a+u)/t):l<o?(t=2*Math.sqrt(1+o-i-l),this._w=(a-u)/t,this._x=(n+s)/t,this._y=.25*t,this._z=(h+c)/t):(t=2*Math.sqrt(1+l-i-o),this._w=(s-n)/t,this._x=(a+u)/t,this._y=(h+c)/t,this._z=.25*t),this.onChangeCallback(),this},setFromUnitVectors:(w=new ge,function(e,t){return void 0===w&&(w=new ge),(S=e.dot(t)+1)<1e-6?(S=0,Math.abs(e.x)>Math.abs(e.z)?w.set(-e.y,e.x,0):w.set(0,-e.z,e.y)):w.crossVectors(e,t),this._x=w.x,this._y=w.y,this._z=w.z,this._w=S,this.normalize()}),multiply:function(e){return this.multiplyQuaternions(this,e)},premultiply:function(e){return this.multiplyQuaternions(e,this)},multiplyQuaternions:function(e,t){var r=e._x,i=e._y,n=e._z,a=e._w,s=t._x,o=t._y,h=t._z,u=t._w;return this._x=r*u+a*s+i*h-n*o,this._y=i*u+a*o+n*s-r*h,this._z=n*u+a*h+r*o-i*s,this._w=a*u-r*s-i*o-n*h,this.onChangeCallback(),this},toMatrix4:function(e){e||(e=new ve);var t=e.elements,r=2*this._x*this._y,i=2*this._x*this._z,n=2*this._x*this._w,a=2*this._y*this._z,s=2*this._y*this._w,o=2*this._z*this._w,h=this._x*this._x,u=this._y*this._y,c=this._z*this._z,l=this._w*this._w;return t[0]=h-u-c+l,t[4]=r-o,t[8]=i+s,t[12]=0,t[1]=r+o,t[5]=-h+u-c+l,t[9]=a-n,t[13]=0,t[2]=i-s,t[6]=a+n,t[10]=-h-u+c+l,t[14]=0,t[3]=0,t[7]=0,t[11]=0,t[15]=1,e},dot:function(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w},setFromAxisAngle:function(e,t){var r=t/2,i=Math.sin(r);return this._x=e.x*i,this._y=e.y*i,this._z=e.z*i,this._w=Math.cos(r),this.onChangeCallback(),this},fromArray:function(e,t){return void 0===t&&(t=0),this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this.onChangeCallback(),this},onChange:function(e){return this.onChangeCallback=e,this},onChangeCallback:function(){}}),Object.assign(Ae,{slerpFlat:function(e,t,r,i,n,a,s){var o=r[i+0],h=r[i+1],u=r[i+2],c=r[i+3],l=n[a+0],d=n[a+1],p=n[a+2],f=n[a+3];if(c!==f||o!==l||h!==d||u!==p){var _=1-s,m=o*l+h*d+u*p+c*f,v=0<=m?1:-1,g=1-m*m;if(g>Number.EPSILON){var x=Math.sqrt(g),y=Math.atan2(x,m*v);_=Math.sin(_*y)/x,s=Math.sin(s*y)/x}var M=s*v;if(o=o*_+l*M,h=h*_+d*M,u=u*_+p*M,c=c*_+f*M,_===1-s){var E=1/Math.sqrt(o*o+h*h+u*u+c*c);o*=E,h*=E,u*=E,c*=E}}e[t]=o,e[t+1]=h,e[t+2]=u,e[t+3]=c}}),Object.assign(Pe.prototype,{set:function(e,t,r,i){this.min.set(e,t),this.max.set(r,i)},copy:function(e){return this.min.copy(e.min),this.max.copy(e.max),this}}),Object.assign(Le.prototype,{set:function(e,t){this.min.copy(e),this.max.copy(t)},setFromPoints:function(e){this.makeEmpty();for(var t=0,r=e.length;t<r;t++)this.expandByPoint(e[t]);return this},makeEmpty:function(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this},expandByPoint:function(e){return this.min.min(e),this.max.max(e),this},expandByScalar:function(e){return this.min.addScalar(-e),this.max.addScalar(e),this},setFromArray:function(e,t){for(var r=1/0,i=1/0,n=1/0,a=-1/0,s=-1/0,o=-1/0,h=void 0!==t?t:3,u=0,c=e.length;u<c;u+=h){var l=e[u],d=e[u+1],p=e[u+2];l<r&&(r=l),d<i&&(i=d),p<n&&(n=p),a<l&&(a=l),s<d&&(s=d),o<p&&(o=p)}return this.min.set(r,i,n),this.max.set(a,s,o),this},isEmpty:function(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z},equals:function(e){return e.min.equals(this.min)&&e.max.equals(this.max)},getCenter:function(e){var t=e||new ge;return this.isEmpty()?t.set(0,0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)},applyMatrix4:(A=[new ge,new ge,new ge,new ge,new ge,new ge,new ge,new ge],function(e){return this.isEmpty()||(A[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),A[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),A[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),A[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),A[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),A[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),A[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),A[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(A)),this}),copy:function(e){return this.min.copy(e.min),this.max.copy(e.max),this}}),Object.assign(Ne.prototype,{set:function(e,t){return this.center.copy(e),this.radius=t,this},setFromArray:(P=new Le,L=new ge,function(e,t){var r=void 0!==t?t:3,i=this.center;P.setFromArray(e,r).getCenter(i);for(var n=0,a=0,s=e.length;a<s;a+=r){var o=e[a],h=e[a+1],u=e[a+2];L.set(o,h,u),n=Math.max(n,i.distanceToSquared(L))}return this.radius=Math.sqrt(n),this}),applyMatrix4:function(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this},getBoundingBox:function(e){var t=e||new Le;return t.set(this.center,this.center),t.expandByScalar(this.radius),t},clone:function(){return(new Ne).copy(this)},copy:function(e){return this.center.copy(e.center),this.radius=e.radius,this}}),Object.assign(Re.prototype,{set:function(e,t){return this.normal.copy(e),this.constant=t,this},setComponents:function(e,t,r,i){return this.normal.set(e,t,r),this.constant=i,this},normalize:function(){var e=1/this.normal.getLength();return this.normal.multiplyScalar(e),this.constant*=e,this},distanceToPoint:function(e){return this.normal.dot(e)+this.constant},coplanarPoint:function(e){return(e||new ge).copy(this.normal).multiplyScalar(-this.constant)},copy:function(e){return this.normal.copy(e.normal),this.constant=e.constant,this},applyMatrix4:(N=new ge,R=new we,function(e,t){var r=t||R.setFromMatrix4(e).inverse().transpose(),i=this.coplanarPoint(N).applyMatrix4(e),n=this.normal.applyMatrix3(r).normalize();return this.constant=-i.dot(n),this})}),Object.assign(Ce.prototype,{set:function(e,t,r,i,n,a){var s=this.planes;return s[0].copy(e),s[1].copy(t),s[2].copy(r),s[3].copy(i),s[4].copy(n),s[5].copy(a),this},setFromMatrix:function(e){var t=this.planes,r=e.elements,i=r[0],n=r[1],a=r[2],s=r[3],o=r[4],h=r[5],u=r[6],c=r[7],l=r[8],d=r[9],p=r[10],f=r[11],_=r[12],m=r[13],v=r[14],g=r[15];return t[0].setComponents(s-i,c-o,f-l,g-_).normalize(),t[1].setComponents(s+i,c+o,f+l,g+_).normalize(),t[2].setComponents(s+n,c+h,f+d,g+m).normalize(),t[3].setComponents(s-n,c-h,f-d,g-m).normalize(),t[4].setComponents(s-a,c-u,f-p,g-v).normalize(),t[5].setComponents(s+a,c+u,f+p,g+v).normalize(),this},intersectsSphere:function(e){for(var t=this.planes,r=e.center,i=-e.radius,n=0;n<6;n++){if(t[n].distanceToPoint(r)<i)return!1}return!0},intersectsBox:(C=new ge,O=new ge,function(e){for(var t=this.planes,r=0;r<6;r++){var i=t[r];C.x=0<i.normal.x?e.min.x:e.max.x,O.x=0<i.normal.x?e.max.x:e.min.x,C.y=0<i.normal.y?e.min.y:e.max.y,O.y=0<i.normal.y?e.max.y:e.min.y,C.z=0<i.normal.z?e.min.z:e.max.z,O.z=0<i.normal.z?e.max.z:e.min.z;var n=i.distanceToPoint(C),a=i.distanceToPoint(O);if(n<0&&a<0)return!1}return!0})}),Object.assign(Oe.prototype,{lerpColors:function(e,t,r){this.r=r*(t.r-e.r)+e.r,this.g=r*(t.g-e.g)+e.g,this.b=r*(t.b-e.b)+e.b,this.r=this.r,this.g=this.g,this.b=this.b},copy:function(e){return this.r=e.r,this.g=e.g,this.b=e.b,this},setHex:function(e){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(255&e)/255,this},setRGB:function(e,t,r){return this.r=e,this.g=t,this.b=r,this},setHSL:function(){function s(e,t,r){return r<0&&(r+=1),1<r&&(r-=1),r<1/6?e+6*(t-e)*r:r<.5?t:r<2/3?e+6*(t-e)*(2/3-r):e}return function(e,t,r){var i;if(e=(e%(i=1)+i)%i,t=Math.max(0,Math.min(1,t)),r=Math.max(0,Math.min(1,r)),0===t)this.r=this.g=this.b=r;else{var n=r<=.5?r*(1+t):r+t-r*t,a=2*r-n;this.r=s(a,n,e+1/3),this.g=s(a,n,e),this.b=s(a,n,e-1/3)}return this}}(),fromArray:function(e,t){return void 0===t&&(t=0),this.r=e[t],this.g=e[t+1],this.b=e[t+2],this},toArray:function(e,t){return void 0===e&&(e=[]),void 0===t&&(t=0),e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}}),Object.assign(Ue.prototype,{set:function(e,t,r){return this.a.copy(e),this.b.copy(t),this.c.copy(r),this}}),Ue.normal=(U=new ge,function(e,t,r,i){var n=i||new ge;n.subVectors(r,t),U.subVectors(e,t),n.cross(U);var a=n.getLengthSquared();return 0<a?n.multiplyScalar(1/Math.sqrt(a)):n.set(0,0,0)}),Ue.barycoordFromPoint=(I=new ge,F=new ge,D=new ge,function(e,t,r,i,n){I.subVectors(i,t),F.subVectors(r,t),D.subVectors(e,t);var a=I.dot(I),s=I.dot(F),o=I.dot(D),h=F.dot(F),u=F.dot(D),c=a*h-s*s,l=n||new ge;if(0===c)return l.set(-2,-1,-1);var d=1/c,p=(h*o-s*u)*d,f=(a*u-s*o)*d;return l.set(1-p-f,f,p)}),Ue.containsPoint=(z=new ge,function(e,t,r,i){var n=Ue.barycoordFromPoint(e,t,r,i,z);return 0<=n.x&&0<=n.y&&n.x+n.y<=1}),Object.assign(Ie.prototype,{set:function(e,t){this.posPoints=e,this.ctrlPoints=t,e.length!==t.length&&console.warn("Curve: posPoints and ctrlPoints's length not equal!"),this.segCount=e.length-1},calc:(B=new be,G=new be,k=new be,V=new be,function(e){for(var t=0;t<this.segCount;t++)if(e>=this.posPoints[t].x&&e<=this.posPoints[t+1].x){B.copy(this.posPoints[t]),k.copy(this.posPoints[t+1]),G.copy(this.ctrlPoints[t]),V.copy(this.ctrlPoints[t+1]);break}return B||B.copy(this.posPoints[this.posPoints.length-1]),G||G.copy(this.ctrlPoints[this.ctrlPoints.length-1]),k.copy(k||B),V.copy(V||G),e=(e-B.x)/(k.x-B.x),this._cubic_bezier(B.y,G.y,V.y,k.y,e)}),averageXSampler:function(e){e<2&&console.warn("Curve: sampler num less than 2!");for(var t=[],r=this.posPoints[0].x,i=this.posPoints[this.posPoints.length-1].x,n=(i-r)/(e-1),a=0,s=0;s<e;s++)a=s===e-1?i:r+s*n,t.push(a,this.calc(a));return t},_cubic_bezier:function(e,t,r,i,n){return e=this._mix(e,t,n),t=this._mix(t,r,n),r=this._mix(r,i,n),e=this._mix(e,t,n),t=this._mix(t,r,n),e=this._mix(e,t,n)},_mix:function(e,t,r){return e*(1-r)+t*r}}),Object.assign(Fe.prototype,{set:function(e,t,r){return this.radius=e,this.phi=t,this.theta=r,this},copy:function(e){return this.radius=e.radius,this.phi=e.phi,this.theta=e.theta,this},clone:function(){return(new this.constructor).copy(this)},makeSafe:function(){return this.phi=Math.max(1e-6,Math.min(Math.PI-1e-6,this.phi)),this},setFromVector3:function(e){return this.radius=e.getLength(),0===this.radius?(this.theta=0,this.phi=0):(this.theta=Math.atan2(e.x,e.z),this.phi=Math.acos(Math.min(1,Math.max(-1,e.y/this.radius)))),this}}),De.prototype=Object.assign(Object.create(me.prototype),{constructor:De,clone:function(){return(new this.constructor).copy(this)},copy:function(e){return this.textureType=e.textureType,this.border=e.border,this.pixelFormat=e.pixelFormat,this.pixelType=e.pixelType,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.anisotropy=e.anisotropy,this.generateMipmaps=e.generateMipmaps,this.encoding=e.encoding,this.flipY=e.flipY,this.version=e.version,this},dispose:function(){this.dispatchEvent({type:"dispose"}),this.version=0}}),Object.assign(ze.prototype,{load:function(e,t,r,i){void 0===e&&(e=""),void 0!==this.path&&(e=this.path+e);var n=document.createElementNS("http://www.w3.org/1999/xhtml","img");return n.addEventListener("load",function(){t&&t(this)},!1),n.addEventListener("error",function(e){i&&i(e)},!1),"data:"!==e.substr(0,5)&&void 0!==this.crossOrigin&&(n.crossOrigin=this.crossOrigin),n.src=e,n},setCrossOrigin:function(e){return this.crossOrigin=e,this},setPath:function(e){return this.path=e,this}}),Object.assign(Be.prototype,{load:function(e,r,t,i){void 0===e&&(e=""),null!=this.path&&(e=this.path+e);var n=e.match(/^data:(.*?)(;base64)?,(.*)$/);if(n){var a=n[1],s=!!n[2],o=n[3];o=window.decodeURIComponent(o),s&&(o=window.atob(o));try{var h,u=(this.responseType||"").toLowerCase();switch(u){case"arraybuffer":case"blob":h=new ArrayBuffer(o.length);for(var c=new Uint8Array(h),l=0;l<o.length;l++)c[l]=o.charCodeAt(l);"blob"===u&&(h=new Blob([h],{type:a}));break;case"document":var d=new DOMParser;h=d.parseFromString(o,a);break;case"json":h=JSON.parse(o);break;default:h=o}window.setTimeout(function(){r&&r(h)},0)}catch(e){window.setTimeout(function(){i&&i(e)},0)}}else{var p=new XMLHttpRequest;for(var f in p.open("GET",e,!0),p.addEventListener("load",function(e){var t=e.target.response;200===this.status?r&&r(t):0===this.status?(console.warn("THREE.FileLoader: HTTP Status 0 received."),r&&r(t)):i&&i(e)},!1),void 0!==t&&p.addEventListener("progress",function(e){t(e)},!1),void 0!==i&&p.addEventListener("error",function(e){i(e)},!1),void 0!==this.responseType&&(p.responseType=this.responseType),void 0!==this.withCredentials&&(p.withCredentials=this.withCredentials),p.overrideMimeType&&p.overrideMimeType(void 0!==this.mimeType?this.mimeType:"text/plain"),this.requestHeader)p.setRequestHeader(f,this.requestHeader[f]);p.send(null)}},setPath:function(e){return this.path=e,this},setResponseType:function(e){return this.responseType=e,this},setWithCredentials:function(e){return this.withCredentials=e,this},setMimeType:function(e){return this.mimeType=e,this},setRequestHeader:function(e){return this.requestHeader=e,this}}),Object.assign(Ge.prototype,{load:function(e,t,r,i){var n=this,a=new Be;a.setResponseType("arraybuffer"),a.load(e,function(e){void 0!==t&&t(n.parse(e))},r,i)},parse:function(e){var t=0,r=1,i=2,n=3,a=9,s=10,o=11,l=48,d=4,p=0,f=1,_=2,m=3;e.length<19&&console.error("TGALoader.parse: Not enough data to contain header.");var h=new Uint8Array(e),u=0,v={id_length:h[u++],colormap_type:h[u++],image_type:h[u++],colormap_index:h[u++]|h[u++]<<8,colormap_length:h[u++]|h[u++]<<8,colormap_size:h[u++],origin:[h[u++]|h[u++]<<8,h[u++]|h[u++]<<8],width:h[u++]|h[u++]<<8,height:h[u++]|h[u++]<<8,pixel_size:h[u++],flags:h[u++]};!function(e){switch(e.image_type){case r:case a:(256<e.colormap_length||24!==e.colormap_size||1!==e.colormap_type)&&console.error("TGALoader.parse.tgaCheckHeader: Invalid type colormap data for indexed type");break;case i:case n:case s:case o:e.colormap_type&&console.error("TGALoader.parse.tgaCheckHeader: Invalid type colormap data for colormap type");break;case t:console.error("TGALoader.parse.tgaCheckHeader: No data");default:console.error('TGALoader.parse.tgaCheckHeader: Invalid type " '+e.image_type+'"')}(e.width<=0||e.height<=0)&&console.error("TGALoader.parse.tgaCheckHeader: Invalid image size"),8!==e.pixel_size&&16!==e.pixel_size&&24!==e.pixel_size&&32!==e.pixel_size&&console.error('TGALoader.parse.tgaCheckHeader: Invalid pixel size "'+e.pixel_size+'"')}(v),v.id_length+u>e.length&&console.error("TGALoader.parse: No data"),u+=v.id_length;var c=!1,g=!1,x=!1;switch(v.image_type){case a:g=c=!0;break;case r:g=!0;break;case s:c=!0;break;case i:break;case o:x=c=!0;break;case n:x=!0}var y=document.createElement("canvas");y.width=v.width,y.height=v.height;var M=y.getContext("2d"),E=M.createImageData(v.width,v.height),T=function(e,t,r,i,n){var a,s,o,h;if(s=r.pixel_size>>3,o=r.width*r.height*s,t&&(h=n.subarray(i,i+=r.colormap_length*(r.colormap_size>>3))),e){var u,c,l;a=new Uint8Array(o);for(var d=0,p=new Uint8Array(s);d<o;)if(c=1+(127&(u=n[i++])),128&u){for(l=0;l<s;++l)p[l]=n[i++];for(l=0;l<c;++l)a.set(p,d+l*s);d+=s*c}else{for(c*=s,l=0;l<c;++l)a[d+l]=n[i++];d+=c}}else a=n.subarray(i,i+=t?r.width*r.height:o);return{pixel_data:a,palettes:h}}(c,g,v,u,h);!function(e,t,r,i,n){var a,s,o,h,u,c;switch((v.flags&l)>>d){default:case _:u=t,s=a=0,h=o=1,c=r;break;case p:a=0,u=t,s=r-(o=1),c=h=-1;break;case m:a=t-1,u=o=-1,s=0,h=1,c=r;break;case f:a=t-1,s=r-1,c=h=u=o=-1}if(x)switch(v.pixel_size){case 8:!function(e,t,r,i,n,a,s,o){var h,u,c,l=0,d=v.width;for(c=t;c!==i;c+=r)for(u=n;u!==s;u+=a,l++)h=o[l],e[4*(u+d*c)+0]=h,e[4*(u+d*c)+1]=h,e[4*(u+d*c)+2]=h,e[4*(u+d*c)+3]=255}(e,s,h,c,a,o,u,i);break;case 16:!function(e,t,r,i,n,a,s,o){var h,u,c=0,l=v.width;for(u=t;u!==i;u+=r)for(h=n;h!==s;h+=a,c+=2)e[4*(h+l*u)+0]=o[c+0],e[4*(h+l*u)+1]=o[c+0],e[4*(h+l*u)+2]=o[c+0],e[4*(h+l*u)+3]=o[c+1]}(e,s,h,c,a,o,u,i);break;default:console.error("TGALoader.parse.getTgaRGBA: not support this format")}else switch(v.pixel_size){case 8:!function(e,t,r,i,n,a,s,o,h){var u,c,l,d=h,p=0,f=v.width;for(l=t;l!==i;l+=r)for(c=n;c!==s;c+=a,p++)u=o[p],e[4*(c+f*l)+3]=255,e[4*(c+f*l)+2]=d[3*u+0],e[4*(c+f*l)+1]=d[3*u+1],e[4*(c+f*l)+0]=d[3*u+2]}(e,s,h,c,a,o,u,i,n);break;case 16:!function(e,t,r,i,n,a,s,o){var h,u,c,l=0,d=v.width;for(c=t;c!==i;c+=r)for(u=n;u!==s;u+=a,l+=2)h=o[l+0]+(o[l+1]<<8),e[4*(u+d*c)+0]=(31744&h)>>7,e[4*(u+d*c)+1]=(992&h)>>2,e[4*(u+d*c)+2]=(31&h)>>3,e[4*(u+d*c)+3]=32768&h?0:255}(e,s,h,c,a,o,u,i);break;case 24:!function(e,t,r,i,n,a,s,o){var h,u,c=0,l=v.width;for(u=t;u!==i;u+=r)for(h=n;h!==s;h+=a,c+=3)e[4*(h+l*u)+3]=255,e[4*(h+l*u)+2]=o[c+0],e[4*(h+l*u)+1]=o[c+1],e[4*(h+l*u)+0]=o[c+2]}(e,s,h,c,a,o,u,i);break;case 32:!function(e,t,r,i,n,a,s,o){var h,u,c=0,l=v.width;for(u=t;u!==i;u+=r)for(h=n;h!==s;h+=a,c+=4)e[4*(h+l*u)+2]=o[c+0],e[4*(h+l*u)+1]=o[c+1],e[4*(h+l*u)+0]=o[c+2],e[4*(h+l*u)+3]=o[c+3]}(e,s,h,c,a,o,u,i);break;default:console.error("TGALoader.parse.getTgaRGBA: not support this format")}}(E.data,v.width,v.height,T.pixel_data,T.palettes);return M.putImageData(E,0,0),y}}),ke.prototype=Object.assign(Object.create(De.prototype),{constructor:ke,copy:function(e){return De.prototype.copy.call(this,e),this.image=e.image,this.mipmaps=e.mipmaps.slice(0),this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this},updateMatrix:function(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}}),ke.fromImage=function(e){var t=new ke;return t.image=e,t.version++,t},ke.fromSrc=function(e){var t=new ke,r=0<e.search(/\.(jpg|jpeg)$/)||0===e.search(/^data\:image\/jpeg/);return(0<e.search(/\.(tga)$/)||0===e.search(/^data\:image\/tga/)?new Ge:new ze).load(e,function(e){t.pixelFormat=r?ae.RGB:ae.RGBA,t.image=e,t.version++,t.dispatchEvent({type:"onload"})}),t},Ve.prototype=Object.assign(Object.create(De.prototype),{constructor:Ve,copy:function(e){return De.prototype.copy.call(this,e),this.images=e.images.slice(0),this}}),Ve.fromImage=function(e){for(var t=new Ve,r=t.images,i=0;i<6;i++)r[i]=e[i];return t.version++,t},Ve.fromSrc=function(r){var i=new Ve,n=i.images,e=r[0],a=0<e.search(/\.(jpg|jpeg)$/)||0===e.search(/^data\:image\/jpeg/),s=0<e.search(/\.(tga)$/)||0===e.search(/^data\:image\/tga/),o=0;return function e(t){if(t&&(n.push(t),o++),6<=o)return i.pixelFormat=a?ae.RGB:ae.RGBA,i.version++,void i.dispatchEvent({type:"onload"});(s?new Ge:new ze).load(r[o],e)}(),i},He.prototype=Object.assign(Object.create(ke.prototype),{constructor:He,isDataTexture:!0}),je.prototype=Object.assign(Object.create(ke.prototype),{constructor:je,isDepthTexture:!0}),Object.defineProperties(Xe.prototype,{rotation:{get:function(){return this.euler},set:function(e){this.euler.copyFrom(e),this.quaternion.setFromEuler(e)}}}),Object.assign(Xe.prototype,{onBeforeRender:function(){},onAfterRender:function(){},add:function(e){this.children.push(e),e.parent=this},remove:function(e){var t=this.children.indexOf(e);-1!==t&&this.children.splice(t,1),e.parent=null},getObjectByName:function(e){return this.getObjectByProperty("name",e)},getObjectByProperty:function(e,t){if(this[e]===t)return this;for(var r=0,i=this.children.length;r<i;r++){var n=this.children[r].getObjectByProperty(e,t);if(void 0!==n)return n}},updateMatrix:function(){var e=this.matrix.transform(this.position,this.scale,this.quaternion);if(this.worldMatrix.copy(e),this.parent){var t=this.parent.worldMatrix;this.worldMatrix.premultiply(t)}for(var r=this.children,i=0,n=r.length;i<n;i++)r[i].updateMatrix()},getWorldDirection:(j=new ge,X=new Ae,W=new ge,function(e){var t=e||new ge;return this.worldMatrix.decompose(j,X,W),t.set(0,0,1).applyQuaternion(X),t}),lookAt:(H=new ve,function(e,t){H.lookAtRH(e,this.position,t),this.quaternion.setFromRotationMatrix(H)}),raycast:function(){},traverse:function(e){e(this);for(var t=this.children,r=0,i=t.length;r<i;r++)t[r].traverse(e)},clone:function(e){return(new this.constructor).copy(this,e)},copy:function(e,t){if(void 0===t&&(t=!0),this.name=e.name,this.type=e.type,this.position.copy(e.position),this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.worldMatrix.copy(e.worldMatrix),this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.userData=JSON.parse(JSON.stringify(e.userData)),!0===t)for(var r=0;r<e.children.length;r++){var i=e.children[r];this.add(i.clone())}return this}}),(We.prototype=Object.create(Xe.prototype)).constructor=We,Object.assign(Ye.prototype,{updateBones:(Y=new ve,function(){for(var e=0;e<this.bones.length;e++){var t=this.bones[e];Y.multiplyMatrices(t.worldMatrix,t.offsetMatrix),Y.toArray(this.boneMatrices,16*e)}void 0!==this.boneTexture&&this.boneTexture.version++}),getBoneByName:function(e){for(var t=0,r=this.bones.length;t<r;t++){var i=this.bones[t];if(i.name===e)return i}}}),Object.assign(Qe.prototype,{parseBinding:function(e,t){if(1<(t=t.split(".")).length){for(var r=e[t[0]],i=1;i<t.length-1;i++)r=r[t[i]];this.property=t[t.length-1],this.target=r}else this.property=t[0],this.target=e},accumulate:function(e){var t=this.buffer,r=this.valueSize,i=r,n=this.cumulativeWeight;if(0===n){for(var a=0;a!==r;++a)t[i+a]=t[a];n=e}else{var s=e/(n+=e);this._mixBufferFunction(t,i,0,s,r)}this.cumulativeWeight=n},apply:function(){var e=this.buffer,t=this.valueSize;this.cumulativeWeight;this.cumulativeWeight=0,1<this.valueSize?this.target[this.property].fromArray(e,t):this.target[this.property]=e[t]}}),Object.assign(Je.prototype,{add:function(e){if(void 0===this._clips[e.name]){for(var t=e.tracks,r=0;r<t.length;r++){var i,n=t[r],a=n.name;this._bindings[a]?i=this._bindings[a]:(i=new Qe(n.target,n.propertyPath,n.valueTypeName,n.valueSize),this._bindings[a]=i),i.referenceCount++}this._clips[e.name]=e}else console.warn("AnimationMixer.add: already has clip: "+e.name)},remove:function(e){if(this._clips[e.name]){for(var t=e.tracks,r=0;r<t.length;r++){var i=t[r].name,n=this._bindings[i];n&&n.referenceCount--,n.referenceCount<=0&&delete this._bindings[i]}delete this._clips[e.name]}else console.warn("AnimationMixer.remove: has no clip: "+e.name)},play:function(e,t){if(void 0===this._activeClips[e]){this._activeClips[e]=void 0===t?1:t;var r=this._clips[e];if(r){r.frame=0;for(var i=r.tracks,n=0;n<i.length;n++){var a=i[n].name,s=this._bindings[a];s&&s.useCount++}}else console.warn("AnimationMixer.stop: clip "+e+" is not found.")}else console.warn("AnimationMixer.play: clip "+e+" is playing.")},stop:function(e){if(void 0!==this._activeClips[e]){delete this._activeClips[e];var t=this._clips[e];if(t)for(var r=t.tracks,i=0;i<r.length;i++){var n=r[i].name,a=this._bindings[n];a&&0<a.useCount&&a.useCount--}else console.warn("AnimationMixer.stop: clip "+e+" is not found.")}else console.warn("AnimationMixer.stop: clip "+e+" is not playing.")},update:function(e){for(var t in this._activeClips){var r=this._clips[t],i=this._activeClips[t];r.update(e,this._bindings,i)}for(var n in this._bindings)0<this._bindings[n].useCount&&this._bindings[n].apply()},setClipWeight:function(e,t){void 0!==this._activeClips[e]?this._activeClips[e]=t:console.warn("AnimationMixer.stop: clip "+e+" is not playing.")},getAllClipNames:function(){var e=[];for(var t in this._clips)e.push(t);return e}}),Object.assign($e.prototype,{_getLastTimeIndex:function(e){var t,r=0,i=this.times.length;for(t=0;t<i;t++)e>=this.times[t]&&(r=t);return r},getValue:function(e,t){for(var r,i,n=this._getLastTimeIndex(e),a=this.times,s=this.values,o=this.valueSize,h=a[n],u=a[n+1],c=0;c<o;c++)if(r=s[n*o+c],i=s[(n+1)*o+c],this.interpolant)if(void 0!==r&&void 0!==i){var l=(e-h)/(u-h);t[c]=r*(1-l)+i*l}else t[c]=r;else t[c]=r}}),et.prototype=Object.assign(Object.create($e.prototype),{constructor:et,valueTypeName:"bool",getValue:function(e,t){var r=this._getLastTimeIndex(e),i=this.times[r];t[0]=this.values[i]}}),tt.prototype=Object.assign(Object.create($e.prototype),{constructor:tt,valueTypeName:"color"}),Object.assign(rt.prototype,{update:function(e,t,r){this.frame+=e,this.frame>this.endFrame&&(this.loop?this.frame=this.startFrame:this.frame=this.endFrame);for(var i=0,n=this.tracks.length;i<n;i++){var a=this.tracks[i],s=t[a.name];a.getValue(this.frame,s.buffer),s.accumulate(r)}}}),it.prototype=Object.assign(Object.create($e.prototype),{constructor:it,valueTypeName:"number"}),nt.prototype=Object.assign(Object.create($e.prototype),{constructor:nt,valueTypeName:"quaternion",getValue:function(e,t){var r=this._getLastTimeIndex(e),i=this.times,n=this.values,a=i[r],s=i[r+1];if(this.interpolant)if(void 0!==s)Ae.slerpFlat(t,0,n,4*r,n,4*(r+1),(e-a)/(s-a));else for(var o=0;o<4;o++)t[o]=n[4*r+o];else for(o=0;o<4;o++)t[o]=n[4*r+o]}}),at.prototype=Object.assign(Object.create($e.prototype),{constructor:at,valueTypeName:"string",getValue:function(e,t){var r=this._getLastTimeIndex(e),i=this.times[r];t[0]=this.values[i]}}),st.prototype=Object.assign(Object.create($e.prototype),{constructor:st,valueTypeName:"vector"}),Object.assign(ot.prototype,{setArray:function(e){this.count=void 0!==e?e.length/this.size:0,this.array=e}}),ht.prototype=Object.assign(Object.create(me.prototype),{constructor:ht,addAttribute:function(e,t){this.attributes[e]=t},getAttribute:function(e){return this.attributes[e]},removeAttribute:function(e){delete this.attributes[e]},setIndex:function(e){Array.isArray(e)?this.index=new ot(new Uint16Array(e),1):this.index=e},addGroup:function(e,t,r){this.groups.push({start:e,count:t,materialIndex:void 0!==r?r:0})},clearGroups:function(){this.groups=[]},computeBoundingBox:function(){var e=this.attributes.a_Position||this.attributes.position;if(e.isInterleavedBufferAttribute){var t=e.data;this.boundingBox.setFromArray(t.array,t.stride)}else this.boundingBox.setFromArray(e.array,e.size)},computeBoundingSphere:function(){var e=this.attributes.a_Position||this.attributes.position;if(e.isInterleavedBufferAttribute){var t=e.data;this.boundingSphere.setFromArray(t.array,t.stride)}else this.boundingSphere.setFromArray(e.array,e.size)},dispose:function(){this.dispatchEvent({type:"dispose"})}}),ut.prototype=Object.assign(Object.create(ht.prototype),{constructor:ut,buildGeometry:function(e,t,r,i,n,a){var L=this;e=e||1,t=t||1,r=r||1,i=Math.floor(i)||1,n=Math.floor(n)||1,a=Math.floor(a)||1;var N=[],R=[],C=[],O=[],U=0,I=0;function s(e,t,r,i,n,a,s,o,h,u,c){var l,d,p=a/h,f=s/u,_=a/2,m=s/2,v=o/2,g=h+1,x=u+1,y=0,M=0,E=new ge;for(d=0;d<x;d++){var T=d*f-m;for(l=0;l<g;l++){var b=l*p-_;E[e]=b*i,E[t]=T*n,E[r]=v,R.push(E.x,E.y,E.z),E[e]=0,E[t]=0,E[r]=0<o?1:-1,C.push(E.x,E.y,E.z),O.push(l/h),O.push(1-d/u),y+=1}}for(d=0;d<u;d++)for(l=0;l<h;l++){var S=U+l+g*d,w=U+l+g*(d+1),A=U+(l+1)+g*(d+1),P=U+(l+1)+g*d;N.push(S,w,P),N.push(w,A,P),M+=6}L.addGroup(I,M,c),I+=M,U+=y}s("z","y","x",-1,-1,r,t,e,a,n,0),s("z","y","x",1,-1,r,t,-e,a,n,1),s("x","z","y",1,1,e,r,t,i,a,2),s("x","z","y",1,-1,e,r,-t,i,a,3),s("x","y","z",1,-1,e,t,r,i,n,4),s("x","y","z",-1,-1,e,t,-r,i,n,5),this.setIndex(N),this.addAttribute("a_Position",new ot(new Float32Array(R),3)),this.addAttribute("a_Normal",new ot(new Float32Array(C),3)),this.addAttribute("a_Uv",new ot(new Float32Array(O),2)),this.computeBoundingBox(),this.computeBoundingSphere()}}),ct.prototype=Object.assign(Object.create(ht.prototype),{constructor:ct,buildGeometry:function(v,g,x,y,M,e,E,T){var b=this;v=void 0!==v?v:1,g=void 0!==g?g:1,x=x||1,y=Math.floor(y)||8,M=Math.floor(M)||1,e=void 0!==e&&e,E=void 0!==E?E:0,T=void 0!==T?T:2*Math.PI;var S=[],w=[],A=[],P=[],L=0,N=[],R=x/2,C=0;function t(e){var t,r,i,n=new be,a=new ge,s=0,o=!0===e?v:g,h=!0===e?1:-1;for(r=L,t=1;t<=y;t++)w.push(0,R*h,0),A.push(0,h,0),P.push(.5,.5),L++;for(i=L,t=0;t<=y;t++){var u=t/y*T+E,c=Math.cos(u),l=Math.sin(u);a.x=o*l,a.y=R*h,a.z=o*c,w.push(a.x,a.y,a.z),A.push(0,h,0),n.x=.5*c+.5,n.y=.5*l*h+.5,P.push(n.x,n.y),L++}for(t=0;t<y;t++){var d=r+t,p=i+t;!0===e?S.push(p,p+1,d):S.push(p+1,p,d),s+=3}b.addGroup(C,s,!0===e?1:2),C+=s}!function(){var e,t,r=new ge,i=new ge,n=0,a=(g-v)/x;for(t=0;t<=M;t++){var s=[],o=t/M,h=o*(g-v)+v;for(e=0;e<=y;e++){var u=e/y,c=u*T+E,l=Math.sin(c),d=Math.cos(c);i.x=h*l,i.y=-o*x+R,i.z=h*d,w.push(i.x,i.y,i.z),r.set(l,a,d).normalize(),A.push(r.x,r.y,r.z),P.push(u,1-o),s.push(L++)}N.push(s)}for(e=0;e<y;e++)for(t=0;t<M;t++){var p=N[t][e],f=N[t+1][e],_=N[t+1][e+1],m=N[t][e+1];S.push(p,f,m),S.push(f,_,m),n+=6}b.addGroup(C,n,0),C+=n}(),!1===e&&(0<v&&t(!0),0<g&&t(!1)),this.setIndex(S),this.addAttribute("a_Position",new ot(new Float32Array(w),3)),this.addAttribute("a_Normal",new ot(new Float32Array(A),3)),this.addAttribute("a_Uv",new ot(new Float32Array(P),2)),this.computeBoundingBox(),this.computeBoundingSphere()}}),lt.prototype=Object.assign(Object.create(ot.prototype),{constructor:lt,isInstancedBufferAttribute:!0}),dt.prototype=Object.assign(Object.create(ht.prototype),{constructor:dt,isInstancedGeometry:!0}),Object.assign(pt.prototype,{setArray:function(e){this.count=void 0!==e?e.length/this.stride:0,this.array=e}}),ft.prototype=Object.assign(Object.create(pt.prototype),{constructor:ft,isInstancedInterleavedBuffer:!0}),_t.prototype.isInterleavedBufferAttribute=!0,Object.defineProperties(_t.prototype,{count:{get:function(){return this.data.count}},array:{get:function(){return this.data.array}}}),mt.prototype=Object.assign(Object.create(ht.prototype),{constructor:mt,buildGeometry:function(e,t,r,i){var n,a,s=(e=e||1)/2,o=(t=t||1)/2,h=Math.floor(r)||1,u=Math.floor(i)||1,c=h+1,l=u+1,d=e/h,p=t/u,f=[],_=[],m=[],v=[];for(a=0;a<l;a++){var g=a*p-o;for(n=0;n<c;n++){var x=n*d-s;_.push(x,0,g),m.push(0,1,0),v.push(n/h),v.push(1-a/u)}}for(a=0;a<u;a++)for(n=0;n<h;n++){var y=n+c*a,M=n+c*(a+1),E=n+1+c*(a+1),T=n+1+c*a;f.push(y,M,T),f.push(M,E,T)}this.setIndex(f),this.addAttribute("a_Position",new ot(new Float32Array(_),3)),this.addAttribute("a_Normal",new ot(new Float32Array(m),3)),this.addAttribute("a_Uv",new ot(new Float32Array(v),2)),this.computeBoundingBox(),this.computeBoundingSphere()}}),vt.prototype=Object.assign(Object.create(ht.prototype),{constructor:vt,buildGeometry:function(e,t,r,i,n,a,s){e=e||1,t=Math.max(3,Math.floor(t)||8),r=Math.max(2,Math.floor(r)||6),i=void 0!==i?i:0,n=void 0!==n?n:2*Math.PI;var o,h,u=(a=void 0!==a?a:0)+(s=void 0!==s?s:Math.PI),c=0,l=[],d=new ge,p=new ge,f=[],_=[],m=[],v=[];for(h=0;h<=r;h++){var g=[],x=h/r;for(o=0;o<=t;o++){var y=o/t;d.x=-e*Math.cos(i+y*n)*Math.sin(a+x*s),d.y=e*Math.cos(a+x*s),d.z=e*Math.sin(i+y*n)*Math.sin(a+x*s),_.push(d.x,d.y,d.z),p.set(d.x,d.y,d.z).normalize(),m.push(p.x,p.y,p.z),v.push(y,1-x),g.push(c++)}l.push(g)}for(h=0;h<r;h++)for(o=0;o<t;o++){var M=l[h][o+1],E=l[h][o],T=l[h+1][o],b=l[h+1][o+1];(0!==h||0<a)&&f.push(M,E,b),(h!==r-1||u<Math.PI)&&f.push(E,T,b)}this.setIndex(f),this.addAttribute("a_Position",new ot(new Float32Array(_),3)),this.addAttribute("a_Normal",new ot(new Float32Array(m),3)),this.addAttribute("a_Uv",new ot(new Float32Array(v),2)),this.computeBoundingBox(),this.computeBoundingSphere()}}),Object.assign(gt.prototype,{copy:function(e){return this.type=e.type,this.opacity=e.opacity,this.transparent=e.transparent,this.premultipliedAlpha=e.premultipliedAlpha,this.vertexColors=e.vertexColors,this.diffuse.copy(e.diffuse),this.diffuseMap=e.diffuseMap,this.normalMap=e.normalMap,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.envMap=e.envMap,this.envMapIntensity=e.envMapIntensity,this.envMapCombine=e.envMapCombine,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.blending=e.blending,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.alphaTest=e.alphaTest,this.side=e.side,this.shading=e.shading,this.acceptLight=e.acceptLight,this.drawMode=e.drawMode,this},clone:function(){return(new this.constructor).copy(this)}}),xt.prototype=Object.assign(Object.create(gt.prototype),{constructor:xt}),yt.prototype=Object.assign(Object.create(gt.prototype),{constructor:yt}),Mt.prototype=Object.assign(Object.create(gt.prototype),{constructor:Mt,copy:function(e){return gt.prototype.copy.call(this,e),this.shininess=e.shininess,this.specular.copy(e.specular),this.specularMap=e.specularMap,this}}),Et.prototype=Object.assign(Object.create(gt.prototype),{constructor:Et,copy:function(e){return gt.prototype.copy.call(this,e),this.roughness=e.roughness,this.metalness=e.metalness,this}}),Tt.prototype=Object.assign(Object.create(gt.prototype),{constructor:Tt,copy:function(e){return gt.prototype.copy.call(this,e),this.size=e.size,this.sizeAttenuation=e.sizeAttenuation,this}}),bt.prototype=Object.assign(Object.create(gt.prototype),{constructor:bt,copy:function(e){return gt.prototype.copy.call(this,e),this.lineWidth=e.lineWidth,this}}),St.prototype=Object.assign(Object.create(gt.prototype),{constructor:St,copy:function(e){return gt.prototype.copy.call(this,e),this.lineWidth=e.lineWidth,this}}),wt.prototype=Object.assign(Object.create(gt.prototype),{constructor:wt,copy:function(e){return gt.prototype.copy.call(this,e),this.lineWidth=e.lineWidth,this.scale=e.scale,this.dashSize=e.dashSize,this.gapSize=e.gapSize,this}}),At.prototype=Object.assign(Object.create(gt.prototype),{constructor:At,copy:function(e){return gt.prototype.copy.call(this,e),this.vertexShader=e.vertexShader,this.fragmentShader=e.fragmentShader,this}}),Pt.prototype=Object.assign(Object.create(gt.prototype),{constructor:Pt}),Lt.prototype=Object.assign(Object.create(gt.prototype),{constructor:Lt}),Object.assign(Ct.prototype,{setBlend:function(e,t,r,i,n,a,s,o){var h=this.gl;e!==J.NONE?this.enable(h.BLEND):this.disable(h.BLEND),e!==J.CUSTOM?(e===this.currentBlending&&o===this.currentPremultipliedAlpha||(e===J.NORMAL&&(o?(h.blendEquationSeparate(h.FUNC_ADD,h.FUNC_ADD),h.blendFuncSeparate(h.ONE,h.ONE_MINUS_SRC_ALPHA,h.ONE,h.ONE_MINUS_SRC_ALPHA)):(h.blendEquationSeparate(h.FUNC_ADD,h.FUNC_ADD),h.blendFuncSeparate(h.SRC_ALPHA,h.ONE_MINUS_SRC_ALPHA,h.ONE,h.ONE_MINUS_SRC_ALPHA))),e===J.ADD&&(o?(h.blendEquationSeparate(h.FUNC_ADD,h.FUNC_ADD),h.blendFuncSeparate(h.ONE,h.ONE,h.ONE,h.ONE)):(h.blendEquation(h.FUNC_ADD),h.blendFunc(h.SRC_ALPHA,h.ONE)))),this.currentBlendEquation=null,this.currentBlendSrc=null,this.currentBlendDst=null,this.currentBlendEquationAlpha=null,this.currentBlendSrcAlpha=null,this.currentBlendDstAlpha=null):(n=n||t,a=a||r,s=s||i,t===this.currentBlendEquation&&n===this.currentBlendEquationAlpha||(h.blendEquationSeparate(t,n),this.currentBlendEquation=t,this.currentBlendEquationAlpha=n),r===this.currentBlendSrc&&i===this.currentBlendDst&&a===this.currentBlendSrcAlpha&&s===this.currentBlendDstAlpha||(h.blendFuncSeparate(r,i,a,s),this.currentBlendSrc=r,this.currentBlendDst=i,this.currentBlendSrcAlpha=a,this.currentBlendDstAlpha=s)),this.currentBlending=e,this.currentPremultipliedAlpha=o},setFlipSided:function(e){var t=this.gl;this.currentFlipSided!==e&&(e?t.frontFace(t.CW):t.frontFace(t.CCW),this.currentFlipSided=e)},setCullFace:function(e){var t=this.gl;e!==te.NONE?(this.enable(t.CULL_FACE),e!==this.currentCullFace&&(e===te.BACK?t.cullFace(t.BACK):e===te.FRONT?t.cullFace(t.FRONT):t.cullFace(t.FRONT_AND_BACK))):this.disable(t.CULL_FACE),this.currentCullFace=e},viewport:function(e,t,r,i){var n=this.currentViewport;n.x===e&&n.y===t&&n.z===r&&n.w===i||(this.gl.viewport(e,t,r,i),n.set(e,t,r,i))},colorMask:function(e){this.currentColorMask!==e&&(this.gl.colorMask(e,e,e,e),this.currentColorMask=e)},clearColor:function(e,t,r,i){var n=this.currentClearColor;n.x===e&&n.y===t&&n.z===r&&n.w===i||(this.gl.clearColor(e,t,r,i),n.set(e,t,r,i))},activeTexture:function(e){var t=this.gl;void 0===e&&(e=t.TEXTURE0+this.capabilities.maxTextures-1),this.currentTextureSlot!==e&&(t.activeTexture(e),this.currentTextureSlot=e)},bindTexture:function(e,t){var r=this.gl;null===this.currentTextureSlot&&this.activeTexture();var i=this.currentBoundTextures[this.currentTextureSlot];void 0===i&&(i={type:void 0,texture:void 0},this.currentBoundTextures[this.currentTextureSlot]=i),i.type===e&&i.texture===t||(r.bindTexture(e,t||this.emptyTextures[e]),i.type=e,i.texture=t)},bindBuffer:function(e,t){var r=this.gl;this.currentBoundBuffers[e]!==t&&(r.bindBuffer(e,t),this.currentBoundBuffers[e]=t)},enable:function(e){!0!==this.states[e]&&(this.gl.enable(e),this.states[e]=!0)},disable:function(e){!1!==this.states[e]&&(this.gl.disable(e),this.states[e]=!1)},depthMask:function(e){e!==this.currentDepthMask&&(this.gl.depthMask(e),this.currentDepthMask=e)},setLineWidth:function(e){e!==this.currentLineWidth&&(1<=this.capabilities.version&&this.gl.lineWidth(e),this.currentLineWidth=e)},setProgram:function(e){this.currentProgram!==e&&(this.gl.useProgram(e.id),this.currentProgram=e)},stencilMask:function(e){this.currentStencilMask!==e&&(this.gl.stencilMask(e),this.currentStencilMask=e)},stencilFunc:function(e,t,r){this.currentStencilFunc===e&&this.currentStencilRef===t&&this.currentStencilFuncMask===r||(this.gl.stencilFunc(e,t,r),this.currentStencilFunc=e,this.currentStencilRef=t,this.currentStencilFuncMask=r)},stencilOp:function(e,t,r){this.currentStencilFail===e&&this.currentStencilZFail===t&&this.currentStencilZPass===r||(this.gl.stencilOp(e,t,r),this.currentStencilFail=e,this.currentStencilZFail=t,this.currentStencilZPass=r)},clearStencil:function(e){this.currentStencilClear!==e&&(this.gl.clearStencil(e),this.currentStencilClear=e)}}),Object.assign(Ot.prototype,{get:function(e){var t=e.uuid,r=this.properties[t];return void 0===r&&(r={},this.properties[t]=r),r},delete:function(e){delete this.properties[e.uuid]},clear:function(){this.properties={}}}),Object.assign(Dt.prototype,{setTexture2D:function(e,t){var r,i=this.gl,n=this.state,a=this.properties.get(e);if(0<e.version&&a.__version!==e.version){void 0===a.__webglTexture&&(e.addEventListener("dispose",this.onTextureDispose,this),a.__webglTexture=i.createTexture()),n.activeTexture(i.TEXTURE0+t),n.bindTexture(i.TEXTURE_2D,a.__webglTexture);var s=Ft(e.image,this.capabilities.maxTextureSize);((r=e).wrapS!==he.CLAMP_TO_EDGE||r.wrapT!==he.CLAMP_TO_EDGE||r.minFilter!==oe.NEAREST&&r.minFilter!==oe.LINEAR)&&!1===It(s)&&(s=function(e){if(f&&(e instanceof HTMLImageElement||e instanceof HTMLCanvasElement)){var t=document.createElementNS("http://www.w3.org/1999/xhtml","canvas");return t.width=_(e.width),t.height=_(e.height),t.getContext("2d").drawImage(e,0,0,t.width,t.height),console.warn("image is not power of two ("+e.width+"x"+e.height+"). Resized to "+t.width+"x"+t.height,e),t}return e}(s));var o=It(s);i.pixelStorei(i.UNPACK_FLIP_Y_WEBGL,e.flipY),this.setTextureParameters(e,o);var h,u=e.mipmaps,c=e.pixelFormat,l=e.pixelType;if(e.isDataTexture)if(0<u.length&&o){for(var d=0,p=u.length;d<p;d++)h=u[d],i.texImage2D(i.TEXTURE_2D,d,c,h.width,h.height,e.border,c,l,h.data);e.generateMipmaps=!1}else i.texImage2D(i.TEXTURE_2D,0,c,s.width,s.height,e.border,c,l,s.data);else if(0<u.length&&o){for(d=0,p=u.length;d<p;d++)h=u[d],i.texImage2D(i.TEXTURE_2D,d,c,c,l,h);e.generateMipmaps=!1}else i.texImage2D(i.TEXTURE_2D,0,c,c,l,s);return e.generateMipmaps&&o&&i.generateMipmap(i.TEXTURE_2D),void(a.__version=e.version)}n.activeTexture(i.TEXTURE0+t),n.bindTexture(i.TEXTURE_2D,a.__webglTexture)},setTextureCube:function(e,t){var r=this.gl,i=this.state,n=this.properties.get(e);if(0<e.version&&n.__version!==e.version){void 0===n.__webglTexture&&(e.addEventListener("dispose",this.onTextureDispose,this),n.__webglTexture=r.createTexture()),i.activeTexture(r.TEXTURE0+t),i.bindTexture(r.TEXTURE_CUBE_MAP,n.__webglTexture);for(var a=[],s=0;s<6;s++)a[s]=Ft(e.images[s],this.capabilities.maxCubemapSize);var o=It(a[0]);r.pixelStorei(r.UNPACK_FLIP_Y_WEBGL,e.flipY),this.setTextureParameters(e,o);var h=e.pixelFormat,u=e.pixelType;for(s=0;s<6;s++)r.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+s,0,h,h,u,a[s]);return e.generateMipmaps&&o&&r.generateMipmap(r.TEXTURE_CUBE_MAP),void(n.__version=e.version)}i.activeTexture(r.TEXTURE0+t),i.bindTexture(r.TEXTURE_CUBE_MAP,n.__webglTexture)},setTextureParameters:function(e,t){var r=this.gl,i=e.textureType;t?(r.texParameteri(i,r.TEXTURE_WRAP_S,e.wrapS),r.texParameteri(i,r.TEXTURE_WRAP_T,e.wrapT),r.texParameteri(i,r.TEXTURE_MAG_FILTER,e.magFilter),r.texParameteri(i,r.TEXTURE_MIN_FILTER,e.minFilter)):(r.texParameteri(i,r.TEXTURE_WRAP_S,r.CLAMP_TO_EDGE),r.texParameteri(i,r.TEXTURE_WRAP_T,r.CLAMP_TO_EDGE),e.wrapS===r.CLAMP_TO_EDGE&&e.wrapT===r.CLAMP_TO_EDGE||console.warn("Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to zen3d.TEXTURE_WRAP.CLAMP_TO_EDGE.",e),r.texParameteri(i,r.TEXTURE_MAG_FILTER,Ut(e.magFilter)),r.texParameteri(i,r.TEXTURE_MIN_FILTER,Ut(e.minFilter)),(e.minFilter!==r.NEAREST&&e.minFilter!==r.LINEAR||e.magFilter!==r.NEAREST&&e.magFilter!==r.LINEAR)&&console.warn("Texture is not power of two. Texture.minFilter and Texture.magFilter should be set to zen3d.TEXTURE_FILTER.NEAREST or zen3d.TEXTURE_FILTER.LINEAR.",e));var n=this.capabilities.anisotropyExt;n&&1<e.anisotropy&&r.texParameterf(i,n.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(e.anisotropy,this.capabilities.maxAnisotropy))},setRenderTarget2D:function(e){var t=this.gl,r=this.state,i=this.properties.get(e),n=this.properties.get(e.texture);if(void 0!==n.__webglTexture&&void 0!==i.__webglFramebuffer)t.bindFramebuffer(t.FRAMEBUFFER,i.__webglFramebuffer);else{e.addEventListener("dispose",this.onRenderTargetDispose,this),n.__webglTexture=t.createTexture(),i.__webglFramebuffer=t.createFramebuffer(),t.bindFramebuffer(t.FRAMEBUFFER,i.__webglFramebuffer),r.bindTexture(t.TEXTURE_2D,n.__webglTexture);var a=It(e);this.setTextureParameters(e.texture,a);var s=e.texture.pixelFormat,o=e.texture.pixelType;if(t.texImage2D(t.TEXTURE_2D,0,s,e.width,e.height,0,s,o,null),t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,n.__webglTexture,0),e.texture.generateMipmaps&&a&&t.generateMipmap(t.TEXTURE_2D),r.bindTexture(t.TEXTURE_2D,null),e.depthBuffer)if(e.depthTexture){var h=this.properties.get(e.depthTexture);if(h.__webglTexture=t.createTexture(),r.bindTexture(t.TEXTURE_2D,h.__webglTexture),this.setTextureParameters(e.depthTexture,a),s=e.depthTexture.pixelFormat,o=e.depthTexture.pixelType,t.texImage2D(t.TEXTURE_2D,0,s,e.width,e.height,0,s,o,null),o===se.UNSIGNED_SHORT||o===se.UNSIGNED_INT)t.framebufferTexture2D(t.FRAMEBUFFER,t.DEPTH_ATTACHMENT,t.TEXTURE_2D,h.__webglTexture,0);else{if(o!==se.UNSIGNED_INT_24_8)throw new Error("Unknown depthTexture format");t.framebufferTexture2D(t.FRAMEBUFFER,t.DEPTH_STENCIL_ATTACHMENT,t.TEXTURE_2D,h.__webglTexture,0)}r.bindTexture(t.TEXTURE_2D,null)}else{i.__webglDepthbuffer=t.createRenderbuffer();var u=i.__webglDepthbuffer;t.bindRenderbuffer(t.RENDERBUFFER,u),e.stencilBuffer?(t.renderbufferStorage(t.RENDERBUFFER,t.DEPTH_STENCIL,e.width,e.height),t.framebufferRenderbuffer(t.FRAMEBUFFER,t.DEPTH_STENCIL_ATTACHMENT,t.RENDERBUFFER,u)):(t.renderbufferStorage(t.RENDERBUFFER,t.DEPTH_COMPONENT16,e.width,e.height),t.framebufferRenderbuffer(t.FRAMEBUFFER,t.DEPTH_ATTACHMENT,t.RENDERBUFFER,u)),t.bindRenderbuffer(t.RENDERBUFFER,null)}var c=t.checkFramebufferStatus(t.FRAMEBUFFER);c!==t.FRAMEBUFFER_COMPLETE&&(c===t.FRAMEBUFFER_INCOMPLETE_ATTACHMENT?console.warn("framebuffer not complete: FRAMEBUFFER_INCOMPLETE_ATTACHMENT"):c===t.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT?console.warn("framebuffer not complete: FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT"):c===t.FRAMEBUFFER_INCOMPLETE_DIMENSIONS?console.warn("framebuffer not complete: FRAMEBUFFER_INCOMPLETE_DIMENSIONS"):c===t.FRAMEBUFFER_UNSUPPORTED?console.warn("framebuffer not complete: FRAMEBUFFER_UNSUPPORTED"):console.warn("framebuffer not complete."))}},setRenderTargetCube:function(e){var t=this.gl,r=this.state,i=this.properties.get(e),n=this.properties.get(e.texture);if(void 0!==n.__webglTexture&&void 0!==i.__webglFramebuffer)t.bindFramebuffer(t.FRAMEBUFFER,i.__webglFramebuffer),t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_CUBE_MAP_POSITIVE_X+e.activeCubeFace,n.__webglTexture,0);else{e.addEventListener("dispose",this.onRenderTargetDispose,this),n.__webglTexture=t.createTexture(),i.__webglFramebuffer=t.createFramebuffer(),t.bindFramebuffer(t.FRAMEBUFFER,i.__webglFramebuffer),r.bindTexture(t.TEXTURE_CUBE_MAP,n.__webglTexture);var a=It(e);this.setTextureParameters(e.texture,a);for(var s=e.texture.pixelFormat,o=e.texture.pixelType,h=0;h<6;h++)t.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+h,0,s,e.width,e.height,0,s,o,null);if(t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_CUBE_MAP_POSITIVE_X+e.activeCubeFace,n.__webglTexture,0),e.texture.generateMipmaps&&a&&t.generateMipmap(t.TEXTURE_CUBE_MAP),r.bindTexture(t.TEXTURE_CUBE_MAP,null),e.depthBuffer){i.__webglDepthbuffer=t.createRenderbuffer();var u=i.__webglDepthbuffer;t.bindRenderbuffer(t.RENDERBUFFER,u),e.stencilBuffer?(t.renderbufferStorage(t.RENDERBUFFER,t.DEPTH_STENCIL,e.width,e.height),t.framebufferRenderbuffer(t.FRAMEBUFFER,t.DEPTH_STENCIL_ATTACHMENT,t.RENDERBUFFER,u)):(t.renderbufferStorage(t.RENDERBUFFER,t.DEPTH_COMPONENT16,e.width,e.height),t.framebufferRenderbuffer(t.FRAMEBUFFER,t.DEPTH_ATTACHMENT,t.RENDERBUFFER,u)),t.bindRenderbuffer(t.RENDERBUFFER,null)}}},updateRenderTargetMipmap:function(e){var t=this.gl,r=this.state,i=e.texture;if(i.generateMipmaps&&It(e)&&i.minFilter!==t.NEAREST&&i.minFilter!==t.LINEAR){var n=i.textureType,a=this.properties.get(i).__webglTexture;r.bindTexture(n,a),t.generateMipmap(n),r.bindTexture(n,null)}},onTextureDispose:function(e){var t=this.gl,r=e.target,i=this.properties.get(r);r.removeEventListener("dispose",this.onTextureDispose,this),i.__webglTexture&&t.deleteTexture(i.__webglTexture),this.properties.delete(r)},onRenderTargetDispose:function(e){var t=this.gl,r=e.target,i=this.properties.get(r);r.removeEventListener("dispose",this.onRenderTargetDispose,this),i.__webglTexture&&t.deleteTexture(textureProperties.__webglTexture),i.__webglFramebuffer&&t.deleteFramebuffer(i.__webglFramebuffer),i.__webglDepthbuffer&&t.deleteRenderbuffer(i.__webglDepthbuffer),this.properties.delete(r)},setRenderTarget:function(e){var t=this.gl,r=this.state;if(e.texture){var i=void 0!==e.activeCubeFace;if(r.currentRenderTarget!==e)i?this.setRenderTargetCube(e):this.setRenderTarget2D(e),r.currentRenderTarget=e;else if(i){var n=this.properties.get(e.texture);t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_CUBE_MAP_POSITIVE_X+e.activeCubeFace,n.__webglTexture,0)}}else r.currentRenderTarget===e||(t.bindFramebuffer(t.FRAMEBUFFER,null),r.currentRenderTarget=e)}}),Object.assign(Gt.prototype,{setGeometry:function(e){var t=this.gl,r=(this.state,this.properties),i=this.properties.get(e);for(var n in i.created||(e.addEventListener("dispose",this.onGeometryDispose2,this),i.created=!0),null!==e.index&&zt(t,r,e.index,t.ELEMENT_ARRAY_BUFFER),e.attributes)zt(t,r,e.attributes[n],t.ARRAY_BUFFER)},onGeometryDispose:function(e){var t=this.gl,r=e.target;this.properties.get(r);for(var i in r.removeEventListener("dispose",this.onGeometryDispose,this),null!==r.index&&Bt(t,properties,r.index),r.attributes)Bt(t,properties,r.attributes[i]);this.properties.delete(r)}}),Object.assign(kt.prototype,{_generateSetValue:function(){var n=this.gl,e=this.type,a=this.location;switch(e){case ue.FLOAT:1<this.size?this.setValue=this.set=function(e){n.uniform1fv(a,e)}:this.setValue=this.set=function(e){n.uniform1f(a,e)};break;case ue.SAMPLER_2D:case ue.SAMPLER_CUBE:case ue.BOOL:case ue.INT:this.setValue=this.set=function(e){n.uniform1i(a,e)};break;case ue.FLOAT_VEC2:this.setValue=function(e,t){n.uniform2f(a,e,t)},this.set=function(e){n.uniform2fv(a,e)};break;case ue.BOOL_VEC2:case ue.INT_VEC2:this.setValue=function(e,t){n.uniform2i(a,e,t)},this.set=function(e){n.uniform2iv(a,e)};break;case ue.FLOAT_VEC3:this.setValue=function(e,t,r){n.uniform3f(a,e,t,r)},this.set=function(e){n.uniform3fv(a,e)};break;case ue.BOOL_VEC3:case ue.INT_VEC3:this.setValue=function(e,t,r){n.uniform3i(a,e,t,r)},this.set=function(e){n.uniform3iv(a,e)};break;case ue.FLOAT_VEC4:this.setValue=function(e,t,r,i){n.uniform4f(a,e,t,r,i)},this.set=function(e){n.uniform4fv(a,e)};break;case ue.BOOL_VEC4:case ue.INT_VEC4:this.setValue=function(e,t,r,i){n.uniform4i(a,e,t,r,i)},this.set=function(e){n.uniform4iv(a,e)};break;case ue.FLOAT_MAT2:this.setValue=this.set=function(e){n.uniformMatrix2fv(a,!1,e)};break;case ue.FLOAT_MAT3:this.setValue=this.set=function(e){n.uniformMatrix3fv(a,!1,e)};break;case ue.FLOAT_MAT4:this.setValue=this.set=function(e){n.uniformMatrix4fv(a,!1,e)}}}}),Object.assign(Vt.prototype,{initCount:function(e){switch(this.type){case ce.FLOAT:case ce.BYTE:case ce.UNSIGNED_BYTE:case ce.UNSIGNED_SHORT:this.count=1;break;case ce.FLOAT_VEC2:this.count=2;break;case ce.FLOAT_VEC3:this.count=3;break;case ce.FLOAT_VEC4:this.count=4}},initFormat:function(e){switch(this.type){case ce.FLOAT:case ce.FLOAT_VEC2:case ce.FLOAT_VEC3:case ce.FLOAT_VEC4:this.format=e.FLOAT;break;case ce.UNSIGNED_BYTE:this.format=e.UNSIGNED_BYTE;break;case ce.UNSIGNED_SHORT:this.format=e.UNSIGNED_SHORT;break;case ce.BYTE:this.format=e.BYTE}}}),jt.prototype.dispose=function(e){e.deleteProgram(this.id)};var Xt={alphaTest_frag:"#ifdef ALPHATEST\r\n\r\n\tif ( outColor.a < ALPHATEST ) discard;\r\n\r\n#endif",ambientlight_pars_frag:"uniform vec4 u_AmbientLightColor;",aoMap_pars_frag:"#ifdef USE_AOMAP\r\n\r\n\tuniform sampler2D aoMap;\r\n\tuniform float aoMapIntensity;\r\n\r\n#endif",begin_frag:"vec4 outColor = vec4(u_Color, u_Opacity);",begin_vert:"vec3 transformed = vec3(a_Position);\r\n#if defined(USE_NORMAL) || defined(USE_ENV_MAP)\r\n    vec3 objectNormal = vec3(a_Normal);\r\n#endif",bsdfs:'// diffuse just use lambert\r\n\r\nvec4 BRDF_Diffuse_Lambert(vec4 diffuseColor) {\r\n    return RECIPROCAL_PI * diffuseColor;\r\n}\r\n\r\n// specular use Cook-Torrance microfacet model, http://ruh.li/GraphicsCookTorrance.html\r\n// About RECIPROCAL_PI: referenced by http://www.joshbarczak.com/blog/?p=272\r\n\r\nvec4 F_Schlick( const in vec4 specularColor, const in float dotLH ) {\r\n\t// Original approximation by Christophe Schlick \'94\r\n\tfloat fresnel = pow( 1.0 - dotLH, 5.0 );\r\n\r\n\t// Optimized variant (presented by Epic at SIGGRAPH \'13)\r\n\t// float fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\r\n\r\n\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\r\n}\r\n\r\n// use blinn phong instead of phong\r\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\r\n    // ( shininess * 0.5 + 1.0 ), three.js do this, but why ???\r\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\r\n}\r\n\r\nfloat G_BlinnPhong_Implicit( ) {\r\n\t// geometry term is (n dot l)(n dot v) / 4(n dot l)(n dot v)\r\n\treturn 0.25;\r\n}\r\n\r\nvec4 BRDF_Specular_BlinnPhong(vec4 specularColor, vec3 N, vec3 L, vec3 V, float shininess) {\r\n    vec3 H = normalize(L + V);\r\n\r\n    float dotNH = saturate(dot(N, H));\r\n    float dotLH = saturate(dot(L, H));\r\n\r\n    vec4 F = F_Schlick(specularColor, dotLH);\r\n\r\n    float G = G_BlinnPhong_Implicit( );\r\n\r\n    float D = D_BlinnPhong(shininess, dotNH);\r\n\r\n    return F * G * D;\r\n}\r\n\r\n// Microfacet Models for Refraction through Rough Surfaces - equation (33)\r\n// http://graphicrants.blogspot.com/2013/08/specular-brdf-reference.html\r\n// alpha is "roughness squared" in Disney’s reparameterization\r\nfloat D_GGX( const in float alpha, const in float dotNH ) {\r\n\r\n\tfloat a2 = pow2( alpha );\r\n\r\n\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0; // avoid alpha = 0 with dotNH = 1\r\n\r\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\r\n\r\n}\r\n\r\n// Microfacet Models for Refraction through Rough Surfaces - equation (34)\r\n// http://graphicrants.blogspot.com/2013/08/specular-brdf-reference.html\r\n// alpha is "roughness squared" in Disney’s reparameterization\r\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\r\n\r\n\t// geometry term = G(l)⋅G(v) / 4(n⋅l)(n⋅v)\r\n\r\n\tfloat a2 = pow2( alpha );\r\n\r\n\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\r\n\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\r\n\r\n\treturn 1.0 / ( gl * gv );\r\n\r\n}\r\n\r\n// Moving Frostbite to Physically Based Rendering 2.0 - page 12, listing 2\r\n// http://www.frostbite.com/wp-content/uploads/2014/11/course_notes_moving_frostbite_to_pbr_v2.pdf\r\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\r\n\r\n\tfloat a2 = pow2( alpha );\r\n\r\n\t// dotNL and dotNV are explicitly swapped. This is not a mistake.\r\n\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\r\n\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\r\n\r\n\treturn 0.5 / max( gv + gl, EPSILON );\r\n}\r\n\r\n// GGX Distribution, Schlick Fresnel, GGX-Smith Visibility\r\nvec4 BRDF_Specular_GGX(vec4 specularColor, vec3 N, vec3 L, vec3 V, float roughness) {\r\n\r\n\tfloat alpha = pow2( roughness ); // UE4\'s roughness\r\n\r\n\tvec3 H = normalize(L + V);\r\n\r\n\tfloat dotNL = saturate( dot(N, L) );\r\n\tfloat dotNV = saturate( dot(N, V) );\r\n\tfloat dotNH = saturate( dot(N, H) );\r\n\tfloat dotLH = saturate( dot(L, H) );\r\n\r\n\tvec4 F = F_Schlick( specularColor, dotLH );\r\n\r\n\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\r\n\r\n\tfloat D = D_GGX( alpha, dotNH );\r\n\r\n\treturn F * G * D;\r\n\r\n}\r\n\r\n// ref: https://www.unrealengine.com/blog/physically-based-shading-on-mobile - environmentBRDF for GGX on mobile\r\nvec4 BRDF_Specular_GGX_Environment( const in vec3 N, const in vec3 V, const in vec4 specularColor, const in float roughness ) {\r\n\r\n\tfloat dotNV = saturate( dot( N, V ) );\r\n\r\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\r\n\r\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\r\n\r\n\tvec4 r = roughness * c0 + c1;\r\n\r\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\r\n\r\n\tvec2 AB = vec2( -1.04, 1.04 ) * a004 + r.zw;\r\n\r\n\treturn specularColor * AB.x + AB.y;\r\n\r\n}\r\n\r\n// source: http://simonstechblog.blogspot.ca/2011/12/microfacet-brdf.html\r\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\r\n\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\r\n}\r\n\r\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\r\n\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\r\n}',bumpMap_pars_frag:"#ifdef USE_BUMPMAP\r\n\r\n\tuniform sampler2D bumpMap;\r\n\tuniform float bumpScale;\r\n\r\n\t// Derivative maps - bump mapping unparametrized surfaces by Morten Mikkelsen\r\n\t// http://mmikkelsen3d.blogspot.sk/2011/07/derivative-maps.html\r\n\r\n\t// Evaluate the derivative of the height w.r.t. screen-space using forward differencing (listing 2)\r\n\r\n\tvec2 dHdxy_fwd(vec2 uv) {\r\n\r\n\t\tvec2 dSTdx = dFdx( uv );\r\n\t\tvec2 dSTdy = dFdy( uv );\r\n\r\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, uv ).x;\r\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, uv + dSTdx ).x - Hll;\r\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, uv + dSTdy ).x - Hll;\r\n\r\n\t\treturn vec2( dBx, dBy );\r\n\r\n\t}\r\n\r\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy) {\r\n\r\n\t\tvec3 vSigmaX = dFdx( surf_pos );\r\n\t\tvec3 vSigmaY = dFdy( surf_pos );\r\n\t\tvec3 vN = surf_norm;\t\t// normalized\r\n\r\n\t\tvec3 R1 = cross( vSigmaY, vN );\r\n\t\tvec3 R2 = cross( vN, vSigmaX );\r\n\r\n\t\tfloat fDet = dot( vSigmaX, R1 );\r\n\r\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\r\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\r\n\r\n\t}\r\n\r\n#endif\r\n",clippingPlanes_frag:"#ifdef NUM_CLIPPING_PLANES\r\n\r\n    vec4 plane;\r\n\r\n    for ( int i = 0; i < NUM_CLIPPING_PLANES; i ++ ) {\r\n\r\n        plane = clippingPlanes[ i ];\r\n        if ( dot( -v_modelPos, plane.xyz ) > plane.w ) discard;\r\n\r\n    }\r\n\r\n#endif",clippingPlanes_pars_frag:"#ifdef NUM_CLIPPING_PLANES\r\n    uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\r\n#endif",color_frag:"#ifdef USE_VCOLOR\r\n    outColor *= v_Color;\r\n#endif",color_pars_frag:"#ifdef USE_VCOLOR\r\n    varying vec4 v_Color;\r\n#endif",color_pars_vert:"#ifdef USE_VCOLOR\r\n    attribute vec4 a_Color;\r\n    varying vec4 v_Color;\r\n#endif",color_vert:"#ifdef USE_VCOLOR\r\n    v_Color = a_Color;\r\n#endif",common_frag:"uniform mat4 u_View;\r\n\r\nuniform float u_Opacity;\r\nuniform vec3 u_Color;\r\n\r\nuniform vec3 u_CameraPosition;",common_vert:"attribute vec3 a_Position;\r\nattribute vec3 a_Normal;\r\n\r\n#include <transpose>\r\n#include <inverse>\r\n\r\nuniform mat4 u_Projection;\r\nuniform mat4 u_View;\r\nuniform mat4 u_Model;\r\n\r\nuniform vec3 u_CameraPosition;",diffuseMap_frag:"#ifdef USE_DIFFUSE_MAP\r\n    vec4 texelColor = texture2D( texture, v_Uv );\r\n    texelColor = mapTexelToLinear( texelColor );\r\n\r\n    outColor *= texelColor;\r\n#endif",diffuseMap_pars_frag:"#ifdef USE_DIFFUSE_MAP\r\n    uniform sampler2D texture;\r\n#endif",directlight_pars_frag:"struct DirectLight\r\n{\r\n    vec3 direction;\r\n    vec4 color;\r\n    float intensity;\r\n\r\n    int shadow;\r\n    float shadowBias;\r\n    float shadowRadius;\r\n    vec2 shadowMapSize;\r\n};\r\nuniform DirectLight u_Directional[USE_DIRECT_LIGHT];",emissiveMap_frag:"#ifdef USE_EMISSIVEMAP\r\n\r\n\tvec4 emissiveColor = texture2D(emissiveMap, v_Uv);\r\n\r\n\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\r\n\r\n\ttotalEmissiveRadiance *= emissiveColor.rgb;\r\n\r\n#endif",emissiveMap_pars_frag:"#ifdef USE_EMISSIVEMAP\r\n\r\n\tuniform sampler2D emissiveMap;\r\n\r\n#endif",encodings_frag:"gl_FragColor = linearToOutputTexel( gl_FragColor );",encodings_pars_frag:"// For a discussion of what this is, please read this: http://lousodrome.net/blog/light/2013/05/26/gamma-correct-and-hdr-rendering-in-a-32-bits-buffer/\r\n\r\nvec4 LinearToLinear( in vec4 value ) {\r\n\treturn value;\r\n}\r\n\r\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\r\n\treturn vec4( pow( value.xyz, vec3( gammaFactor ) ), value.w );\r\n}\r\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\r\n\treturn vec4( pow( value.xyz, vec3( 1.0 / gammaFactor ) ), value.w );\r\n}\r\n\r\nvec4 sRGBToLinear( in vec4 value ) {\r\n\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.w );\r\n}\r\nvec4 LinearTosRGB( in vec4 value ) {\r\n\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.w );\r\n}\r\n\r\nvec4 RGBEToLinear( in vec4 value ) {\r\n\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\r\n}\r\nvec4 LinearToRGBE( in vec4 value ) {\r\n\tfloat maxComponent = max( max( value.r, value.g ), value.b );\r\n\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\r\n\treturn vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\r\n//  return vec4( value.brg, ( 3.0 + 128.0 ) / 256.0 );\r\n}\r\n\r\n// reference: http://iwasbeingirony.blogspot.ca/2010/06/difference-between-rgbm-and-rgbd.html\r\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\r\n\treturn vec4( value.xyz * value.w * maxRange, 1.0 );\r\n}\r\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\r\n\tfloat maxRGB = max( value.x, max( value.g, value.b ) );\r\n\tfloat M      = clamp( maxRGB / maxRange, 0.0, 1.0 );\r\n\tM            = ceil( M * 255.0 ) / 255.0;\r\n\treturn vec4( value.rgb / ( M * maxRange ), M );\r\n}\r\n\r\n// reference: http://iwasbeingirony.blogspot.ca/2010/06/difference-between-rgbm-and-rgbd.html\r\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\r\n\treturn vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\r\n}\r\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\r\n\tfloat maxRGB = max( value.x, max( value.g, value.b ) );\r\n\tfloat D      = max( maxRange / maxRGB, 1.0 );\r\n\tD            = min( floor( D ) / 255.0, 1.0 );\r\n\treturn vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\r\n}\r\n\r\n// LogLuv reference: http://graphicrants.blogspot.ca/2009/04/rgbm-color-encoding.html\r\n\r\n// M matrix, for encoding\r\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\r\nvec4 LinearToLogLuv( in vec4 value )  {\r\n\tvec3 Xp_Y_XYZp = value.rgb * cLogLuvM;\r\n\tXp_Y_XYZp = max(Xp_Y_XYZp, vec3(1e-6, 1e-6, 1e-6));\r\n\tvec4 vResult;\r\n\tvResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\r\n\tfloat Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\r\n\tvResult.w = fract(Le);\r\n\tvResult.z = (Le - (floor(vResult.w*255.0))/255.0)/255.0;\r\n\treturn vResult;\r\n}\r\n\r\n// Inverse M matrix, for decoding\r\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\r\nvec4 LogLuvToLinear( in vec4 value ) {\r\n\tfloat Le = value.z * 255.0 + value.w;\r\n\tvec3 Xp_Y_XYZp;\r\n\tXp_Y_XYZp.y = exp2((Le - 127.0) / 2.0);\r\n\tXp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\r\n\tXp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\r\n\tvec3 vRGB = Xp_Y_XYZp.rgb * cLogLuvInverseM;\r\n\treturn vec4( max(vRGB, 0.0), 1.0 );\r\n}\r\n",end_frag:"gl_FragColor = outColor;",envMap_frag:"#ifdef USE_ENV_MAP\r\n\r\n    vec3 envDir;\r\n    #if defined(USE_NORMAL_MAP) || defined(USE_BUMPMAP)\r\n        envDir = reflect(normalize(v_worldPos - u_CameraPosition), N);\r\n    #else\r\n        envDir = v_EnvPos;\r\n    #endif\r\n\r\n    vec4 envColor = textureCube(envMap, envDir);\r\n\r\n    envColor = envMapTexelToLinear( envColor );\r\n\r\n    #ifdef ENVMAP_BLENDING_MULTIPLY\r\n\t\toutColor = mix(outColor, envColor * outColor, u_EnvMap_Intensity);\r\n\t#elif defined( ENVMAP_BLENDING_MIX )\r\n\t\toutColor = mix(outColor, envColor, u_EnvMap_Intensity);\r\n\t#elif defined( ENVMAP_BLENDING_ADD )\r\n\t\toutColor += envColor * u_EnvMap_Intensity;\r\n\t#endif\r\n#endif",envMap_pars_frag:"#ifdef USE_ENV_MAP\r\n    #if defined(USE_NORMAL_MAP) || defined(USE_BUMPMAP)\r\n        varying vec3 v_worldPos;\r\n    #else\r\n        varying vec3 v_EnvPos;\r\n    #endif\r\n    uniform samplerCube envMap;\r\n    uniform float u_EnvMap_Intensity;\r\n#endif",envMap_pars_vert:"#ifdef USE_ENV_MAP\r\n    #if defined(USE_NORMAL_MAP) || defined(USE_BUMPMAP)\r\n        varying vec3 v_worldPos;\r\n    #else\r\n        varying vec3 v_EnvPos;\r\n    #endif\r\n#endif",envMap_vert:"#ifdef USE_ENV_MAP\r\n    #if defined(USE_NORMAL_MAP) || defined(USE_BUMPMAP)\r\n        v_worldPos = (u_Model * vec4(transformed, 1.0)).xyz;\r\n    #else\r\n        v_EnvPos = reflect(normalize((u_Model * vec4(transformed, 1.0)).xyz - u_CameraPosition), (transpose(inverse(u_Model)) * vec4(objectNormal, 1.0)).xyz);\r\n    #endif\r\n#endif",fog_frag:"#ifdef USE_FOG\r\n\r\n    float depth = gl_FragCoord.z / gl_FragCoord.w;\r\n\r\n    #ifdef USE_EXP2_FOG\r\n\r\n        float fogFactor = whiteCompliment( exp2( - u_FogDensity * u_FogDensity * depth * depth * LOG2 ) );\r\n\r\n    #else\r\n\r\n        float fogFactor = smoothstep( u_FogNear, u_FogFar, depth );\r\n\r\n    #endif\r\n\r\n    gl_FragColor.rgb = mix( gl_FragColor.rgb, u_FogColor, fogFactor );\r\n\r\n#endif",fog_pars_frag:"#ifdef USE_FOG\r\n\r\n    uniform vec3 u_FogColor;\r\n\r\n    #ifdef USE_EXP2_FOG\r\n\r\n        uniform float u_FogDensity;\r\n\r\n    #else\r\n\r\n        uniform float u_FogNear;\r\n        uniform float u_FogFar;\r\n    #endif\r\n\r\n#endif",inverse:"mat4 inverse(mat4 m) {\r\n    float\r\n    a00 = m[0][0], a01 = m[0][1], a02 = m[0][2], a03 = m[0][3],\r\n    a10 = m[1][0], a11 = m[1][1], a12 = m[1][2], a13 = m[1][3],\r\n    a20 = m[2][0], a21 = m[2][1], a22 = m[2][2], a23 = m[2][3],\r\n    a30 = m[3][0], a31 = m[3][1], a32 = m[3][2], a33 = m[3][3],\r\n    b00 = a00 * a11 - a01 * a10,\r\n    b01 = a00 * a12 - a02 * a10,\r\n    b02 = a00 * a13 - a03 * a10,\r\n    b03 = a01 * a12 - a02 * a11,\r\n    b04 = a01 * a13 - a03 * a11,\r\n    b05 = a02 * a13 - a03 * a12,\r\n    b06 = a20 * a31 - a21 * a30,\r\n    b07 = a20 * a32 - a22 * a30,\r\n    b08 = a20 * a33 - a23 * a30,\r\n    b09 = a21 * a32 - a22 * a31,\r\n    b10 = a21 * a33 - a23 * a31,\r\n    b11 = a22 * a33 - a23 * a32,\r\n    det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\r\n    return mat4(\r\n        a11 * b11 - a12 * b10 + a13 * b09,\r\n        a02 * b10 - a01 * b11 - a03 * b09,\r\n        a31 * b05 - a32 * b04 + a33 * b03,\r\n        a22 * b04 - a21 * b05 - a23 * b03,\r\n        a12 * b08 - a10 * b11 - a13 * b07,\r\n        a00 * b11 - a02 * b08 + a03 * b07,\r\n        a32 * b02 - a30 * b05 - a33 * b01,\r\n        a20 * b05 - a22 * b02 + a23 * b01,\r\n        a10 * b10 - a11 * b08 + a13 * b06,\r\n        a01 * b08 - a00 * b10 - a03 * b06,\r\n        a30 * b04 - a31 * b02 + a33 * b00,\r\n        a21 * b02 - a20 * b04 - a23 * b00,\r\n        a11 * b07 - a10 * b09 - a12 * b06,\r\n        a00 * b09 - a01 * b07 + a02 * b06,\r\n        a31 * b01 - a30 * b03 - a32 * b00,\r\n        a20 * b03 - a21 * b01 + a22 * b00) / det;\r\n}",light_frag:"#ifdef USE_LIGHT\r\n    vec4 light;\r\n    vec3 L;\r\n\r\n    vec4 totalReflect = vec4(0., 0., 0., 0.); // direct light\r\n    vec4 indirectIrradiance = vec4(0., 0., 0., 0.); // for indirect diffuse\r\n    vec4 indirectRadiance = vec4(0., 0., 0., 0.); // for indirect specular\r\n\r\n    #ifdef USE_PBR\r\n        vec4 diffuseColor = outColor.xyzw * (1.0 - metalnessFactor);\r\n        vec4 specularColor = mix(vec4(0.04), outColor.xyzw, metalnessFactor);\r\n        float roughness = clamp(roughnessFactor, 0.04, 1.0);\r\n    #else\r\n        vec4 diffuseColor = outColor.xyzw;\r\n        #ifdef USE_PHONG\r\n            vec4 specularColor = u_SpecularColor;\r\n            float shininess = u_Specular;\r\n        #endif\r\n    #endif\r\n\r\n    #ifdef USE_AMBIENT_LIGHT\r\n        #ifdef USE_PBR\r\n            indirectIrradiance += PI * diffuseColor * u_AmbientLightColor;\r\n        #else\r\n            indirectIrradiance += diffuseColor * u_AmbientLightColor;\r\n        #endif\r\n    #endif\r\n\r\n    // TODO light map\r\n\r\n    #ifdef USE_PBR\r\n        #ifdef USE_ENV_MAP\r\n    \t\tvec3 envDir;\r\n    \t    #if defined(USE_NORMAL_MAP) || defined(USE_BUMPMAP)\r\n    \t        envDir = reflect(normalize(v_worldPos - u_CameraPosition), N);\r\n    \t    #else\r\n    \t        envDir = v_EnvPos;\r\n    \t    #endif\r\n            indirectIrradiance += getLightProbeIndirectIrradiance(8, envDir);\r\n            indirectRadiance += getLightProbeIndirectRadiance(GGXRoughnessToBlinnExponent(roughness), 8, envDir);\r\n    \t#endif\r\n    #endif\r\n\r\n    #if (defined(USE_PHONG) || defined(USE_PBR))\r\n        vec3 V = normalize( u_CameraPosition - v_modelPos );\r\n    #endif\r\n\r\n    #ifdef USE_DIRECT_LIGHT\r\n    for(int i = 0; i < USE_DIRECT_LIGHT; i++) {\r\n        L = -u_Directional[i].direction;\r\n        light = u_Directional[i].color * u_Directional[i].intensity;\r\n        L = normalize(L);\r\n\r\n        float dotNL = saturate( dot(N, L) );\r\n        vec4 irradiance = light * dotNL;\r\n\r\n        #ifdef USE_SHADOW\r\n            irradiance *= bool( u_Directional[i].shadow ) ? getShadow( directionalShadowMap[ i ], vDirectionalShadowCoord[ i ], u_Directional[i].shadowBias, u_Directional[i].shadowRadius, u_Directional[i].shadowMapSize ) : 1.0;\r\n        #endif\r\n\r\n        #ifdef USE_PBR\r\n            irradiance *= PI;\r\n        #endif\r\n\r\n        vec4 reflectLight = irradiance * BRDF_Diffuse_Lambert(diffuseColor);\r\n\r\n        #ifdef USE_PHONG\r\n            reflectLight += irradiance * BRDF_Specular_BlinnPhong(specularColor, N, L, V, shininess) * specularStrength;\r\n        #endif\r\n\r\n        #ifdef USE_PBR\r\n            reflectLight += irradiance * BRDF_Specular_GGX(specularColor, N, L, V, roughness) * specularStrength;\r\n        #endif\r\n\r\n        totalReflect += reflectLight;\r\n    }\r\n    #endif\r\n\r\n    #ifdef USE_POINT_LIGHT\r\n    for(int i = 0; i < USE_POINT_LIGHT; i++) {\r\n        L = u_Point[i].position - v_modelPos;\r\n        float dist = pow(clamp(1. - length(L) / u_Point[i].distance, 0.0, 1.0), u_Point[i].decay);\r\n        light = u_Point[i].color * u_Point[i].intensity * dist;\r\n        L = normalize(L);\r\n\r\n        float dotNL = saturate( dot(N, L) );\r\n        vec4 irradiance = light * dotNL;\r\n\r\n        #ifdef USE_PBR\r\n            irradiance *= PI;\r\n        #endif\r\n\r\n        #ifdef USE_SHADOW\r\n            vec3 worldV = v_modelPos - u_Point[i].position;\r\n            irradiance *= bool( u_Point[i].shadow ) ? getPointShadow( pointShadowMap[ i ], worldV, u_Point[i].shadowBias, u_Point[i].shadowRadius, u_Point[i].shadowMapSize, u_Point[i].shadowCameraNear, u_Point[i].shadowCameraFar ) : 1.0;\r\n        #endif\r\n\r\n        vec4 reflectLight = irradiance * BRDF_Diffuse_Lambert(diffuseColor);\r\n\r\n        #ifdef USE_PHONG\r\n            reflectLight += irradiance * BRDF_Specular_BlinnPhong(specularColor, N, L, V, shininess) * specularStrength;\r\n        #endif\r\n\r\n        #ifdef USE_PBR\r\n            reflectLight += irradiance * BRDF_Specular_GGX(specularColor, N, L, V, roughness) * specularStrength;\r\n        #endif\r\n\r\n        totalReflect += reflectLight;\r\n    }\r\n    #endif\r\n\r\n    #ifdef USE_SPOT_LIGHT\r\n    for(int i = 0; i < USE_SPOT_LIGHT; i++) {\r\n        L = u_Spot[i].position - v_modelPos;\r\n        float lightDistance = length(L);\r\n        L = normalize(L);\r\n        float angleCos = dot( L, -normalize(u_Spot[i].direction) );\r\n\r\n        if( all( bvec2(angleCos > u_Spot[i].coneCos, lightDistance < u_Spot[i].distance) ) ) {\r\n\r\n            float spotEffect = smoothstep( u_Spot[i].coneCos, u_Spot[i].penumbraCos, angleCos );\r\n            float dist = pow(clamp(1. - lightDistance / u_Spot[i].distance, 0.0, 1.0), u_Spot[i].decay);\r\n            light = u_Spot[i].color * u_Spot[i].intensity * dist * spotEffect;\r\n\r\n            float dotNL = saturate( dot(N, L) );\r\n            vec4 irradiance = light * dotNL;\r\n\r\n            #ifdef USE_PBR\r\n                irradiance *= PI;\r\n            #endif\r\n\r\n            #ifdef USE_SHADOW\r\n                irradiance *= bool( u_Spot[i].shadow ) ? getShadow( spotShadowMap[ i ], vSpotShadowCoord[ i ], u_Spot[i].shadowBias, u_Spot[i].shadowRadius, u_Spot[i].shadowMapSize ) : 1.0;\r\n            #endif\r\n\r\n            vec4 reflectLight = irradiance * BRDF_Diffuse_Lambert(diffuseColor);\r\n\r\n            #ifdef USE_PHONG\r\n                reflectLight += irradiance * BRDF_Specular_BlinnPhong(specularColor, N, L, V, shininess) * specularStrength;\r\n            #endif\r\n\r\n            #ifdef USE_PBR\r\n                reflectLight += irradiance * BRDF_Specular_GGX(specularColor, N, L, V, roughness) * specularStrength;\r\n            #endif\r\n\r\n            totalReflect += reflectLight;\r\n        }\r\n\r\n    }\r\n    #endif\r\n\r\n    vec4 indirectDiffuse = indirectIrradiance * BRDF_Diffuse_Lambert(diffuseColor);\r\n    vec4 indirectSpecular = vec4(0., 0., 0., 0.);\r\n\r\n    #if defined( USE_ENV_MAP ) && defined( USE_PBR )\r\n        indirectSpecular += indirectRadiance * BRDF_Specular_GGX_Environment(N, V, specularColor, roughness) * specularStrength;\r\n    #endif\r\n\r\n    #ifdef USE_AOMAP\r\n\r\n    \t// reads channel R, compatible with a combined OcclusionRoughnessMetallic (RGB) texture\r\n    \tfloat ambientOcclusion = ( texture2D( aoMap, v_Uv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\r\n\r\n    \tindirectDiffuse *= ambientOcclusion;\r\n\r\n    \t#if defined( USE_ENV_MAP ) && defined( USE_PBR )\r\n\r\n    \t\tfloat dotNV = saturate( dot( N, V ) );\r\n\r\n    \t\tindirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, GGXRoughnessToBlinnExponent(roughness) );\r\n\r\n    \t#endif\r\n\r\n    #endif\r\n\r\n    outColor.xyz = totalReflect.xyz + indirectDiffuse.xyz + indirectSpecular.xyz;\r\n#endif",light_pars_frag:"#ifdef USE_AMBIENT_LIGHT\r\n    #include <ambientlight_pars_frag>\r\n#endif\r\n#ifdef USE_DIRECT_LIGHT\r\n    #include <directlight_pars_frag>\r\n#endif\r\n#ifdef USE_POINT_LIGHT\r\n    #include <pointlight_pars_frag>\r\n#endif\r\n#ifdef USE_SPOT_LIGHT\r\n    #include <spotlight_pars_frag>\r\n#endif\r\n\r\n#if defined(USE_PBR) && defined(USE_ENV_MAP)\r\n\r\n    vec4 getLightProbeIndirectIrradiance(const in int maxMIPLevel, const in vec3 envDir) {\r\n        // TODO: replace with properly filtered cubemaps and access the irradiance LOD level, be it the last LOD level\r\n    \t// of a specular cubemap, or just the default level of a specially created irradiance cubemap.\r\n\r\n    \t#ifdef TEXTURE_LOD_EXT\r\n\r\n    \t\tvec4 envMapColor = textureCubeLodEXT( envMap, envDir, float( maxMIPLevel ) );\r\n\r\n    \t#else\r\n\r\n    \t\t// force the bias high to get the last LOD level as it is the most blurred.\r\n    \t\tvec4 envMapColor = textureCube( envMap, envDir, float( maxMIPLevel ) );\r\n\r\n    \t#endif\r\n\r\n        envMapColor = envMapTexelToLinear( envMapColor );\r\n\r\n        return PI * envMapColor * u_EnvMap_Intensity;\r\n    }\r\n\r\n    // taken from here: http://casual-effects.blogspot.ca/2011/08/plausible-environment-lighting-in-two.html\r\n    float getSpecularMIPLevel( const in float blinnShininessExponent, const in int maxMIPLevel ) {\r\n\r\n    \t//float envMapWidth = pow( 2.0, maxMIPLevelScalar );\r\n    \t//float desiredMIPLevel = log2( envMapWidth * sqrt( 3.0 ) ) - 0.5 * log2( pow2( blinnShininessExponent ) + 1.0 );\r\n\r\n    \tfloat maxMIPLevelScalar = float( maxMIPLevel );\r\n    \tfloat desiredMIPLevel = maxMIPLevelScalar - 0.79248 - 0.5 * log2( pow2( blinnShininessExponent ) + 1.0 );\r\n\r\n    \t// clamp to allowable LOD ranges.\r\n    \treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\r\n\r\n    }\r\n\r\n    vec4 getLightProbeIndirectRadiance(const in float blinnShininessExponent, const in int maxMIPLevel, const in vec3 envDir) {\r\n        float specularMIPLevel = getSpecularMIPLevel( blinnShininessExponent, maxMIPLevel );\r\n\r\n        #ifdef TEXTURE_LOD_EXT\r\n\r\n    \t\tvec4 envMapColor = textureCubeLodEXT( envMap, envDir, specularMIPLevel );\r\n\r\n    \t#else\r\n\r\n    \t\tvec4 envMapColor = textureCube( envMap, envDir, specularMIPLevel );\r\n\r\n    \t#endif\r\n\r\n        envMapColor = envMapTexelToLinear( envMapColor );\r\n\r\n        return envMapColor * u_EnvMap_Intensity;\r\n    }\r\n\r\n    // ref: https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\r\n    float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\r\n\r\n    \treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\r\n\r\n    }\r\n\r\n#endif",normalMap_pars_frag:"#include <tbn>\r\n#include <tsn>\r\nuniform sampler2D normalMap;",normal_frag:"#ifdef USE_NORMAL\r\n    #ifdef DOUBLE_SIDED\r\n    \tfloat flipNormal = ( float( gl_FrontFacing ) * 2.0 - 1.0 );\r\n    #else\r\n    \tfloat flipNormal = 1.0;\r\n    #endif\r\n    #ifdef FLAT_SHADED\r\n        // Workaround for Adreno/Nexus5 not able able to do dFdx( vViewPosition ) ...\r\n    \tvec3 fdx = vec3( dFdx( v_modelPos.x ), dFdx( v_modelPos.y ), dFdx( v_modelPos.z ) );\r\n    \tvec3 fdy = vec3( dFdy( v_modelPos.x ), dFdy( v_modelPos.y ), dFdy( v_modelPos.z ) );\r\n    \tvec3 N = normalize( cross( fdx, fdy ) );\r\n    #else\r\n        vec3 N = normalize(v_Normal) * flipNormal;\r\n    #endif\r\n    #ifdef USE_NORMAL_MAP\r\n        vec3 normalMapColor = texture2D(normalMap, v_Uv).rgb;\r\n        // for now, uv coord is flip Y\r\n        mat3 tspace = tsn(N, -v_modelPos, vec2(v_Uv.x, 1.0 - v_Uv.y));\r\n        // mat3 tspace = tbn(normalize(v_Normal), v_modelPos, vec2(v_Uv.x, 1.0 - v_Uv.y));\r\n        N = normalize(tspace * (normalMapColor * 2.0 - 1.0));\r\n    #elif defined(USE_BUMPMAP)\r\n        N = perturbNormalArb(-v_modelPos, N, dHdxy_fwd(v_Uv));\r\n    #endif\r\n#endif",normal_pars_frag:"#if defined(USE_NORMAL) && !defined(FLAT_SHADED)\r\n    varying vec3 v_Normal;\r\n#endif",normal_pars_vert:"#if defined(USE_NORMAL) && !defined(FLAT_SHADED)\r\n    //attribute vec3 a_Normal;\r\n    varying vec3 v_Normal;\r\n#endif",normal_vert:"#if defined(USE_NORMAL) && !defined(FLAT_SHADED)\r\n    v_Normal = (transpose(inverse(u_Model)) * vec4(objectNormal, 1.0)).xyz;\r\n\r\n    #ifdef FLIP_SIDED\r\n    \tv_Normal = - v_Normal;\r\n    #endif\r\n#endif",packing:"const float PackUpscale = 256. / 255.; // fraction -> 0..1 (including 1)\r\nconst float UnpackDownscale = 255. / 256.; // 0..1 -> fraction (excluding 1)\r\n\r\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256.,  256. );\r\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\r\n\r\nconst float ShiftRight8 = 1. / 256.;\r\n\r\nvec4 packDepthToRGBA( const in float v ) {\r\n\r\n    vec4 r = vec4( fract( v * PackFactors ), v );\r\n    r.yzw -= r.xyz * ShiftRight8; // tidy overflow\r\n    return r * PackUpscale;\r\n\r\n}\r\n\r\nfloat unpackRGBAToDepth( const in vec4 v ) {\r\n\r\n    return dot( v, UnpackFactors );\r\n\r\n}",pointlight_pars_frag:"struct PointLight\r\n{\r\n    vec3 position;\r\n    vec4 color;\r\n    float intensity;\r\n    float distance;\r\n    float decay;\r\n\r\n    int shadow;\r\n    float shadowBias;\r\n    float shadowRadius;\r\n    vec2 shadowMapSize;\r\n\r\n    float shadowCameraNear;\r\n    float shadowCameraFar;\r\n};\r\nuniform PointLight u_Point[USE_POINT_LIGHT];",premultipliedAlpha_frag:"#ifdef USE_PREMULTIPLIED_ALPHA\r\n    gl_FragColor.rgb = gl_FragColor.rgb * gl_FragColor.a;\r\n#endif",pvm_vert:"gl_Position = u_Projection * u_View * u_Model * vec4(transformed, 1.0);",shadow:"float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\r\n\r\n    return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\r\n\r\n}\r\n\r\nfloat textureCubeCompare( samplerCube depths, vec3 uv, float compare ) {\r\n\r\n    return step( compare, unpackRGBAToDepth( textureCube( depths, uv ) ) );\r\n\r\n}\r\n\r\nfloat getShadow( sampler2D shadowMap, vec4 shadowCoord, float shadowBias, float shadowRadius, vec2 shadowMapSize ) {\r\n    shadowCoord.xyz /= shadowCoord.w;\r\n\r\n    float depth = shadowCoord.z + shadowBias;\r\n\r\n    bvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\r\n    bool inFrustum = all( inFrustumVec );\r\n\r\n    bvec2 frustumTestVec = bvec2( inFrustum, depth <= 1.0 );\r\n\r\n    bool frustumTest = all( frustumTestVec );\r\n\r\n    if ( frustumTest ) {\r\n        #ifdef USE_PCF_SOFT_SHADOW\r\n            // TODO x, y not equal\r\n            float texelSize = shadowRadius / shadowMapSize.x;\r\n\r\n            vec2 poissonDisk[4];\r\n            poissonDisk[0] = vec2(-0.94201624, -0.39906216);\r\n            poissonDisk[1] = vec2(0.94558609, -0.76890725);\r\n            poissonDisk[2] = vec2(-0.094184101, -0.92938870);\r\n            poissonDisk[3] = vec2(0.34495938, 0.29387760);\r\n\r\n            return texture2DCompare( shadowMap, shadowCoord.xy + poissonDisk[0] * texelSize, depth ) * 0.25 +\r\n                texture2DCompare( shadowMap, shadowCoord.xy + poissonDisk[1] * texelSize, depth ) * 0.25 +\r\n                texture2DCompare( shadowMap, shadowCoord.xy + poissonDisk[2] * texelSize, depth ) * 0.25 +\r\n                texture2DCompare( shadowMap, shadowCoord.xy + poissonDisk[3] * texelSize, depth ) * 0.25;\r\n        #else\r\n            return texture2DCompare( shadowMap, shadowCoord.xy, depth );\r\n        #endif\r\n    }\r\n\r\n    return 1.0;\r\n\r\n}\r\n\r\nfloat getPointShadow( samplerCube shadowMap, vec3 V, float shadowBias, float shadowRadius, vec2 shadowMapSize, float shadowCameraNear, float shadowCameraFar ) {\r\n\r\n    // depth = normalized distance from light to fragment position\r\n    float depth = ( length( V ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear ); // need to clamp?\r\n    depth += shadowBias;\r\n\r\n    #ifdef USE_PCF_SOFT_SHADOW\r\n        // TODO x, y equal force\r\n        float texelSize = shadowRadius / shadowMapSize.x;\r\n\r\n        vec3 poissonDisk[4];\r\n        poissonDisk[0] = vec3(-1.0, 1.0, -1.0);\r\n        poissonDisk[1] = vec3(1.0, -1.0, -1.0);\r\n        poissonDisk[2] = vec3(-1.0, -1.0, -1.0);\r\n        poissonDisk[3] = vec3(1.0, -1.0, 1.0);\r\n\r\n        return textureCubeCompare( shadowMap, normalize(V) + poissonDisk[0] * texelSize, depth ) * 0.25 +\r\n            textureCubeCompare( shadowMap, normalize(V) + poissonDisk[1] * texelSize, depth ) * 0.25 +\r\n            textureCubeCompare( shadowMap, normalize(V) + poissonDisk[2] * texelSize, depth ) * 0.25 +\r\n            textureCubeCompare( shadowMap, normalize(V) + poissonDisk[3] * texelSize, depth ) * 0.25;\r\n    #else\r\n        return textureCubeCompare( shadowMap, normalize(V), depth);\r\n    #endif\r\n}",shadowMap_frag:"#ifdef USE_SHADOW\r\n    // outColor *= getShadowMask();\r\n#endif",shadowMap_pars_frag:"#ifdef USE_SHADOW\r\n\r\n    #ifdef USE_DIRECT_LIGHT\r\n\r\n        uniform sampler2D directionalShadowMap[ USE_DIRECT_LIGHT ];\r\n        varying vec4 vDirectionalShadowCoord[ USE_DIRECT_LIGHT ];\r\n\r\n    #endif\r\n\r\n    #ifdef USE_POINT_LIGHT\r\n\r\n        uniform samplerCube pointShadowMap[ USE_POINT_LIGHT ];\r\n\r\n    #endif\r\n\r\n    #ifdef USE_SPOT_LIGHT\r\n\r\n        uniform sampler2D spotShadowMap[ USE_SPOT_LIGHT ];\r\n        varying vec4 vSpotShadowCoord[ USE_SPOT_LIGHT ];\r\n\r\n    #endif\r\n\r\n    #include <packing>\r\n    #include <shadow>\r\n\r\n#endif",shadowMap_pars_vert:"#ifdef USE_SHADOW\r\n\r\n    #ifdef USE_DIRECT_LIGHT\r\n\r\n        uniform mat4 directionalShadowMatrix[ USE_DIRECT_LIGHT ];\r\n        varying vec4 vDirectionalShadowCoord[ USE_DIRECT_LIGHT ];\r\n\r\n    #endif\r\n\r\n    #ifdef USE_POINT_LIGHT\r\n\r\n        // nothing\r\n\r\n    #endif\r\n\r\n    #ifdef USE_SPOT_LIGHT\r\n\r\n        uniform mat4 spotShadowMatrix[ USE_SPOT_LIGHT ];\r\n        varying vec4 vSpotShadowCoord[ USE_SPOT_LIGHT ];\r\n\r\n    #endif\r\n\r\n#endif",shadowMap_vert:"#ifdef USE_SHADOW\r\n\r\n    vec4 worldPosition = u_Model * vec4(transformed, 1.0);\r\n\r\n    #ifdef USE_DIRECT_LIGHT\r\n\r\n        for ( int i = 0; i < USE_DIRECT_LIGHT; i ++ ) {\r\n\r\n            vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * worldPosition;\r\n\r\n        }\r\n\r\n    #endif\r\n\r\n    #ifdef USE_POINT_LIGHT\r\n\r\n        // nothing\r\n\r\n    #endif\r\n\r\n    #ifdef USE_SPOT_LIGHT\r\n\r\n        for ( int i = 0; i < USE_SPOT_LIGHT; i ++ ) {\r\n\r\n            vSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * worldPosition;\r\n\r\n        }\r\n\r\n    #endif\r\n\r\n#endif",skinning_pars_vert:"#ifdef USE_SKINNING\r\n\r\n    attribute vec4 skinIndex;\r\n\tattribute vec4 skinWeight;\r\n\r\n    uniform mat4 bindMatrix;\r\n\tuniform mat4 bindMatrixInverse;\r\n\r\n    #ifdef BONE_TEXTURE\r\n        uniform sampler2D boneTexture;\r\n        uniform int boneTextureSize;\r\n\r\n        mat4 getBoneMatrix( const in float i ) {\r\n            float j = i * 4.0;\r\n            float x = mod( j, float( boneTextureSize ) );\r\n            float y = floor( j / float( boneTextureSize ) );\r\n\r\n            float dx = 1.0 / float( boneTextureSize );\r\n            float dy = 1.0 / float( boneTextureSize );\r\n\r\n            y = dy * ( y + 0.5 );\r\n\r\n            vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\r\n            vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\r\n            vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\r\n            vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\r\n\r\n            mat4 bone = mat4( v1, v2, v3, v4 );\r\n\r\n            return bone;\r\n        }\r\n    #else\r\n        uniform mat4 boneMatrices[MAX_BONES];\r\n\r\n        mat4 getBoneMatrix(const in float i) {\r\n            mat4 bone = boneMatrices[int(i)];\r\n            return bone;\r\n        }\r\n    #endif\r\n\r\n#endif",skinning_vert:"#ifdef USE_SKINNING\r\n\r\n    mat4 boneMatX = getBoneMatrix( skinIndex.x );\r\n    mat4 boneMatY = getBoneMatrix( skinIndex.y );\r\n    mat4 boneMatZ = getBoneMatrix( skinIndex.z );\r\n    mat4 boneMatW = getBoneMatrix( skinIndex.w );\r\n\r\n    vec4 skinVertex = bindMatrix * vec4(transformed, 1.0);\r\n\r\n    vec4 skinned = vec4( 0.0 );\r\n\tskinned += boneMatX * skinVertex * skinWeight.x;\r\n\tskinned += boneMatY * skinVertex * skinWeight.y;\r\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\r\n\tskinned += boneMatW * skinVertex * skinWeight.w;\r\n\tskinned = bindMatrixInverse * skinned;\r\n\r\n    // override\r\n    transformed = skinned.xyz / skinned.w;\r\n\r\n    #if defined(USE_NORMAL) || defined(USE_ENV_MAP)\r\n        mat4 skinMatrix = mat4( 0.0 );\r\n        skinMatrix += skinWeight.x * boneMatX;\r\n        skinMatrix += skinWeight.y * boneMatY;\r\n        skinMatrix += skinWeight.z * boneMatZ;\r\n        skinMatrix += skinWeight.w * boneMatW;\r\n        skinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\r\n\r\n        // override\r\n        objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\r\n    #endif\r\n\r\n#endif",specularMap_frag:"float specularStrength;\r\n\r\n#ifdef USE_SPECULARMAP\r\n\r\n\tvec4 texelSpecular = texture2D( specularMap, v_Uv );\r\n\tspecularStrength = texelSpecular.r;\r\n\r\n#else\r\n\r\n\tspecularStrength = 1.0;\r\n\r\n#endif",specularMap_pars_frag:"#ifdef USE_SPECULARMAP\r\n\r\n\tuniform sampler2D specularMap;\r\n\r\n#endif",spotlight_pars_frag:"struct SpotLight\r\n{\r\n    vec3 position;\r\n    vec4 color;\r\n    float intensity;\r\n    float distance;\r\n    float decay;\r\n    float coneCos;\r\n    float penumbraCos;\r\n    vec3 direction;\r\n\r\n    int shadow;\r\n    float shadowBias;\r\n    float shadowRadius;\r\n    vec2 shadowMapSize;\r\n};\r\nuniform SpotLight u_Spot[USE_SPOT_LIGHT];",tbn:"mat3 tbn(vec3 N, vec3 p, vec2 uv) {\r\n    vec3 dp1 = dFdx(p.xyz);\r\n    vec3 dp2 = dFdy(p.xyz);\r\n    vec2 duv1 = dFdx(uv.st);\r\n    vec2 duv2 = dFdy(uv.st);\r\n    vec3 dp2perp = cross(dp2, N);\r\n    vec3 dp1perp = cross(N, dp1);\r\n    vec3 T = dp2perp * duv1.x + dp1perp * duv2.x;\r\n    vec3 B = dp2perp * duv1.y + dp1perp * duv2.y;\r\n    float invmax = 1.0 / sqrt(max(dot(T,T), dot(B,B)));\r\n    return mat3(T * invmax, B * invmax, N);\r\n}",transpose:"mat4 transpose(mat4 inMatrix) {\r\n    vec4 i0 = inMatrix[0];\r\n    vec4 i1 = inMatrix[1];\r\n    vec4 i2 = inMatrix[2];\r\n    vec4 i3 = inMatrix[3];\r\n    mat4 outMatrix = mat4(\r\n        vec4(i0.x, i1.x, i2.x, i3.x),\r\n        vec4(i0.y, i1.y, i2.y, i3.y),\r\n        vec4(i0.z, i1.z, i2.z, i3.z),\r\n        vec4(i0.w, i1.w, i2.w, i3.w)\r\n    );\r\n    return outMatrix;\r\n}",tsn:"mat3 tsn(vec3 N, vec3 V, vec2 uv) {\r\n\r\n    vec3 q0 = dFdx( V.xyz );\r\n    vec3 q1 = dFdy( V.xyz );\r\n    vec2 st0 = dFdx( uv.st );\r\n    vec2 st1 = dFdy( uv.st );\r\n\r\n    vec3 S = normalize( q0 * st1.t - q1 * st0.t );\r\n    vec3 T = normalize( -q0 * st1.s + q1 * st0.s );\r\n    // vec3 N = normalize( N );\r\n\r\n    mat3 tsn = mat3( S, T, N );\r\n    return tsn;\r\n}",uv_pars_frag:"#if defined(USE_DIFFUSE_MAP) || defined(USE_NORMAL_MAP) || defined(USE_BUMPMAP) || defined(USE_SPECULARMAP) || defined(USE_EMISSIVEMAP) || defined(USE_ROUGHNESSMAP) || defined(USE_METALNESSMAP)\r\n    varying vec2 v_Uv;\r\n#endif\r\n\r\n#ifdef USE_AOMAP\r\n    varying vec2 v_Uv2;\r\n#endif",uv_pars_vert:"#if defined(USE_DIFFUSE_MAP) || defined(USE_NORMAL_MAP) || defined(USE_BUMPMAP) || defined(USE_SPECULARMAP) || defined(USE_EMISSIVEMAP) || defined(USE_ROUGHNESSMAP) || defined(USE_METALNESSMAP)\r\n    attribute vec2 a_Uv;\r\n    varying vec2 v_Uv;\r\n    uniform mat3 uvTransform;\r\n#endif\r\n\r\n#ifdef USE_AOMAP\r\n    attribute vec2 a_Uv2;\r\n    varying vec2 v_Uv2;\r\n#endif\r\n",uv_vert:"#if defined(USE_DIFFUSE_MAP) || defined(USE_NORMAL_MAP) || defined(USE_BUMPMAP) || defined(USE_SPECULARMAP) || defined(USE_EMISSIVEMAP) || defined(USE_ROUGHNESSMAP) || defined(USE_METALNESSMAP)\r\n    v_Uv = (uvTransform * vec3(a_Uv, 1)).xy;\r\n#endif\r\n\r\n#ifdef USE_AOMAP\r\n    v_Uv2 = a_Uv2;\r\n#endif",viewModelPos_pars_frag:"#if defined(USE_POINT_LIGHT) || defined(USE_SPOT_LIGHT) || defined(USE_NORMAL_MAP) || defined(USE_BUMPMAP) || defined(FLAT_SHADED) || defined(USE_PHONG) || defined(USE_PBR) || defined(NUM_CLIPPING_PLANES) \r\n    varying vec3 v_modelPos;\r\n#endif",viewModelPos_pars_vert:"#if defined(USE_POINT_LIGHT) || defined(USE_SPOT_LIGHT) || defined(USE_NORMAL_MAP) || defined(USE_BUMPMAP) || defined(FLAT_SHADED) || defined(USE_PHONG) || defined(USE_PBR)|| defined(NUM_CLIPPING_PLANES)\r\n    varying vec3 v_modelPos;\r\n#endif",viewModelPos_vert:"#if defined(USE_POINT_LIGHT) || defined(USE_SPOT_LIGHT) || defined(USE_NORMAL_MAP) || defined(USE_BUMPMAP) || defined(FLAT_SHADED) || defined(USE_PHONG) || defined(USE_PBR) || defined(NUM_CLIPPING_PLANES)\r\n    v_modelPos = (u_Model * vec4(transformed, 1.0)).xyz;\r\n#endif"},Wt={basic_frag:"#include <common_frag>\r\n#include <uv_pars_frag>\r\n#include <color_pars_frag>\r\n#include <diffuseMap_pars_frag>\r\n#include <envMap_pars_frag>\r\n#include <aoMap_pars_frag>\r\n#include <fog_pars_frag>\r\nvoid main() {\r\n    #include <begin_frag>\r\n    #include <color_frag>\r\n    #include <diffuseMap_frag>\r\n    #include <alphaTest_frag>\r\n    #include <envMap_frag>\r\n    #include <end_frag>\r\n    #include <encodings_frag>\r\n    #include <premultipliedAlpha_frag>\r\n    #include <fog_frag>\r\n}",basic_vert:"#include <common_vert>\r\n#include <uv_pars_vert>\r\n#include <color_pars_vert>\r\n#include <envMap_pars_vert>\r\n#include <skinning_pars_vert>\r\nvoid main() {\r\n    #include <begin_vert>\r\n    #include <skinning_vert>\r\n    #include <pvm_vert>\r\n    #include <uv_vert>\r\n    #include <color_vert>\r\n    #include <envMap_vert>\r\n}",canvas2d_frag:"#include <common_frag>\r\nvarying vec2 v_Uv;\r\nuniform sampler2D spriteTexture;\r\nvoid main() {\r\n    #include <begin_frag>\r\n    outColor *= texture2D(spriteTexture, v_Uv);\r\n    #include <end_frag>\r\n    #include <premultipliedAlpha_frag>\r\n}",canvas2d_vert:"#include <common_vert>\r\nattribute vec2 a_Uv;\r\nvarying vec2 v_Uv;\r\nvoid main() {\r\n    #include <begin_vert>\r\n    #include <pvm_vert>\r\n    v_Uv = a_Uv;\r\n}",depth_frag:"#include <common_frag>\r\n#include <diffuseMap_pars_frag>\r\n\r\n#include <uv_pars_frag>\r\n\r\n#include <packing>\r\n\r\nvoid main() {\r\n    #if defined(USE_DIFFUSE_MAP) && defined(ALPHATEST)\r\n        vec4 texelColor = texture2D( texture, v_Uv );\r\n\r\n        float alpha = texelColor.a * u_Opacity;\r\n        if(alpha < ALPHATEST) discard;\r\n    #endif\r\n    \r\n    #ifdef DEPTH_PACKING_RGBA\r\n        gl_FragColor = packDepthToRGBA(gl_FragCoord.z);\r\n    #else\r\n        gl_FragColor = vec4( vec3( 1.0 - gl_FragCoord.z ), u_Opacity );\r\n    #endif\r\n}",depth_vert:"#include <common_vert>\r\n#include <skinning_pars_vert>\r\n#include <uv_pars_vert>\r\nvoid main() {\r\n    #include <uv_vert>\r\n    #include <begin_vert>\r\n    #include <skinning_vert>\r\n    #include <pvm_vert>\r\n}",distance_frag:"#include <common_frag>\r\nuniform float nearDistance;\r\nuniform float farDistance;\r\nvarying vec3 v_ModelPos;\r\n#include <packing>\r\nvoid main() {\r\n    float dist = length( v_ModelPos - u_CameraPosition );\r\n\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\r\n\tdist = saturate( dist ); // clamp to [ 0, 1 ]\r\n\r\n    gl_FragColor = packDepthToRGBA(dist);\r\n}",distance_vert:"#include <common_vert>\r\nvarying vec3 v_ModelPos;\r\n#include <skinning_pars_vert>\r\nvoid main() {\r\n    #include <begin_vert>\r\n    #include <skinning_vert>\r\n    #include <pvm_vert>\r\n    v_ModelPos = (u_Model * vec4(transformed, 1.0)).xyz;\r\n}",lambert_frag:"#include <common_frag>\r\n\r\nuniform vec3 emissive;\r\n\r\n#include <uv_pars_frag>\r\n#include <color_pars_frag>\r\n#include <diffuseMap_pars_frag>\r\n#include <normalMap_pars_frag>\r\n#include <bumpMap_pars_frag>\r\n#include <light_pars_frag>\r\n#include <normal_pars_frag>\r\n#include <viewModelPos_pars_frag>\r\n#include <bsdfs>\r\n#include <envMap_pars_frag>\r\n#include <aoMap_pars_frag>\r\n#include <shadowMap_pars_frag>\r\n#include <fog_pars_frag>\r\n#include <emissiveMap_pars_frag>\r\n#include <clippingPlanes_pars_frag>\r\nvoid main() {\r\n    #include <clippingPlanes_frag>\r\n    #include <begin_frag>\r\n    #include <color_frag>\r\n    #include <diffuseMap_frag>\r\n    #include <alphaTest_frag>\r\n    #include <normal_frag>\r\n    #include <light_frag>\r\n    #include <envMap_frag>\r\n    #include <shadowMap_frag>\r\n\r\n    vec3 totalEmissiveRadiance = emissive;\r\n    #include <emissiveMap_frag>\r\n    outColor += vec4(totalEmissiveRadiance.rgb, 0.0);\r\n\r\n    #include <end_frag>\r\n    #include <encodings_frag>\r\n    #include <premultipliedAlpha_frag>\r\n    #include <fog_frag>\r\n}",lambert_vert:"#include <common_vert>\r\n#include <normal_pars_vert>\r\n#include <uv_pars_vert>\r\n#include <color_pars_vert>\r\n#include <viewModelPos_pars_vert>\r\n#include <envMap_pars_vert>\r\n#include <shadowMap_pars_vert>\r\n#include <skinning_pars_vert>\r\nvoid main() {\r\n    #include <begin_vert>\r\n    #include <skinning_vert>\r\n    #include <pvm_vert>\r\n    #include <normal_vert>\r\n    #include <uv_vert>\r\n    #include <color_vert>\r\n    #include <viewModelPos_vert>\r\n    #include <envMap_vert>\r\n    #include <shadowMap_vert>\r\n}",linedashed_frag:"#include <common_frag>\r\n#include <fog_pars_frag>\r\n\r\nuniform float dashSize;\r\nuniform float totalSize;\r\n\r\nvarying float vLineDistance;\r\n\r\nvoid main() {\r\n\r\n    if ( mod( vLineDistance, totalSize ) > dashSize ) {\r\n\t\tdiscard;\r\n\t}\r\n\r\n    #include <begin_frag>\r\n    #include <end_frag>\r\n    #include <premultipliedAlpha_frag>\r\n    #include <fog_frag>\r\n}",linedashed_vert:"#include <common_vert>\r\n\r\nuniform float scale;\r\nattribute float lineDistance;\r\n\r\nvarying float vLineDistance;\r\n\r\nvoid main() {\r\n    vLineDistance = scale * lineDistance;\r\n\r\n    vec3 transformed = vec3(a_Position);\r\n\r\n    #include <pvm_vert>\r\n}",normaldepth_frag:"#include <common_frag>\r\n#include <diffuseMap_pars_frag>\r\n\r\n#include <uv_pars_frag>\r\n\r\n#define USE_NORMAL\r\n\r\n#include <packing>\r\n#include <normal_pars_frag>\r\n\r\nvoid main() {\r\n    #if defined(USE_DIFFUSE_MAP) && defined(ALPHATEST)\r\n        vec4 texelColor = texture2D( texture, v_Uv );\r\n\r\n        float alpha = texelColor.a * u_Opacity;\r\n        if(alpha < ALPHATEST) discard;\r\n    #endif\r\n    vec4 packedNormalDepth;\r\n    packedNormalDepth.xyz = normalize(v_Normal) * 0.5 + 0.5;\r\n    packedNormalDepth.w = gl_FragCoord.z;\r\n    gl_FragColor = packedNormalDepth;\r\n}",normaldepth_vert:"#include <common_vert>\r\n\r\n#define USE_NORMAL\r\n\r\n#include <skinning_pars_vert>\r\n#include <normal_pars_vert>\r\n#include <uv_pars_vert>\r\nvoid main() {\r\n    #include <uv_vert>\r\n    #include <begin_vert>\r\n    #include <skinning_vert>\r\n    #include <normal_vert>\r\n    #include <pvm_vert>\r\n}",pbr_frag:"#include <common_frag>\r\n\r\n// if no light> this will not active\r\nuniform float u_Metalness;\r\n#ifdef USE_METALNESSMAP\r\n\tuniform sampler2D metalnessMap;\r\n#endif\r\n\r\nuniform float u_Roughness;\r\n#ifdef USE_ROUGHNESSMAP\r\n\tuniform sampler2D roughnessMap;\r\n#endif\r\n\r\nuniform vec3 emissive;\r\n\r\n#include <uv_pars_frag>\r\n#include <color_pars_frag>\r\n#include <diffuseMap_pars_frag>\r\n#include <normalMap_pars_frag>\r\n#include <bumpMap_pars_frag>\r\n#include <envMap_pars_frag>\r\n#include <aoMap_pars_frag>\r\n#include <light_pars_frag>\r\n#include <normal_pars_frag>\r\n#include <viewModelPos_pars_frag>\r\n#include <bsdfs>\r\n#include <shadowMap_pars_frag>\r\n#include <fog_pars_frag>\r\n#include <emissiveMap_pars_frag>\r\n#include <clippingPlanes_pars_frag>\r\nvoid main() {\r\n    #include <clippingPlanes_frag>\r\n    #include <begin_frag>\r\n    #include <color_frag>\r\n    #include <diffuseMap_frag>\r\n    #include <alphaTest_frag>\r\n    #include <normal_frag>\r\n    #include <specularMap_frag>\r\n\r\n    float roughnessFactor = u_Roughness;\r\n    #ifdef USE_ROUGHNESSMAP\r\n    \tvec4 texelRoughness = texture2D( roughnessMap, v_Uv );\r\n    \t// reads channel G, compatible with a combined OcclusionRoughnessMetallic (RGB) texture\r\n    \troughnessFactor *= texelRoughness.g;\r\n    #endif\r\n\r\n    float metalnessFactor = u_Metalness;\r\n    #ifdef USE_METALNESSMAP\r\n    \tvec4 texelMetalness = texture2D( metalnessMap, v_Uv );\r\n    \t// reads channel B, compatible with a combined OcclusionRoughnessMetallic (RGB) texture\r\n    \tmetalnessFactor *= texelMetalness.b;\r\n    #endif\r\n\r\n    #include <light_frag>\r\n    #include <shadowMap_frag>\r\n\r\n    vec3 totalEmissiveRadiance = emissive;\r\n    #include <emissiveMap_frag>\r\n    outColor += vec4(totalEmissiveRadiance.rgb, 0.0);\r\n\r\n    #include <end_frag>\r\n    #include <encodings_frag>\r\n    #include <premultipliedAlpha_frag>\r\n    #include <fog_frag>\r\n}",pbr_vert:"#include <common_vert>\r\n#include <normal_pars_vert>\r\n#include <uv_pars_vert>\r\n#include <color_pars_vert>\r\n#include <viewModelPos_pars_vert>\r\n#include <envMap_pars_vert>\r\n#include <shadowMap_pars_vert>\r\n#include <skinning_pars_vert>\r\nvoid main() {\r\n    #include <begin_vert>\r\n    #include <skinning_vert>\r\n    #include <pvm_vert>\r\n    #include <normal_vert>\r\n    #include <uv_vert>\r\n    #include <color_vert>\r\n    #include <viewModelPos_vert>\r\n    #include <envMap_vert>\r\n    #include <shadowMap_vert>\r\n}",phong_frag:"#include <common_frag>\r\n\r\n// if no light> this will not active\r\nuniform float u_Specular;\r\nuniform vec4 u_SpecularColor;\r\n#include <specularMap_pars_frag>\r\n\r\nuniform vec3 emissive;\r\n\r\n#include <uv_pars_frag>\r\n#include <color_pars_frag>\r\n#include <diffuseMap_pars_frag>\r\n#include <normalMap_pars_frag>\r\n#include <bumpMap_pars_frag>\r\n#include <light_pars_frag>\r\n#include <normal_pars_frag>\r\n#include <viewModelPos_pars_frag>\r\n#include <bsdfs>\r\n#include <envMap_pars_frag>\r\n#include <aoMap_pars_frag>\r\n#include <shadowMap_pars_frag>\r\n#include <fog_pars_frag>\r\n#include <emissiveMap_pars_frag>\r\n#include <clippingPlanes_pars_frag>\r\nvoid main() {\r\n    #include <clippingPlanes_frag>\r\n    #include <begin_frag>\r\n    #include <color_frag>\r\n    #include <diffuseMap_frag>\r\n    #include <alphaTest_frag>\r\n    #include <normal_frag>\r\n    #include <specularMap_frag>\r\n    #include <light_frag>\r\n    #include <envMap_frag>\r\n    #include <shadowMap_frag>\r\n\r\n    vec3 totalEmissiveRadiance = emissive;\r\n    #include <emissiveMap_frag>\r\n    outColor += vec4(totalEmissiveRadiance.rgb, 0.0);\r\n\r\n    #include <end_frag>\r\n    #include <encodings_frag>\r\n    #include <premultipliedAlpha_frag>\r\n    #include <fog_frag>\r\n}",phong_vert:"#include <common_vert>\r\n#include <normal_pars_vert>\r\n#include <uv_pars_vert>\r\n#include <color_pars_vert>\r\n#include <viewModelPos_pars_vert>\r\n#include <envMap_pars_vert>\r\n#include <shadowMap_pars_vert>\r\n#include <skinning_pars_vert>\r\nvoid main() {\r\n    #include <begin_vert>\r\n    #include <skinning_vert>\r\n    #include <pvm_vert>\r\n    #include <normal_vert>\r\n    #include <uv_vert>\r\n    #include <color_vert>\r\n    #include <viewModelPos_vert>\r\n    #include <envMap_vert>\r\n    #include <shadowMap_vert>\r\n}",point_frag:"#include <common_frag>\r\n#include <diffuseMap_pars_frag>\r\n#include <fog_pars_frag>\r\nvoid main() {\r\n    #include <begin_frag>\r\n    #ifdef USE_DIFFUSE_MAP\r\n        outColor *= texture2D(texture, vec2(gl_PointCoord.x, 1.0 - gl_PointCoord.y));\r\n    #endif\r\n    #include <end_frag>\r\n    #include <encodings_frag>\r\n    #include <premultipliedAlpha_frag>\r\n    #include <fog_frag>\r\n}",point_vert:"#include <common_vert>\r\nuniform float u_PointSize;\r\nuniform float u_PointScale;\r\nvoid main() {\r\n    #include <begin_vert>\r\n    #include <pvm_vert>\r\n    vec4 mvPosition = u_View * u_Model * vec4(transformed, 1.0);\r\n    #ifdef USE_SIZEATTENUATION\r\n        gl_PointSize = u_PointSize * ( u_PointScale / - mvPosition.z );\r\n    #else\r\n        gl_PointSize = u_PointSize;\r\n    #endif\r\n}"},Yt={};function qt(e,t){var r;return e?e.encoding&&(r=e.encoding):r=pe.LINEAR,r===pe.LINEAR&&t&&(r=pe.GAMMA),r}function Zt(e){switch(e){case pe.LINEAR:return["Linear","( value )"];case pe.SRGB:return["sRGB","( value )"];case pe.RGBE:return["RGBE","( value )"];case pe.RGBM7:return["RGBM","( value, 7.0 )"];case pe.RGBM16:return["RGBM","( value, 16.0 )"];case pe.RGBD:return["RGBD","( value, 256.0 )"];case pe.GAMMA:return["Gamma","( value, float( GAMMA_FACTOR ) )"];default:console.error("unsupported encoding: "+e)}}function Kt(e,t){var r=Zt(t);return"vec4 "+e+"( vec4 value ) { return "+r[0]+"ToLinear"+r[1]+"; }"}function Qt(e,t,r){var i,n,a,s=["precision "+t.precision+" float;","precision "+t.precision+" int;","precision "+t.precision+" sampler2D;","#define SHADER_NAME "+t.materialType,r,t.useRoughnessMap?"#define USE_ROUGHNESSMAP":"",t.useMetalnessMap?"#define USE_METALNESSMAP":"",0<t.pointLightNum?"#define USE_POINT_LIGHT "+t.pointLightNum:"",0<t.spotLightNum?"#define USE_SPOT_LIGHT "+t.spotLightNum:"",0<t.directLightNum?"#define USE_DIRECT_LIGHT "+t.directLightNum:"",0<t.ambientLightNum?"#define USE_AMBIENT_LIGHT "+t.ambientLightNum:"",0<t.pointLightNum||0<t.directLightNum||0<t.ambientLightNum||0<t.spotLightNum?"#define USE_LIGHT":"",0<t.pointLightNum||0<t.directLightNum||0<t.spotLightNum?"#define USE_NORMAL":"",(0<t.pointLightNum||0<t.directLightNum||0<t.spotLightNum)&&t.useNormalMap?"#define USE_NORMAL_MAP":"",(0<t.pointLightNum||0<t.directLightNum||0<t.spotLightNum)&&t.useBumpMap?"#define USE_BUMPMAP":"",(0<t.pointLightNum||0<t.directLightNum||0<t.spotLightNum)&&t.useSpecularMap?"#define USE_SPECULARMAP":"",t.useEmissiveMap?"#define USE_EMISSIVEMAP":"",t.useShadow?"#define USE_SHADOW":"",t.flatShading?"#define FLAT_SHADED":"",t.materialType==K.LAMBERT?"#define USE_LAMBERT":"",t.materialType==K.PHONG?"#define USE_PHONG":"",t.materialType==K.PBR?"#define USE_PBR":"",t.flipSided?"#define FLIP_SIDED":"",0<t.numClippingPlanes?"#define NUM_CLIPPING_PLANES "+t.numClippingPlanes:"",t.useDiffuseMap?"#define USE_DIFFUSE_MAP":"",t.useEnvMap?"#define USE_ENV_MAP":"",t.sizeAttenuation?"#define USE_SIZEATTENUATION":"",t.useAOMap?"#define USE_AOMAP":"",t.useVertexColors?"#define USE_VCOLOR":"",t.useSkinning?"#define USE_SKINNING":"",0<t.bonesNum?"#define MAX_BONES "+t.bonesNum:"",t.useVertexTexture?"#define BONE_TEXTURE":""].join("\n"),o=["#extension GL_OES_standard_derivatives : enable",t.useShaderTextureLOD&&t.useEnvMap?"#extension GL_EXT_shader_texture_lod : enable":"","precision "+t.precision+" float;","precision "+t.precision+" int;","precision "+t.precision+" sampler2D;","#define SHADER_NAME "+t.materialType,"#define PI 3.14159265359","#define EPSILON 1e-6","float pow2( const in float x ) { return x*x; }","#define LOG2 1.442695","#define RECIPROCAL_PI 0.31830988618","#define saturate(a) clamp( a, 0.0, 1.0 )","#define whiteCompliment(a) ( 1.0 - saturate( a ) )",r,t.useRoughnessMap?"#define USE_ROUGHNESSMAP":"",t.useMetalnessMap?"#define USE_METALNESSMAP":"",0<t.pointLightNum?"#define USE_POINT_LIGHT "+t.pointLightNum:"",0<t.spotLightNum?"#define USE_SPOT_LIGHT "+t.spotLightNum:"",0<t.directLightNum?"#define USE_DIRECT_LIGHT "+t.directLightNum:"",0<t.ambientLightNum?"#define USE_AMBIENT_LIGHT "+t.ambientLightNum:"",0<t.pointLightNum||0<t.directLightNum||0<t.ambientLightNum||0<t.spotLightNum?"#define USE_LIGHT":"",0<t.pointLightNum||0<t.directLightNum||0<t.spotLightNum?"#define USE_NORMAL":"",(0<t.pointLightNum||0<t.directLightNum||0<t.spotLightNum)&&t.useNormalMap?"#define USE_NORMAL_MAP":"",(0<t.pointLightNum||0<t.directLightNum||0<t.spotLightNum)&&t.useBumpMap?"#define USE_BUMPMAP":"",(0<t.pointLightNum||0<t.directLightNum||0<t.spotLightNum)&&t.useSpecularMap?"#define USE_SPECULARMAP":"",t.useEmissiveMap?"#define USE_EMISSIVEMAP":"",t.useShadow?"#define USE_SHADOW":"",t.usePCFSoftShadow?"#define USE_PCF_SOFT_SHADOW":"",t.flatShading?"#define FLAT_SHADED":"",t.materialType==K.LAMBERT?"#define USE_LAMBERT":"",t.materialType==K.PHONG?"#define USE_PHONG":"",t.materialType==K.PBR?"#define USE_PBR":"",t.doubleSided?"#define DOUBLE_SIDED":"",t.envMap&&t.useShaderTextureLOD?"#define TEXTURE_LOD_EXT":"",0<t.numClippingPlanes?"#define NUM_CLIPPING_PLANES "+t.numClippingPlanes:"",t.useDiffuseMap?"#define USE_DIFFUSE_MAP":"",t.useEnvMap?"#define USE_ENV_MAP":"",t.useAOMap?"#define USE_AOMAP":"",t.useVertexColors?"#define USE_VCOLOR":"",t.premultipliedAlpha?"#define USE_PREMULTIPLIED_ALPHA":"",t.fog?"#define USE_FOG":"",t.fogExp2?"#define USE_EXP2_FOG":"",t.alphaTest?"#define ALPHATEST "+t.alphaTest:"",t.useEnvMap?"#define "+t.envMapCombine:"","#define GAMMA_FACTOR "+t.gammaFactor,t.diffuseMapEncoding||t.envMapEncoding||t.emissiveMapEncoding||t.outputEncoding?Xt.encodings_pars_frag:"",t.diffuseMapEncoding?Kt("mapTexelToLinear",t.diffuseMapEncoding):"",t.envMapEncoding?Kt("envMapTexelToLinear",t.envMapEncoding):"",t.emissiveMapEncoding?Kt("emissiveMapTexelToLinear",t.emissiveMapEncoding):"",t.outputEncoding?(i="linearToOutputTexel",n=t.outputEncoding,a=Zt(n),"vec4 "+i+"( vec4 value ) { return LinearTo"+a[0]+a[1]+"; }"):"",t.packDepthToRGBA?"#define DEPTH_PACKING_RGBA":""].join("\n"),h=Wt[t.materialType+"_vert"]||t.vertexShader||Wt.basic_vert,u=Wt[t.materialType+"_frag"]||t.fragmentShader||Wt.basic_frag,c=[s,h].join("\n"),l=[o,u].join("\n");return new jt(e,c=Jt(c),l=Jt(l))}var Jt=function(e){return e.replace(/#include +<([\w\d.]+)>/g,function(e,t){var r=Xt[t];if(void 0===r)throw new Error("Can not resolve #include <"+t+">");return Jt(r)})};function $t(e,t,r,i,n){var a,s=e.gl,o=function(e,t,r,i,n,a,s){var o={};o.materialType=r.type;var h=e.capabilities;o.precision=h.maxPrecision,o.useShaderTextureLOD=!!h.shaderTextureLOD,o.useDiffuseMap=!!r.diffuseMap,o.useNormalMap=!!r.normalMap,o.useBumpMap=!!r.bumpMap,o.useSpecularMap=!!r.specularMap,o.useEnvMap=!!r.envMap,o.envMapCombine=r.envMapCombine,o.useEmissiveMap=!!r.emissiveMap,o.useRoughnessMap=!!r.roughnessMap,o.useMetalnessMap=!!r.metalnessMap,o.useAOMap=!!r.aoMap,o.ambientLightNum=n?n.ambientsNum:0,o.directLightNum=n?n.directsNum:0,o.pointLightNum=n?n.pointsNum:0,o.spotLightNum=n?n.spotsNum:0,o.useShadow=i.receiveShadow,o.usePCFSoftShadow=i.shadowType===de.PCF_SOFT;var u=e.state.currentRenderTarget;o.gammaFactor=t.gammaFactor,o.outputEncoding=qt(u.texture||null,t.gammaOutput),o.diffuseMapEncoding=qt(r.diffuseMap,t.gammaInput),o.envMapEncoding=qt(r.envMap,t.gammaInput),o.emissiveMapEncoding=qt(r.emissiveMap,t.gammaInput),o.alphaTest=r.alphaTest,o.premultipliedAlpha=r.premultipliedAlpha,o.useVertexColors=r.vertexColors,o.numClippingPlanes=s?s.length:0,o.flatShading=r.shading===ie.FLAT_SHADING,o.fog=!!a,o.fogExp2=!!a&&a.fogType===Q.EXP2,o.sizeAttenuation=r.sizeAttenuation,o.doubleSided=r.side===re.DOUBLE,o.flipSided=r.side===re.BACK,o.packDepthToRGBA=r.packToRGBA;var c=i.type===q.SKINNED_MESH&&i.skeleton,l=h.maxVertexUniformVectors,d=0<h.maxVertexTextures&&h.floatTextures,p=0;return d?p=1024:l<16*(p=i.skeleton?i.skeleton.bones.length:0)&&(console.warn("Program: too many bones ("+p+"), current cpu only support "+Math.floor(l/16)+" bones!!"),p=Math.floor(l/16)),o.useSkinning=c,o.bonesNum=p,o.useVertexTexture=d,r.type===K.SHADER&&(o.vertexShader=r.vertexShader,o.fragmentShader=r.fragmentShader),o}(e,t,r=r||i.material,i,n&&r.acceptLight?n.lights:null,n?n.fog:null,n?n.clippingPlanes:null),h=function(e,t){var r="";for(var i in e)r+=e[i]+"_";if(void 0!==t.defines)for(var n in t.defines)r+=n+"_"+t.defines[n]+"_";return r}(o,r),u=Yt;if(u[h])a=u[h];else{var c="";void 0!==r.defines&&(c=function(e){var t=[];for(var r in e){var i=e[r];!1!==i&&t.push("#define "+r+" "+i)}return t.join("\n")}(r.defines)),a=Qt(s,o,c),u[h]=a}return a}var er=new ge,tr=new Se;function rr(e){return e.material}function ir(e){return!0}function nr(){}var ar,sr,or=(sr=new Re,function(e,t){(!ar||ar.length<4*e.length)&&(ar=new Float32Array(4*e.length));for(var r=0;r<e.length;r++)sr.copy(e[r]),ar[4*r+0]=sr.normal.x,ar[4*r+1]=sr.normal.y,ar[4*r+2]=sr.normal.z,ar[4*r+3]=sr.constant;return ar});function hr(e){this.gl=e;var t=new Ot;this.properties=t;var r=new Nt(e),i=new Ct(e,this.capabilities=r);i.enable(e.STENCIL_TEST),i.enable(e.DEPTH_TEST),e.depthFunc(e.LEQUAL),i.setCullFace(te.BACK),i.setFlipSided(!1),i.clearColor(0,0,0,0),this.state=i,this.texture=new Dt(e,i,t,r),this.geometry=new Gt(e,i,t,r),this._usedTextureUnits=0,this._currentGeometryProgram=""}var ur,cr,lr,dr,pr,fr=[],_r=[],mr=[];function vr(){Xe.call(this),this.type=q.CAMERA,this.viewMatrix=new ve,this.projectionMatrix=new ve,this.frustum=new Ce,this.gammaFactor=2,this.gammaInput=!1,this.gammaOutput=!1,this.rect=new Se(0,0,1,1),this.frustumCulled=!0}function gr(e,t){me.call(this),this.uuid=u(),this.width=e,this.height=t,this.depthBuffer=!0,this.stencilBuffer=!0}function xr(e,t){gr.call(this,e,t),this.texture=new Ve,this.activeCubeFace=0}function yr(e){this.camera=new vr,this.targets=[new ge(1,0,0),new ge(-1,0,0),new ge(0,1,0),new ge(0,-1,0),new ge(0,0,1),new ge(0,0,-1)],this.ups=[new ge(0,-1,0),new ge(0,-1,0),new ge(0,0,1),new ge(0,0,-1),new ge(0,-1,0),new ge(0,-1,0)],this.camera.setPerspective(.5*Math.PI,1,1,1e3),this.position=new ge,this.lookTarget=new ge,this.renderTarget=e||new xr(512,512),this.renderTexture=this.renderTarget.texture,this.renderTexture.minFilter=oe.LINEAR_MIPMAP_LINEAR}function Mr(){this.depthMaterial=new Pt,this.depthMaterial.packToRGBA=!0,this.distanceMaterial=new Lt,this.oldClearColor=new Se}Object.assign(hr.prototype,{clear:function(e,t,r){var i=this.gl,n=0;(void 0===e||e)&&(n|=i.COLOR_BUFFER_BIT),(void 0===t||t)&&(n|=i.DEPTH_BUFFER_BIT),(void 0===r||r)&&(n|=i.STENCIL_BUFFER_BIT),i.clear(n)},render:function(t,e,r){var i;i=(r=void 0===r||r)?t.updateRenderList(e):t.getRenderList(e),this.renderPass(i.opaque,e,{scene:t,getMaterial:function(e){return t.overrideMaterial||e.material}}),this.renderPass(i.transparent,e,{scene:t,getMaterial:function(e){return t.overrideMaterial||e.material}})},renderPass:function(e,t,r){r=r||{};for(var i=this.gl,n=this.state,a=r.getMaterial||rr,s=r.beforeRender||nr,o=r.afterRender||nr,h=r.ifRender||ir,u=r.scene||{},c=n.currentRenderTarget,l=0,d=e.length;l<d;l++){var p=e[l];if(h(p)){var f=p.object,_=a.call(this,p),m=p.geometry,v=p.group;f.onBeforeRender(p,_),s.call(this,p,_);var g=$t(this,t,_,f,u);n.setProgram(g),this.geometry.setGeometry(m);var x=g.uuid+"_"+m.uuid;x!==this._currentGeometryProgram&&(this.setupVertexAttributes(g,m),this._currentGeometryProgram=x);var y=g.uniforms;for(var M in y){var E=y[M];if(_.uniforms&&void 0!==_.uniforms[M])if(E.type===ue.SAMPLER_2D){var T=this.allocTexUnit();this.texture.setTexture2D(_.uniforms[M],T),E.setValue(T)}else if(E.type===ue.SAMPLER_CUBE){T=this.allocTexUnit();this.texture.setTextureCube(_.uniforms[M],T),E.setValue(T)}else E.set(_.uniforms[M]);else switch(M){case"u_Projection":if(f.type===q.CANVAS2D&&f.isScreenCanvas)var b=f.orthoCamera.projectionMatrix.elements;else b=t.projectionMatrix.elements;E.setValue(b);break;case"u_View":if(f.type===q.CANVAS2D&&f.isScreenCanvas)var S=f.orthoCamera.viewMatrix.elements;else S=t.viewMatrix.elements;E.setValue(S);break;case"u_Model":var w=f.worldMatrix.elements;E.setValue(w);break;case"u_Color":var A=_.diffuse;E.setValue(A.r,A.g,A.b);break;case"u_Opacity":E.setValue(_.opacity);break;case"texture":T=this.allocTexUnit();this.texture.setTexture2D(_.diffuseMap,T),E.setValue(T);break;case"normalMap":T=this.allocTexUnit();this.texture.setTexture2D(_.normalMap,T),E.setValue(T);break;case"bumpMap":T=this.allocTexUnit();this.texture.setTexture2D(_.bumpMap,T),E.setValue(T);break;case"bumpScale":E.setValue(_.bumpScale);break;case"envMap":T=this.allocTexUnit();this.texture.setTextureCube(_.envMap,T),E.setValue(T);break;case"cubeMap":T=this.allocTexUnit();this.texture.setTextureCube(_.cubeMap,T),E.setValue(T);break;case"u_EnvMap_Intensity":E.setValue(_.envMapIntensity);break;case"u_Specular":E.setValue(_.shininess);break;case"u_SpecularColor":A=_.specular;E.setValue(A.r,A.g,A.b,1);break;case"specularMap":T=this.allocTexUnit();this.texture.setTexture2D(_.specularMap,T),E.setValue(T);break;case"aoMap":T=this.allocTexUnit();this.texture.setTexture2D(_.aoMap,T),E.setValue(T);break;case"aoMapIntensity":E.setValue(_.aoMapIntensity);break;case"u_Roughness":E.setValue(_.roughness);break;case"roughnessMap":T=this.allocTexUnit();this.texture.setTexture2D(_.roughnessMap,T),E.setValue(T);break;case"u_Metalness":E.setValue(_.metalness);break;case"metalnessMap":T=this.allocTexUnit();this.texture.setTexture2D(_.metalnessMap,T),E.setValue(T);break;case"emissive":A=_.emissive;var P=_.emissiveIntensity;E.setValue(A.r*P,A.g*P,A.b*P);break;case"emissiveMap":T=this.allocTexUnit();this.texture.setTexture2D(_.emissiveMap,T),E.setValue(T);break;case"u_CameraPosition":er.setFromMatrixPosition(t.worldMatrix),E.setValue(er.x,er.y,er.z);break;case"u_FogColor":A=u.fog.color;E.setValue(A.r,A.g,A.b);break;case"u_FogDensity":E.setValue(u.fog.density);break;case"u_FogNear":E.setValue(u.fog.near);break;case"u_FogFar":E.setValue(u.fog.far);break;case"u_PointSize":E.setValue(_.size);break;case"u_PointScale":var L=.5*c.height;E.setValue(L);break;case"dashSize":E.setValue(_.dashSize);break;case"totalSize":E.setValue(_.dashSize+_.gapSize);break;case"scale":E.setValue(_.scale);break;case"clippingPlanes[0]":var N=or(u.clippingPlanes||[],t);i.uniform4fv(E.location,N);break;case"uvTransform":var R;(R=_.diffuseMap||_.specularMap||_.normalMap||_.bumpMap||_.roughnessMap||_.metalnessMap||_.emissiveMap)&&(R.matrixAutoUpdate&&R.updateMatrix(),E.setValue(R.matrix.elements))}}f.type===q.SKINNED_MESH&&this.uploadSkeleton(y,f,g.id),_.acceptLight&&u.lights&&this.uploadLights(y,u.lights,f.receiveShadow,t);var C=f.worldMatrix.determinant()<0;this.setStates(_,C);var O=tr.set(c.width,c.height,c.width,c.height).multiply(t.rect);if(O.z-=O.x,O.w-=O.y,O.x=Math.floor(O.x),O.y=Math.floor(O.y),O.z=Math.floor(O.z),O.w=Math.floor(O.w),f.type===q.CANVAS2D){f.isScreenCanvas&&(f.setRenderViewport(O.x,O.y,O.z,O.w),n.viewport(f.viewport.x,f.viewport.y,f.viewport.z,f.viewport.w));for(var U=0,I=0;I<f.drawArray.length;I++){var F=f.drawArray[I];T=this.allocTexUnit();this.texture.setTexture2D(F.texture,T),y.spriteTexture.setValue(T),i.drawElements(i.TRIANGLES,6*F.count,i.UNSIGNED_SHORT,2*U),U+=6*F.count,this._usedTextureUnits=0}}else n.viewport(O.x,O.y,O.z,O.w),this.draw(m,_,v);this._usedTextureUnits=0,n.enable(i.DEPTH_TEST),n.depthMask(!0),n.colorMask(!0),o(this,p),f.onAfterRender(p)}}},setStates:function(e,t){var r=this.gl,i=this.state;e.transparent?i.setBlend(e.blending,e.blendEquation,e.blendSrc,e.blendDst,e.blendEquationAlpha,e.blendSrcAlpha,e.blendDstAlpha,e.premultipliedAlpha):i.setBlend(J.NONE),e.depthTest?i.enable(r.DEPTH_TEST):i.disable(r.DEPTH_TEST),i.depthMask(e.depthWrite),i.colorMask(e.colorWrite),i.setCullFace(e.side===re.DOUBLE?te.NONE:te.BACK);var n=e.side===re.BACK;t&&(n=!n),i.setFlipSided(n),void 0!==e.lineWidth&&i.setLineWidth(e.lineWidth)},draw:function(e,t,r){var i=this.gl,n=this.properties,a=null!==e.index,s=0,o=a?e.index.count:e.getAttribute("a_Position").count,h=r?r.start:0,u=r?r.count:1/0;s=Math.max(s,h),o=Math.min(o,u);var c=this.capabilities.angleInstancedArraysExt;if(a){var l=n.get(e.index),d=l.bytesPerElement,p=l.type;e.isInstancedGeometry?0<e.maxInstancedCount&&c.drawElementsInstancedANGLE(t.drawMode,o,p,s*d,e.maxInstancedCount):i.drawElements(t.drawMode,o,p,s*d)}else e.isInstancedGeometry?0<e.maxInstancedCount&&c.drawArraysInstancedANGLE(t.drawMode,s,o,e.maxInstancedCount):i.drawArrays(t.drawMode,s,o)},uploadSkeleton:function(e,t,r){if(t.skeleton&&0<t.skeleton.bones.length){var i=t.skeleton,n=this.gl;if(i.updateBones(),0<this.capabilities.maxVertexTextures&&this.capabilities.floatTextures){if(void 0===i.boneTexture){var a=Math.sqrt(4*i.bones.length);a=c(Math.ceil(a)),a=Math.max(4,a);var s=new Float32Array(a*a*4);s.set(i.boneMatrices);var o=new He(s,a,a);i.boneMatrices=s,i.boneTexture=o,i.boneTextureSize=a}var h=this.allocTexUnit();this.texture.setTexture2D(i.boneTexture,h),e.boneTexture&&e.boneTexture.setValue(h),e.boneTextureSize&&e.boneTextureSize.setValue(i.boneTextureSize)}else{var u=n.getUniformLocation(r,"boneMatrices");n.uniformMatrix4fv(u,!1,i.boneMatrices)}e.bindMatrix.setValue(t.bindMatrix.elements),e.bindMatrixInverse.setValue(t.bindMatrixInverse.elements)}},uploadLights:function(e,t,r,i){var n=this.gl;0<t.ambientsNum&&e.u_AmbientLightColor.set(t.ambient);for(var a=0;a<t.directsNum;a++){var s=t.directional[a];e["u_Directional["+a+"].direction"].set(s.direction),e["u_Directional["+a+"].intensity"].setValue(1),e["u_Directional["+a+"].color"].set(s.color);var o=s.shadow&&r;if(e["u_Directional["+a+"].shadow"].setValue(o?1:0),o){e["u_Directional["+a+"].shadowBias"].setValue(s.shadowBias),e["u_Directional["+a+"].shadowRadius"].setValue(s.shadowRadius),e["u_Directional["+a+"].shadowMapSize"].set(s.shadowMapSize);var h=this.allocTexUnit();this.texture.setTexture2D(t.directionalShadowMap[a],h),fr[a]=h}}if(0<fr.length){var u=e["directionalShadowMap[0]"];n.uniform1iv(u.location,fr),fr.length=0;var c=e["directionalShadowMatrix[0]"];n.uniformMatrix4fv(c.location,!1,t.directionalShadowMatrix)}for(a=0;a<t.pointsNum;a++){s=t.point[a];e["u_Point["+a+"].position"].set(s.position),e["u_Point["+a+"].intensity"].setValue(1),e["u_Point["+a+"].color"].set(s.color),e["u_Point["+a+"].distance"].setValue(s.distance),e["u_Point["+a+"].decay"].setValue(s.decay);o=s.shadow&&r;if(e["u_Point["+a+"].shadow"].setValue(o?1:0),o){e["u_Point["+a+"].shadowBias"].setValue(s.shadowBias),e["u_Point["+a+"].shadowRadius"].setValue(s.shadowRadius),e["u_Point["+a+"].shadowMapSize"].set(s.shadowMapSize),e["u_Point["+a+"].shadowCameraNear"].setValue(s.shadowCameraNear),e["u_Point["+a+"].shadowCameraFar"].setValue(s.shadowCameraFar);h=this.allocTexUnit();this.texture.setTextureCube(t.pointShadowMap[a],h),_r[a]=h}}if(0<_r.length){var l=e["pointShadowMap[0]"];n.uniform1iv(l.location,_r),_r.length=0}for(a=0;a<t.spotsNum;a++){s=t.spot[a];e["u_Spot["+a+"].position"].set(s.position),e["u_Spot["+a+"].direction"].set(s.direction),e["u_Spot["+a+"].intensity"].setValue(1),e["u_Spot["+a+"].color"].set(s.color),e["u_Spot["+a+"].distance"].setValue(s.distance),e["u_Spot["+a+"].decay"].setValue(s.decay),e["u_Spot["+a+"].coneCos"].setValue(s.coneCos),e["u_Spot["+a+"].penumbraCos"].setValue(s.penumbraCos);o=s.shadow&&r;if(e["u_Spot["+a+"].shadow"].setValue(o?1:0),o){e["u_Spot["+a+"].shadowBias"].setValue(s.shadowBias),e["u_Spot["+a+"].shadowRadius"].setValue(s.shadowRadius),e["u_Spot["+a+"].shadowMapSize"].set(s.shadowMapSize);h=this.allocTexUnit();this.texture.setTexture2D(t.spotShadowMap[a],h),mr[a]=h}}if(0<mr.length){var d=e["spotShadowMap[0]"];n.uniform1iv(d.location,mr),mr.length=0;var p=e["spotShadowMatrix[0]"];n.uniformMatrix4fv(p.location,!1,t.spotShadowMatrix)}},allocTexUnit:function(){var e=this._usedTextureUnits;return e>=this.capabilities.maxTextures&&console.warn("trying to use "+e+" texture units while this GPU supports only "+this.capabilities.maxTextures),this._usedTextureUnits+=1,e},setupVertexAttributes:function(e,t){var r=this.gl,i=e.attributes,n=this.properties,a=this.capabilities.angleInstancedArraysExt;for(var s in i){var o=i[s],h=t.getAttribute(s);if(h){var u,c=h.normalized,l=h.size;o.count!==l&&console.warn("WebGLCore: attribute "+s+" size not match! "+o.count+" : "+l);var d=(u=h.isInterleavedBufferAttribute?n.get(h.data):n.get(h)).buffer,p=u.type;o.format;var f=u.bytesPerElement;if(h.isInterleavedBufferAttribute){var _=h.data,m=_.stride,v=h.offset;r.enableVertexAttribArray(o.location),_&&_.isInstancedInterleavedBuffer&&(a||console.warn("ANGLE_instanced_arrays not supported"),a.vertexAttribDivisorANGLE(o.location,_.meshPerAttribute),void 0===t.maxInstancedCount&&(t.maxInstancedCount=_.meshPerAttribute*_.count)),r.bindBuffer(r.ARRAY_BUFFER,d),r.vertexAttribPointer(o.location,o.count,p,c,f*m,f*v)}else r.enableVertexAttribArray(o.location),h&&h.isInstancedBufferAttribute&&(a||console.warn("ANGLE_instanced_arrays not supported"),a.vertexAttribDivisorANGLE(o.location,h.meshPerAttribute),void 0===t.maxInstancedCount&&(t.maxInstancedCount=h.meshPerAttribute*h.count)),r.bindBuffer(r.ARRAY_BUFFER,d),r.vertexAttribPointer(o.location,o.count,p,c,0,0)}else console.warn("WebGLCore: geometry attribute "+s+" not found!")}if(t.index){var g=n.get(t.index);r.bindBuffer(r.ELEMENT_ARRAY_BUFFER,g.buffer)}}}),vr.prototype=Object.assign(Object.create(Xe.prototype),{constructor:vr,lookAt:(pr=new ve,function(e,t){pr.lookAtRH(this.position,e,t),this.quaternion.setFromRotationMatrix(pr)}),setOrtho:function(e,t,r,i,n,a){this.projectionMatrix.set(2/(t-e),0,0,-(t+e)/(t-e),0,2/(i-r),0,-(i+r)/(i-r),0,0,-2/(a-n),-(a+n)/(a-n),0,0,0,1)},setPerspective:function(e,t,r,i){this.projectionMatrix.set(1/(t*Math.tan(e/2)),0,0,0,0,1/Math.tan(e/2),0,0,0,0,-(i+r)/(i-r),-2*i*r/(i-r),0,0,-1,0)},getWorldDirection:(cr=new ge,lr=new Ae,dr=new ge,function(e){var t=e||new ge;return this.worldMatrix.decompose(cr,lr,dr),t.set(0,0,-1).applyQuaternion(lr),t}),updateMatrix:(ur=new ve,function(){Xe.prototype.updateMatrix.call(this),this.viewMatrix.getInverse(this.worldMatrix),ur.multiplyMatrices(this.projectionMatrix,this.viewMatrix),this.frustum.setFromMatrix(ur)}),copy:function(e,t){return Xe.prototype.copy.call(this,e,t),this.viewMatrix.copy(e.viewMatrix),this.projectionMatrix.copy(e.projectionMatrix),this}}),gr.prototype=Object.assign(Object.create(me.prototype),{constructor:gr,resize:function(e,t){this.width===e&&this.height===t||this.dispose(),this.width=e,this.height=t},dispose:function(){this.dispatchEvent({type:"dispose"})}}),(xr.prototype=Object.create(gr.prototype)).constructor=xr,yr.prototype.render=function(e,t){this.camera.position.copy(this.position);for(var r=0;r<6;r++)this.lookTarget.set(this.targets[r].x+this.camera.position.x,this.targets[r].y+this.camera.position.y,this.targets[r].z+this.camera.position.z),this.camera.lookAt(this.lookTarget,this.ups[r]),this.camera.updateMatrix(),this.renderTarget.activeCubeFace=r,e.texture.setRenderTarget(this.renderTarget),e.clear(!0,!0,!0),e.render(t,this.camera),e.texture.updateRenderTargetMipmap(this.renderTarget)},Object.assign(Mr.prototype,{render:function(e,t){var r=e.gl,i=e.state,n=i.states[r.STENCIL_TEST];n&&i.disable(r.STENCIL_TEST),this.oldClearColor.copy(i.currentClearColor),i.clearColor(1,1,1,1);for(var a=t.lights.shadows,s=0;s<a.length;s++)for(var o=a[s],h=o.shadow,u=h.camera,c=h.renderTarget,l=o.lightType==Z.POINT,d=l?6:1,p=0;p<d;p++){l?(h.update(o,p),c.activeCubeFace=p):h.update(o);var f=t.updateRenderList(u);e.texture.setRenderTarget(c),e.clear(!0,!0);var _=l?this.distanceMaterial:this.depthMaterial;_.uniforms=_.uniforms||{},_.uniforms.nearDistance=h.cameraNear,_.uniforms.farDistance=h.cameraFar,e.renderPass(f.opaque,u,{getMaterial:function(e){return _.side=e.material.side,_},ifRender:function(e){return e.object.castShadow}})}n&&i.enable(r.STENCIL_TEST),i.clearColor(this.oldClearColor.x,this.oldClearColor.y,this.oldClearColor.z,this.oldClearColor.w)}});var Er=new ge,Tr={};function br(e){if(void 0!==Tr[e.uuid])return Tr[e.uuid];var t;switch(e.lightType){case Z.DIRECT:t={direction:new Float32Array(3),color:new Float32Array([0,0,0,1]),shadow:!1,shadowBias:0,shadowRadius:1,shadowMapSize:new Float32Array(2)};break;case Z.POINT:t={position:new Float32Array(3),color:new Float32Array([0,0,0,1]),distance:0,decay:0,shadow:!1,shadowBias:0,shadowRadius:1,shadowMapSize:new Float32Array(2),shadowCameraNear:1,shadowCameraFar:1e3};break;case Z.SPOT:t={position:new Float32Array(3),direction:new Float32Array(3),color:new Float32Array([0,0,0,1]),distance:0,coneCos:0,penumbraCos:0,decay:0,shadow:!1,shadowBias:0,shadowRadius:1,shadowMapSize:new Float32Array(2)}}return Tr[e.uuid]=t}function Sr(){this.ambient=new Float32Array([0,0,0,1]),this.directional=[],this.directionalShadowMap=[],this.directionalShadowMatrix=[],this.point=[],this.pointShadowMap=[],this.pointShadowMatrix=[],this.spot=[],this.spotShadowMap=[],this.spotShadowMatrix=[],this.shadows=[],this.ambientsNum=0,this.directsNum=0,this.pointsNum=0,this.spotsNum=0,this.shadowsNum=0,this.totalNum=0}Object.assign(Sr.prototype,{startCount:function(){for(var e=0;e<3;e++)this.ambient[e]=0;this.shadows.length=0,this.ambientsNum=0,this.directsNum=0,this.pointsNum=0,this.spotsNum=0,this.shadowsNum=0,this.totalNum=0},add:function(e){e.lightType==Z.AMBIENT?this._doAddAmbientLight(e):e.lightType==Z.DIRECT?this._doAddDirectLight(e):e.lightType==Z.POINT?this._doAddPointLight(e):e.lightType==Z.SPOT&&this._doAddSpotLight(e),e.castShadow&&e.lightType!==Z.AMBIENT&&(this.shadows.push(e),this.shadowsNum++),this.totalNum++},endCount:function(){},_doAddAmbientLight:function(e){var t=e.intensity,r=e.color;this.ambient[0]+=r.r*t,this.ambient[1]+=r.g*t,this.ambient[2]+=r.b*t,this.ambientsNum++},_doAddDirectLight:function(e){var t=e.intensity,r=e.color,i=br(e);i.color[0]=r.r*t,i.color[1]=r.g*t,i.color[2]=r.b*t;var n=Er;if(e.getWorldDirection(n),i.direction[0]=n.x,i.direction[1]=n.y,i.direction[2]=n.z,e.castShadow?(i.shadow=!0,i.shadowBias=e.shadow.bias,i.shadowRadius=e.shadow.radius,i.shadowMapSize[0]=e.shadow.mapSize.x,i.shadowMapSize[1]=e.shadow.mapSize.y):i.shadow=!1,e.castShadow){var a=16*(this.directsNum+1);if(this.directionalShadowMatrix.length<a){var s=this.directionalShadowMatrix;this.directionalShadowMatrix=new Float32Array(a),this.directionalShadowMatrix.set(s)}this.directionalShadowMatrix.set(e.shadow.matrix.elements,16*this.directsNum),this.directionalShadowMap[this.directsNum]=e.shadow.map}this.directional[this.directsNum]=i,this.directsNum++},_doAddPointLight:function(e){var t=e.intensity,r=e.color,i=e.distance,n=e.decay,a=br(e);a.color[0]=r.r*t,a.color[1]=r.g*t,a.color[2]=r.b*t,a.distance=i,a.decay=n;var s=Er.setFromMatrixPosition(e.worldMatrix);if(a.position[0]=s.x,a.position[1]=s.y,a.position[2]=s.z,e.castShadow?(a.shadow=!0,a.shadowBias=e.shadow.bias,a.shadowRadius=e.shadow.radius,a.shadowMapSize[0]=e.shadow.mapSize.x,a.shadowMapSize[1]=e.shadow.mapSize.y,a.shadowCameraNear=e.shadow.cameraNear,a.shadowCameraFar=e.shadow.cameraFar):a.shadow=!1,e.castShadow){var o=16*(this.pointsNum+1);if(this.pointShadowMatrix.length<o){var h=this.pointShadowMatrix;this.pointShadowMatrix=new Float32Array(o),this.pointShadowMatrix.set(h)}this.pointShadowMatrix.set(e.shadow.matrix.elements,16*this.pointsNum),this.pointShadowMap[this.pointsNum]=e.shadow.map}this.point[this.pointsNum]=a,this.pointsNum++},_doAddSpotLight:function(e){var t=e.intensity,r=e.color,i=e.distance,n=e.decay,a=br(e);a.color[0]=r.r*t,a.color[1]=r.g*t,a.color[2]=r.b*t,a.distance=i,a.decay=n;var s=Er.setFromMatrixPosition(e.worldMatrix);a.position[0]=s.x,a.position[1]=s.y,a.position[2]=s.z;var o=Er;e.getWorldDirection(Er),a.direction[0]=o.x,a.direction[1]=o.y,a.direction[2]=o.z;var h=Math.cos(e.angle),u=Math.cos(e.angle*(1-e.penumbra));if(a.coneCos=h,a.penumbraCos=u,e.castShadow?(a.shadow=!0,a.shadowBias=e.shadow.bias,a.shadowRadius=e.shadow.radius,a.shadowMapSize[0]=e.shadow.mapSize.x,a.shadowMapSize[1]=e.shadow.mapSize.y):a.shadow=!1,e.castShadow){var c=16*(this.spotsNum+1);if(this.spotShadowMatrix.length<c){var l=this.spotShadowMatrix;this.spotShadowMatrix=new Float32Array(c),this.spotShadowMatrix.set(l)}this.spotShadowMatrix.set(e.shadow.matrix.elements,16*this.spotsNum),this.spotShadowMap[this.spotsNum]=e.shadow.map}this.spot[this.spotsNum]=a,this.spotsNum++}});var wr=new ge,Ar=new Ne,Pr=function(e,t){return e.renderOrder!==t.renderOrder?e.renderOrder-t.renderOrder:e.z-t.z},Lr=function(e,t){return e.renderOrder!==t.renderOrder?e.renderOrder-t.renderOrder:t.z-e.z};function Nr(){var s=[],o=0,h=[],u=0,c=[],l=0;function d(e,t,r,i,n){var a=s[o];void 0===a?(a={object:e,geometry:t,material:r,z:i,renderOrder:e.renderOrder,group:n},s[o]=a):(a.object=e,a.geometry=t,a.material=r,a.z=i,a.renderOrder=e.renderOrder,a.group=n),r.transparent?(c[l]=a,l++):(h[u]=a,u++),o++}return{opaque:h,transparent:c,startCount:function(){l=u=o=0},add:function(e,t){if(e.frustumCulled&&t.frustumCulled&&(Ar.copy(e.geometry.boundingSphere).applyMatrix4(e.worldMatrix),!t.frustum.intersectsSphere(Ar)))return;if(wr.setFromMatrixPosition(e.worldMatrix),wr.applyMatrix4(t.viewMatrix).applyMatrix4(t.projectionMatrix),Array.isArray(e.material))for(var r=e.geometry.groups,i=0;i<r.length;i++){var n=r[i],a=e.material[n.materialIndex];a&&d(e,e.geometry,a,wr.z,n)}else d(e,e.geometry,e.material,wr.z)},endCount:function(){h.length=u,c.length=l},sort:function(){h.sort(Pr),c.sort(Lr)}}}function Rr(){Xe.call(this),this.type=q.SCENE,this.overrideMaterial=null,this.fog=null,this.clippingPlanes=[],this._renderLists={},this.lights=new Sr}function Cr(e,t){Xe.call(this),this.geometry=e,this.material=t,this.type=q.MESH}function Or(e){var t=new Rr,r=this.camera=new vr;r.frustumCulled=!1,r.position.set(0,1,0),r.lookAt(new ge(0,0,0),new ge(0,0,-1)),r.setOrtho(-1,1,-1,1,.1,2),t.add(r);var i=new mt(2,2,1,1),n=this.material=new At(e);this.uniforms=n.uniforms;var a=new Cr(i,n);a.frustumCulled=!1,t.add(a),t.updateMatrix(),this.renderList=t.updateRenderList(r),this.renderConfig={}}function Ur(e){gr.call(this,e.width,e.height),this.view=e}function Ir(){this._entities={},this.enableCounter=!1}function Fr(e,t){this.backRenderTarget=new Ur(e);var r=e.getContext("webgl",t||{antialias:!0,alpha:!1,stencil:!0});this.glCore=new hr(r),this.autoClear=!0,this.performance=new Ir,this.shadowMapPass=new Mr,this.shadowAutoUpdate=!0,this.shadowNeedsUpdate=!1,this.matrixAutoUpdate=!0,this.lightsAutoupdate=!0}function Dr(e,t){gr.call(this,e,t),this.texture=new ke,this.depthTexture=null}function zr(){Xe.call(this),this.type=q.GROUP}function Br(){Xe.call(this),this.type=q.LIGHT,this.lightType="",this.color=new Oe(16777215),this.intensity=1}function Gr(){Br.call(this),this.lightType=Z.AMBIENT}function kr(){this.camera=new vr,this.matrix=new ve,this.bias=3e-4,this.radius=2,this.cameraNear=1,this.cameraFar=500,this.mapSize=new be(512,512),this.renderTarget=null,this.map=null}function Vr(){kr.call(this),this.camera.frustumCulled=!1,this.renderTarget=new Dr(this.mapSize.x,this.mapSize.y);var e=this.renderTarget.texture;e.generateMipmaps=!1,e.minFilter=oe.LINEAR,this.map=e,this.windowSize=500,this._lookTarget=new ge,this._up=new ge(0,1,0)}function Hr(){Br.call(this),this.lightType=Z.DIRECT,this.shadow=new Vr}function jr(){kr.call(this),this.renderTarget=new xr(this.mapSize.x,this.mapSize.y);var e=this.renderTarget.texture;e.generateMipmaps=!1,e.minFilter=oe.LINEAR,this.map=e,this._targets=[new ge(1,0,0),new ge(-1,0,0),new ge(0,1,0),new ge(0,-1,0),new ge(0,0,1),new ge(0,0,-1)],this._ups=[new ge(0,-1,0),new ge(0,-1,0),new ge(0,0,1),new ge(0,0,-1),new ge(0,-1,0),new ge(0,-1,0)],this._lookTarget=new ge}function Xr(){Br.call(this),this.lightType=Z.POINT,this.decay=2,this.distance=200,this.shadow=new jr}function Wr(){kr.call(this),this.renderTarget=new Dr(this.mapSize.x,this.mapSize.y);var e=this.renderTarget.texture;e.generateMipmaps=!1,e.minFilter=oe.LINEAR,this.map=e,this._lookTarget=new ge,this._up=new ge(0,1,0)}function Yr(){Br.call(this),this.lightType=Z.SPOT,this.decay=2,this.distance=200,this.penumbra=0,this.angle=Math.PI/6,this.shadow=new Wr}function qr(e,t){Cr.call(this,e,t),this.type=q.SKINNED_MESH,this.skeleton=void 0,this.bindMode="attached",this.bindMatrix=new ve,this.bindMatrixInverse=new ve}function Zr(e,t){Xe.call(this),this.geometry=e,this.material=t,this.type=q.POINT}function Kr(e,t){Xe.call(this),this.geometry=e,this.material=t,this.type=q.LINE}Rr.prototype=Object.assign(Object.create(Xe.prototype),{constructor:Rr,updateRenderList:function(e){var t=e.uuid;this._renderLists[t]||(this._renderLists[t]=new Nr);var r=this._renderLists[t];return r.startCount(),this._doUpdateRenderList(this,e,r),r.endCount(),r.sort(),r},getRenderList:function(e){return this._renderLists[e.uuid]},updateLights:function(){this.lights;return this.lights.startCount(),this._doUpdateLights(this),this.lights.endCount(),this.lights},_doUpdateRenderList:function(e,t,r){if(e.visible&&(e.geometry&&e.material&&r.add(e,t),q.CANVAS2D!==e.type))for(var i=e.children,n=0,a=i.length;n<a;n++)this._doUpdateRenderList(i[n],t,r)},_doUpdateLights:function(e){if(e.visible&&(q.LIGHT===e.type&&this.lights.add(e),q.CANVAS2D!==e.type))for(var t=e.children,r=0,i=t.length;r<i;r++)this._doUpdateLights(t[r])}}),Cr.prototype=Object.assign(Object.create(Xe.prototype),{constructor:Cr,raycast:function(){var _=new Ne,m=new Le,v=new ve,g=new xe,x=new ge,y=new ge,M=new ge,E=new ge,T=new be,b=new be,S=new be,w=new ge,h=new ge;function A(e,t,r,i,n,a,s){e.material;if(null===r.intersectTriangle(a,n,i,!0,s))return null;h.copy(s),h.applyMatrix4(e.worldMatrix);var o=t.ray.origin.distanceTo(h);return o<t.near||o>t.far?null:{distance:o,point:h.clone(),object:e}}return function(e,t){var r=this.geometry,i=this.worldMatrix;if(_.copy(r.boundingSphere),_.applyMatrix4(i),e.ray.intersectsSphere(_)&&(m.copy(r.boundingBox),m.applyMatrix4(i),e.ray.intersectsBox(m))){v.getInverse(i),g.copy(e.ray).applyMatrix4(v);for(var n,a,s,o,h,u,c=r.index.array,l=r.getAttribute("a_Position"),d=r.getAttribute("a_Uv"),p=0;p<c.length;p+=3){n=c[p],a=c[p+1],s=c[p+2],y.fromArray(l.array,3*n),M.fromArray(l.array,3*a),E.fromArray(l.array,3*s);var f=A(this,e,g,y,M,E,w);f&&(T.fromArray(d.array,2*n),b.fromArray(d.array,2*a),S.fromArray(d.array,2*s),f.uv=(o=T,h=b,u=S,Ue.barycoordFromPoint(w,y,M,E,x),o.multiplyScalar(x.x),h.multiplyScalar(x.y),u.multiplyScalar(x.z),o.add(h).add(u),o.clone()),f.face=[n,a,s],f.faceIndex=n,t.push(f))}}}}(),clone:function(){return new this.constructor(this.geometry,this.material).copy(this)}}),Object.assign(Or.prototype,{render:function(e){e.renderPass(this.renderList.opaque,this.camera,this.renderConfig)}}),Ur.prototype=Object.assign(Object.create(gr.prototype),{constructor:Ur,resize:function(e,t){this.view.width=e,this.view.height=t,this.width=e,this.height=t},dispose:function(){}}),Object.assign(Ir.prototype,{getEntity:function(e){return this._entities[e]},getFps:function(){var e=this.getEntity("fps");return e&&e.averageDelta?Math.floor(1e3/e.averageDelta):0},updateFps:function(){this.enableCounter&&(this.endCounter("fps"),this.startCounter("fps",60))},getNow:function(){return window.performance?window.performance.now():(new Date).getTime()},startCounter:function(e,t){if(this.enableCounter){var r=this._entities[e];r||(r={start:0,end:0,delta:0,_cache:[],averageRange:1,averageDelta:0},this._entities[e]=r),r.start=this.getNow(),r.averageRange=t||1}},endCounter:function(e){if(this.enableCounter){var t=this._entities[e];if(t&&(t.end=this.getNow(),t.delta=t.end-t.start,1<t.averageRange)){t._cache.push(t.delta);var r=t._cache.length;if(r>=t.averageRange){r>t.averageRange&&(t._cache.shift(),r--);for(var i=0,n=0;n<r;n++)i+=t._cache[n];t.averageDelta=i/r}}}}}),Fr.prototype.render=function(e,t,r,i){var n=this.performance;n.updateFps(),n.startCounter("render",60),this.matrixAutoUpdate&&e.updateMatrix(),this.lightsAutoupdate&&e.updateLights(),n.startCounter("renderShadow",60),(this.shadowAutoUpdate||this.shadowNeedsUpdate)&&(this.shadowMapPass.render(this.glCore,e),this.shadowNeedsUpdate=!1),n.endCounter("renderShadow"),void 0===r&&(r=this.backRenderTarget),this.glCore.texture.setRenderTarget(r),(this.autoClear||i)&&this.glCore.clear(!0,!0,!0),n.startCounter("renderList",60),this.glCore.render(e,t),n.endCounter("renderList"),r.texture&&this.glCore.texture.updateRenderTargetMipmap(r),this.performance.endCounter("render")},(Dr.prototype=Object.create(gr.prototype)).constructor=Dr,(zr.prototype=Object.create(Xe.prototype)).constructor=zr,Br.prototype=Object.assign(Object.create(Xe.prototype),{constructor:Br,copy:function(e){return Xe.prototype.copy.call(this,e),this.type=e.type,this.lightType=e.lightType,this.color.copy(e.color),this.intensity=e.intensity,this}}),(Gr.prototype=Object.create(Br.prototype)).constructor=Gr,Object.assign(kr.prototype,{update:function(e,t){},copy:function(e){return this.camera.copy(e.camera),this.matrix.copy(e.matrix),this.bias=e.bias,this.radius=e.radius,this.cameraNear=e.cameraNear,this.cameraFar=e.cameraFar,this.mapSize.copy(e.mapSize),this},clone:function(){return(new this.constructor).copy(this)}}),Vr.prototype=Object.assign(Object.create(kr.prototype),{constructor:Vr,update:function(e){this._updateCamera(e),this._updateMatrix(),this.mapSize.x===this.renderTarget.width&&this.mapSize.y===this.renderTarget.height||this.renderTarget.resize(this.mapSize.x,this.mapSize.y)},_updateCamera:function(e){var t=this.camera,r=this._lookTarget;e.getWorldDirection(this._lookTarget),t.position.setFromMatrixPosition(e.worldMatrix),r.set(r.x+t.position.x,r.y+t.position.y,r.z+t.position.z),t.lookAt(r,this._up),t.updateMatrix();var i=this.windowSize/2;t.setOrtho(-i,i,-i,i,this.cameraNear,this.cameraFar)},_updateMatrix:function(){var e=this.matrix,t=this.camera;e.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),e.multiply(t.projectionMatrix),e.multiply(t.viewMatrix)},copy:function(e){return kr.prototype.copy.call(this,e),this.windowSize=e.windowSize,this}}),Hr.prototype=Object.assign(Object.create(Br.prototype),{constructor:Hr,copy:function(e){return Br.prototype.copy.call(this,e),this.shadow.copy(e.shadow),this}}),jr.prototype=Object.assign(Object.create(kr.prototype),{constructor:jr,update:function(e,t){this._updateCamera(e,t),this._updateMatrix(),this.mapSize.x===this.renderTarget.width&&this.mapSize.y===this.renderTarget.height||this.renderTarget.resize(this.mapSize.x,this.mapSize.y)},_updateCamera:function(e,t){var r=this.camera,i=this._lookTarget,n=this._targets,a=this._ups;r.position.setFromMatrixPosition(e.worldMatrix),i.set(n[t].x+r.position.x,n[t].y+r.position.y,n[t].z+r.position.z),r.lookAt(i,a[t]),r.updateMatrix(),r.setPerspective(.5*Math.PI,1,this.cameraNear,this.cameraFar)},_updateMatrix:function(){var e=this.matrix,t=this.camera;e.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),e.multiply(t.projectionMatrix),e.multiply(t.viewMatrix)}}),Xr.prototype=Object.assign(Object.create(Br.prototype),{constructor:Xr,copy:function(e){return Br.prototype.copy.call(this,e),this.shadow.copy(e.shadow),this}}),Wr.prototype=Object.assign(Object.create(kr.prototype),{constructor:Wr,update:function(e){this._updateCamera(e),this._updateMatrix(),this.mapSize.x===this.renderTarget.width&&this.mapSize.y===this.renderTarget.height||this.renderTarget.resize(this.mapSize.x,this.mapSize.y)},_updateCamera:function(e){var t=this.camera,r=this._lookTarget;e.getWorldDirection(this._lookTarget),t.position.setFromMatrixPosition(e.worldMatrix),r.set(r.x+t.position.x,r.y+t.position.y,r.z+t.position.z),t.lookAt(r,this._up),t.updateMatrix(),t.setPerspective(2*e.angle,1,this.cameraNear,this.cameraFar)},_updateMatrix:function(){var e=this.matrix,t=this.camera;e.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),e.multiply(t.projectionMatrix),e.multiply(t.viewMatrix)}}),Yr.prototype=Object.assign(Object.create(Br.prototype),{constructor:Yr,copy:function(e){return Br.prototype.copy.call(this,e),this.shadow.copy(e.shadow),this}}),qr.prototype=Object.assign(Object.create(Cr.prototype),{constructor:qr,bind:function(e,t){this.skeleton=e,void 0===t&&(this.updateMatrix(),t=this.worldMatrix),this.bindMatrix.copy(t),this.bindMatrixInverse.getInverse(t)},updateMatrix:function(){Cr.prototype.updateMatrix.call(this),"attached"===this.bindMode?this.bindMatrixInverse.getInverse(this.worldMatrix):"detached"===this.bindMode?this.bindMatrixInverse.getInverse(this.bindMatrix):console.warn("zen3d.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)},clone:function(){return new this.constructor(this.geometry,this.material).copy(this)}}),(Zr.prototype=Object.create(Xe.prototype)).constructor=Zr,Kr.prototype=Object.assign(Object.create(Xe.prototype),{constructor:Kr,raycast:function(){}}),e.EventDispatcher=me,e.Raycaster=ye,e.Euler=Te,e.Vector2=be,e.Vector3=ge,e.Vector4=Se,e.Matrix3=we,e.Matrix4=ve,e.Quaternion=Ae,e.Box2=Pe,e.Box3=Le,e.Sphere=Ne,e.Plane=Re,e.Frustum=Ce,e.Color3=Oe,e.Ray=xe,e.Triangle=Ue,e.Curve=Ie,e.Spherical=Fe,e.TextureBase=De,e.Texture2D=ke,e.TextureCube=Ve,e.TextureData=He,e.TextureDepth=je,e.Bone=We,e.Skeleton=Ye,e.AnimationMixer=Je,e.BooleanKeyframeTrack=et,e.ColorKeyframeTrack=tt,e.KeyframeClip=rt,e.KeyframeTrack=$e,e.NumberKeyframeTrack=it,e.PropertyBindingMixer=Qe,e.QuaternionKeyframeTrack=nt,e.StringKeyframeTrack=at,e.VectorKeyframeTrack=st,e.BufferAttribute=ot,e.CubeGeometry=ut,e.CylinderGeometry=ct,e.Geometry=ht,e.InstancedBufferAttribute=lt,e.InstancedGeometry=dt,e.InstancedInterleavedBuffer=ft,e.InterleavedBuffer=pt,e.InterleavedBufferAttribute=_t,e.PlaneGeometry=mt,e.SphereGeometry=vt,e.Material=gt,e.BasicMaterial=xt,e.LambertMaterial=yt,e.PhongMaterial=Mt,e.PBRMaterial=Et,e.PointsMaterial=Tt,e.LineMaterial=bt,e.LineLoopMaterial=St,e.LineDashedMaterial=wt,e.ShaderMaterial=At,e.DepthMaterial=Pt,e.DistanceMaterial=Lt,e.WebGLCapabilities=Nt,e.WebGLState=Ct,e.WebGLProperties=Ot,e.WebGLTexture=Dt,e.WebGLGeometry=Gt,e.WebGLUniform=kt,e.WebGLAttribute=Vt,e.WebGLProgram=jt,e.WebGLCore=hr,e.ShaderChunk=Xt,e.ShaderLib=Wt,e.EnvironmentMapPass=yr,e.ShadowMapPass=Mr,e.ShaderPostPass=Or,e.Renderer=Fr,e.LightCache=Sr,e.RenderList=Nr,e.RenderTargetBase=gr,e.RenderTargetBack=Ur,e.RenderTarget2D=Dr,e.RenderTargetCube=xr,e.Object3D=Xe,e.Scene=Rr,e.Fog=function(e,t,r){this.fogType=Q.NORMAL,this.color=new Oe(void 0!==e?e:0),this.near=void 0!==t?t:1,this.far=void 0!==r?r:1e3},e.FogExp2=function(e,t){this.fogType=Q.EXP2,this.color=new Oe(void 0!==e?e:0),this.density=void 0!==t?t:25e-5},e.Group=zr,e.Light=Br,e.AmbientLight=Gr,e.DirectionalLight=Hr,e.PointLight=Xr,e.SpotLight=Yr,e.LightShadow=kr,e.DirectionalLightShadow=Vr,e.SpotLightShadow=Wr,e.PointLightShadow=jr,e.Camera=vr,e.Mesh=Cr,e.SkinnedMesh=qr,e.Points=Zr,e.Line=Kr,e.FileLoader=Be,e.ImageLoader=ze,e.TGALoader=Ge,e.generateUUID=u,e.isMobile=a,e.isWeb=f,e.createCheckerBoardPixels=function(e,t,r){var i=new Uint8Array(e*t*4),n=[[255,255,255,255],[0,0,0,255]];r=r||5;for(var a=0,s=0;s<t;s++)for(var o=0;o<e;o++){if(0==o?a=1:o%r==0&&(a=(a+1)%2),s%r==0&&0==o){var h=n[0];n[0]=n[1],n[1]=h}i[s*(4*e)+4*o+0]=n[a][0],i[s*(4*e)+4*o+1]=n[a][1],i[s*(4*e)+4*o+2]=n[a][2],i[s*(4*e)+4*o+3]=n[a][3]}return i},e.isPowerOfTwo=s,e.nearestPowerOfTwo=_,e.nextPowerOfTwo=c,e.cloneUniforms=o,e.halton=function(e,t){for(var r=0,i=1/t,n=e;0<n;)r+=i*(n%t),n=Math.floor(n/t),i/=t;return r},e.OBJECT_TYPE=q,e.LIGHT_TYPE=Z,e.MATERIAL_TYPE=K,e.FOG_TYPE=Q,e.BLEND_TYPE=J,e.BLEND_EQUATION=$,e.BLEND_FACTOR=ee,e.CULL_FACE_TYPE=te,e.DRAW_SIDE=re,e.SHADING_TYPE=ie,e.WEBGL_TEXTURE_TYPE=ne,e.WEBGL_PIXEL_FORMAT=ae,e.WEBGL_PIXEL_TYPE=se,e.WEBGL_TEXTURE_FILTER=oe,e.WEBGL_TEXTURE_WRAP=he,e.WEBGL_UNIFORM_TYPE=ue,e.WEBGL_ATTRIBUTE_TYPE=ce,e.WEBGL_BUFFER_USAGE=le,e.SHADOW_TYPE=de,e.TEXEL_ENCODING_TYPE=pe,e.ENVMAP_COMBINE_TYPE=fe,e.DRAW_MODE=_e,Object.defineProperty(e,"__esModule",{value:!0})});