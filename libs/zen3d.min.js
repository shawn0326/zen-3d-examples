!function(e){var t=e.zen3d=e.zen3d||{},n=function(){};t.inherit=function(e,t){n.prototype=t.prototype,e.superClass=t.prototype,e.prototype=new n,e.prototype.constructor=e};t.generateUUID=function(){var e,t="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz".split(""),n=new Array(36),i=0;return function(){for(var r=0;r<36;r++)8===r||13===r||18===r||23===r?n[r]="-":14===r?n[r]="4":(i<=2&&(i=33554432+16777216*Math.random()|0),e=15&i,i>>=4,n[r]=t[19===r?3&e|8:e]);return n.join("")}}();t.isMobile=function(){if(!e.navigator)return!0;var t=navigator.userAgent.toLowerCase();return-1!=t.indexOf("mobile")||-1!=t.indexOf("android")}();t.isWeb=!!document;t.createCheckerBoardPixels=function(e,t,n){var i=new Uint8Array(e*t*4),r=[[255,255,255,255],[0,0,0,255]];n=n||5;for(var a=0,o=0;o<t;o++)for(var s=0;s<e;s++){if(0==s?a=1:s%n==0&&(a=(a+1)%2),o%n==0&&0==s){var u=r[0];r[0]=r[1],r[1]=u}i[o*(4*e)+4*s+0]=r[a][0],i[o*(4*e)+4*s+1]=r[a][1],i[o*(4*e)+4*s+2]=r[a][2],i[o*(4*e)+4*s+3]=r[a][3]}return i};t.isPowerOfTwo=function(e){return 0==(e&e-1)&&0!==e};t.nearestPowerOfTwo=function(e){return Math.pow(2,Math.round(Math.log(e)/Math.LN2))};t.nextPowerOfTwo=function(e){return e--,e|=e>>1,e|=e>>2,e|=e>>4,e|=e>>8,e|=e>>16,++e};t.cloneUniforms=function(e){var t={};for(var n in e){var i=e[n];Array.isArray(i)?t[n]=i.slice():t[n]=i}return t}}(window),function(){var e={MESH:"mesh",SKINNED_MESH:"skinned_mesh",LIGHT:"light",CAMERA:"camera",SCENE:"scene",GROUP:"group",POINT:"point",LINE:"line",LINE_LOOP:"line_loop",LINE_SEGMENTS:"line_segments",CANVAS2D:"canvas2d",SPRITE:"sprite",PARTICLE:"particle"};zen3d.OBJECT_TYPE=e;var t={AMBIENT:"ambient",DIRECT:"direct",POINT:"point",SPOT:"spot"};zen3d.LIGHT_TYPE=t;var n={BASIC:"basic",LAMBERT:"lambert",PHONG:"phong",PBR:"pbr",CUBE:"cube",POINT:"point",LINE:"line",LINE_LOOP:"lineloop",LINE_DASHED:"linedashed",CANVAS2D:"canvas2d",SPRITE:"sprite",SHADER:"shader",DEPTH:"depth",DISTANCE:"distance",PARTICLE:"particle"};zen3d.MATERIAL_TYPE=n;var i={NORMAL:"normal",EXP2:"exp2"};zen3d.FOG_TYPE=i;var r={NONE:"none",NORMAL:"normal",ADD:"add",CUSTOM:"custom"};zen3d.BLEND_TYPE=r;var a={ADD:32774,SUBTRACT:32778,REVERSE_SUBTRACT:32779};zen3d.BLEND_EQUATION=a;var o={ZERO:0,ONE:1,SRC_COLOR:768,ONE_MINUS_SRC_COLOR:769,SRC_ALPHA:770,ONE_MINUS_SRC_ALPHA:771,DST_ALPHA:772,ONE_MINUS_DST_ALPHA:773,DST_COLOR:774,ONE_MINUS_DST_COLOR:775};zen3d.BLEND_FACTOR=o;var s={NONE:"none",FRONT:"front",BACK:"back",FRONT_AND_BACK:"front_and_back"};zen3d.CULL_FACE_TYPE=s;var u={FRONT:"front",BACK:"back",DOUBLE:"double"};zen3d.DRAW_SIDE=u;var h={SMOOTH_SHADING:"smooth_shading",FLAT_SHADING:"flat_shading"};zen3d.SHADING_TYPE=h;var d={TEXTURE_2D:3553,TEXTURE_CUBE_MAP:34067};zen3d.WEBGL_TEXTURE_TYPE=d;var l={DEPTH_COMPONENT:6402,ALPHA:6406,RGB:6407,RGBA:6408,LUMINANCE:6409,LUMINANCE_ALPHA:6410};zen3d.WEBGL_PIXEL_FORMAT=l;var c={BYTE:5120,UNSIGNED_BYTE:5121,SHORT:5122,UNSIGNED_SHORT:5123,INT:5124,UNSIGNED_INT:5125,FLOAT:5126,HALF_FLOAT:5131,UNSIGNED_INT_24_8:34042,UNSIGNED_SHORT_4_4_4_4:32819,UNSIGNED_SHORT_5_5_5_1:32820,UNSIGNED_SHORT_5_6_5:33635};zen3d.WEBGL_PIXEL_TYPE=c;var p={NEAREST:9728,LINEAR:9729,NEAREST_MIPMAP_NEAREST:9984,LINEAR_MIPMAP_NEAREST:9985,NEAREST_MIPMAP_LINEAR:9986,LINEAR_MIPMAP_LINEAR:9987};zen3d.WEBGL_TEXTURE_FILTER=p;var f={REPEAT:10497,CLAMP_TO_EDGE:33071,MIRRORED_REPEAT:33648};zen3d.WEBGL_TEXTURE_WRAP=f;var _={FLOAT_VEC2:35664,FLOAT_VEC3:35665,FLOAT_VEC4:35666,INT_VEC2:35667,INT_VEC3:35668,INT_VEC4:35669,BOOL:35670,BOOL_VEC2:35671,BOOL_VEC3:35672,BOOL_VEC4:35673,FLOAT_MAT2:35674,FLOAT_MAT3:35675,FLOAT_MAT4:35676,SAMPLER_2D:35678,SAMPLER_CUBE:35680,BYTE:65535,UNSIGNED_BYTE:5121,SHORT:5122,UNSIGNED_SHORT:5123,INT:5124,UNSIGNED_INT:5125,FLOAT:5126};zen3d.WEBGL_UNIFORM_TYPE=_;var v={FLOAT_VEC2:35664,FLOAT_VEC3:35665,FLOAT_VEC4:35666,FLOAT:5126,BYTE:65535,UNSIGNED_BYTE:5121,UNSIGNED_SHORT:5123};zen3d.WEBGL_ATTRIBUTE_TYPE=v;var m={STREAM_DRAW:35040,STATIC_DRAW:35044,DYNAMIC_DRAW:35048};zen3d.WEBGL_BUFFER_USAGE=m;var g={HARD:"hard",PCF_SOFT:"pcf_soft"};zen3d.SHADOW_TYPE=g;var E={LINEAR:"linear",SRGB:"sRGB",RGBE:"RGBE",RGBM7:"RGBM7",RGBM16:"RGBM16",RGBD:"RGBD",GAMMA:"Gamma"};zen3d.TEXEL_ENCODING_TYPE=E;var y={MULTIPLY:"multiply",MIX:"mix",ADD:"add"};zen3d.ENVMAP_COMBINE_TYPE=y;var T={POINTS:0,LINES:1,LINE_LOOP:2,LINE_STRIP:3,TRIANGLES:4,TRIANGLE_STRIP:5,TRIANGLE_FAN:6};zen3d.DRAW_MODE=T;var x={DEFAULT:"default",TRANSPARENT:"transparent",CANVAS2D:"canvas2d",SPRITE:"sprite",PARTICLE:"particle"};zen3d.RENDER_LAYER=x;var M=[x.DEFAULT,x.TRANSPARENT,x.CANVAS2D,x.SPRITE,x.PARTICLE];zen3d.LAYER_RENDER_LIST=M}(),function(){var e=function(t,n,i,r){this._x=t||0,this._y=n||0,this._z=i||0,this._order=r||e.DefaultOrder};e.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"],e.DefaultOrder="XYZ",Object.defineProperties(e.prototype,{x:{get:function(){return this._x},set:function(e){this._x=e,this.onChangeCallback()}},y:{get:function(){return this._y},set:function(e){this._y=e,this.onChangeCallback()}},z:{get:function(){return this._z},set:function(e){this._z=e,this.onChangeCallback()}},order:{get:function(){return this._order},set:function(e){this._order=e,this.onChangeCallback()}}}),e.prototype.copyFrom=function(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this.onChangeCallback(),this},e.prototype.set=function(e,t,n,i){return this._x=e||0,this._y=t||0,this._z=n||0,this._order=i||this._order,this.onChangeCallback(),this},e.prototype.setFromRotationMatrix=function(e,t,n){var i=function(e,t,n){return Math.max(t,Math.min(n,e))},r=e.elements,a=r[0],o=r[4],s=r[8],u=r[1],h=r[5],d=r[9],l=r[2],c=r[6],p=r[10];return"XYZ"===(t=t||this._order)?(this._y=Math.asin(i(s,-1,1)),Math.abs(s)<.99999?(this._x=Math.atan2(-d,p),this._z=Math.atan2(-o,a)):(this._x=Math.atan2(c,h),this._z=0)):"YXZ"===t?(this._x=Math.asin(-i(d,-1,1)),Math.abs(d)<.99999?(this._y=Math.atan2(s,p),this._z=Math.atan2(u,h)):(this._y=Math.atan2(-l,a),this._z=0)):"ZXY"===t?(this._x=Math.asin(i(c,-1,1)),Math.abs(c)<.99999?(this._y=Math.atan2(-l,p),this._z=Math.atan2(-o,h)):(this._y=0,this._z=Math.atan2(u,a))):"ZYX"===t?(this._y=Math.asin(-i(l,-1,1)),Math.abs(l)<.99999?(this._x=Math.atan2(c,p),this._z=Math.atan2(u,a)):(this._x=0,this._z=Math.atan2(-o,h))):"YZX"===t?(this._z=Math.asin(i(u,-1,1)),Math.abs(u)<.99999?(this._x=Math.atan2(-d,h),this._y=Math.atan2(-l,a)):(this._x=0,this._y=Math.atan2(s,p))):"XZY"===t?(this._z=Math.asin(-i(o,-1,1)),Math.abs(o)<.99999?(this._x=Math.atan2(c,h),this._y=Math.atan2(s,a)):(this._x=Math.atan2(-d,p),this._y=0)):console.warn("given unsupported order: "+t),this._order=t,!1!==n&&this.onChangeCallback(),this},e.prototype.setFromQuaternion=function(e,t,n){var i=zen3d.helpMatrix;return e.toMatrix4(i),this.setFromRotationMatrix(i,t,n)},e.prototype.onChange=function(e){return this.onChangeCallback=e,this},e.prototype.onChangeCallback=function(){},zen3d.Euler=e}(),function(){var e=function(e,t){this.x=e||0,this.y=t||0};e.prototype.lerpVectors=function(e,t,n){return this.subVectors(t,e).multiplyScalar(n).add(e)},e.prototype.set=function(e,t){return this.x=e||0,this.y=t||0,this},e.prototype.min=function(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this},e.prototype.max=function(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this},e.prototype.getLength=function(){return Math.sqrt(this.getLengthSquared())},e.prototype.getLengthSquared=function(){return this.x*this.x+this.y*this.y},e.prototype.normalize=function(e){e=e||1;var t=this.getLength();if(0!=t){var n=e/t;return this.x*=n,this.y*=n,this}},e.prototype.subtract=function(t,n){return n||(n=new e),n.set(this.x-t.x,this.y-t.y),n},e.prototype.copy=function(e){return this.x=e.x,this.y=e.y,this},e.prototype.addVectors=function(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this},e.prototype.subVectors=function(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this},e.prototype.multiplyScalar=function(e){return this.x*=e,this.y*=e,this},e.prototype.distanceToSquared=function(e){var t=this.x-e.x,n=this.y-e.y;return t*t+n*n},e.prototype.distanceTo=function(e){return Math.sqrt(this.distanceToSquared(e))},e.prototype.fromArray=function(e,t){return void 0===t&&(t=0),this.x=e[t],this.y=e[t+1],this},e.prototype.add=function(e){return this.x+=e.x,this.y+=e.y,this},e.prototype.clone=function(){return new e(this.x,this.y)},zen3d.Vector2=e}(),function(){var e=function(e,t,n){this.x=e||0,this.y=t||0,this.z=n||0};e.prototype.lerpVectors=function(e,t,n){return this.subVectors(t,e).multiplyScalar(n).add(e)},e.prototype.set=function(e,t,n){return this.x=e||0,this.y=t||0,this.z=n||0,this},e.prototype.min=function(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this},e.prototype.max=function(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this},e.prototype.getLength=function(){return Math.sqrt(this.getLengthSquared())},e.prototype.getLengthSquared=function(){return this.x*this.x+this.y*this.y+this.z*this.z},e.prototype.normalize=function(e){e=e||1;var t=this.getLength();if(0!=t){var n=e/t;return this.x*=n,this.y*=n,this.z*=n,this}},e.prototype.subtract=function(t,n){return n||(n=new e),n.set(this.x-t.x,this.y-t.y,this.z-t.z),n},e.prototype.multiply=function(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this},e.prototype.crossVectors=function(e,t){var n=e.x,i=e.y,r=e.z,a=t.x,o=t.y,s=t.z;return this.x=i*s-r*o,this.y=r*a-n*s,this.z=n*o-i*a,this},e.prototype.cross=function(e){var t=this.x,n=this.y,i=this.z;return this.x=n*e.z-i*e.y,this.y=i*e.x-t*e.z,this.z=t*e.y-n*e.x,this},e.prototype.dot=function(e){return this.x*e.x+this.y*e.y+this.z*e.z},e.prototype.applyQuaternion=function(e){var t=this.x,n=this.y,i=this.z,r=e._x,a=e._y,o=e._z,s=e._w,u=s*t+a*i-o*n,h=s*n+o*t-r*i,d=s*i+r*n-a*t,l=-r*t-a*n-o*i;return this.x=u*s+l*-r+h*-o-d*-a,this.y=h*s+l*-a+d*-r-u*-o,this.z=d*s+l*-o+u*-a-h*-r,this},e.prototype.applyMatrix4=function(e){var t=this.x,n=this.y,i=this.z,r=e.elements;return this.x=r[0]*t+r[4]*n+r[8]*i+r[12],this.y=r[1]*t+r[5]*n+r[9]*i+r[13],this.z=r[2]*t+r[6]*n+r[10]*i+r[14],this},e.prototype.applyMatrix3=function(e){var t=this.x,n=this.y,i=this.z,r=e.elements;return this.x=r[0]*t+r[3]*n+r[6]*i,this.y=r[1]*t+r[4]*n+r[7]*i,this.z=r[2]*t+r[5]*n+r[8]*i,this},e.prototype.transformDirection=function(e){var t=this.x,n=this.y,i=this.z,r=e.elements;return this.x=r[0]*t+r[4]*n+r[8]*i,this.y=r[1]*t+r[5]*n+r[9]*i,this.z=r[2]*t+r[6]*n+r[10]*i,this.normalize()},e.prototype.setFromMatrixPosition=function(e){return this.setFromMatrixColumn(e,3)},e.prototype.setFromMatrixColumn=function(e,t){return this.fromArray(e.elements,4*t)},e.prototype.fromArray=function(e,t){return void 0===t&&(t=0),this.x=e[t],this.y=e[t+1],this.z=e[t+2],this},e.prototype.copy=function(e){return this.x=e.x,this.y=e.y,this.z=e.z,this},e.prototype.addVectors=function(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this},e.prototype.addScalar=function(e){return this.x+=e,this.y+=e,this.z+=e,this},e.prototype.add=function(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this},e.prototype.subVectors=function(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this},e.prototype.sub=function(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this},e.prototype.multiplyScalar=function(e){return this.x*=e,this.y*=e,this.z*=e,this},e.prototype.distanceToSquared=function(e){var t=this.x-e.x,n=this.y-e.y,i=this.z-e.z;return t*t+n*n+i*i},e.prototype.distanceTo=function(e){return Math.sqrt(this.distanceToSquared(e))},e.prototype.unproject=function(){var e;return function(t){return void 0===e&&(e=new zen3d.Matrix4),e.multiplyMatrices(t.worldMatrix,e.getInverse(t.projectionMatrix)),this.applyProjection(e)}}(),e.prototype.applyProjection=function(e){var t=this.x,n=this.y,i=this.z,r=e.elements,a=1/(r[3]*t+r[7]*n+r[11]*i+r[15]);return this.x=(r[0]*t+r[4]*n+r[8]*i+r[12])*a,this.y=(r[1]*t+r[5]*n+r[9]*i+r[13])*a,this.z=(r[2]*t+r[6]*n+r[10]*i+r[14])*a,this},e.prototype.equals=function(e){return e.x===this.x&&e.y===this.y&&e.z===this.z},e.prototype.clone=function(){return new e(this.x,this.y,this.z)},zen3d.Vector3=e}(),function(){var e=function(e,t,n,i){this.x=e||0,this.y=t||0,this.z=n||0,this.w=void 0!==i?i:1};e.prototype.lerpVectors=function(e,t,n){return this.subVectors(t,e).multiplyScalar(n).add(e)},e.prototype.set=function(e,t,n,i){return this.x=e||0,this.y=t||0,this.z=n||0,this.w=void 0!==i?i:1,this},e.prototype.applyMatrix4=function(e){var t=this.x,n=this.y,i=this.z,r=this.w,a=e.elements;return this.x=a[0]*t+a[4]*n+a[8]*i+a[12]*r,this.y=a[1]*t+a[5]*n+a[9]*i+a[13]*r,this.z=a[2]*t+a[6]*n+a[10]*i+a[14]*r,this.w=a[3]*t+a[7]*n+a[11]*i+a[15]*r,this},e.prototype.equals=function(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w},e.prototype.add=function(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this},e.prototype.multiply=function(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this},e.prototype.multiplyScalar=function(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this},e.prototype.subVectors=function(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this},e.prototype.copy=function(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=void 0!==e.w?e.w:1,this},zen3d.Vector4=e}(),function(){var e=function(){this.elements=new Float32Array([1,0,0,0,1,0,0,0,1])};e.prototype.identity=function(){return this.set(1,0,0,0,1,0,0,0,1),this},e.prototype.inverse=function(){return this.getInverse(this)},e.prototype.getInverse=function(e){var t=e.elements,n=this.elements,i=t[0],r=t[1],a=t[2],o=t[3],s=t[4],u=t[5],h=t[6],d=t[7],l=t[8],c=l*s-u*d,p=u*h-l*o,f=d*o-s*h,_=i*c+r*p+a*f;if(0===_){return console.warn("zen3d.Matrix3: .getInverse() can't invert matrix, determinant is 0"),this.identity()}var v=1/_;return n[0]=c*v,n[1]=(a*d-l*r)*v,n[2]=(u*r-a*s)*v,n[3]=p*v,n[4]=(l*i-a*h)*v,n[5]=(a*o-u*i)*v,n[6]=f*v,n[7]=(r*h-d*i)*v,n[8]=(s*i-r*o)*v,this},e.prototype.transpose=function(){var e,t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this},e.prototype.set=function(e,t,n,i,r,a,o,s,u){var h=this.elements;return h[0]=e,h[3]=t,h[6]=n,h[1]=i,h[4]=r,h[7]=a,h[2]=o,h[5]=s,h[8]=u,this},e.prototype.copy=function(e){return this.elements.set(e.elements),this},e.prototype.multiply=function(e){return this.multiplyMatrices(this,e)},e.prototype.premultiply=function(e){return this.multiplyMatrices(e,this)},e.prototype.multiplyMatrices=function(e,t){var n=e.elements,i=t.elements,r=this.elements,a=n[0],o=n[3],s=n[6],u=n[1],h=n[4],d=n[7],l=n[2],c=n[5],p=n[8],f=i[0],_=i[3],v=i[6],m=i[1],g=i[4],E=i[7],y=i[2],T=i[5],x=i[8];return r[0]=a*f+o*m+s*y,r[3]=a*_+o*g+s*T,r[6]=a*v+o*E+s*x,r[1]=u*f+h*m+d*y,r[4]=u*_+h*g+d*T,r[7]=u*v+h*E+d*x,r[2]=l*f+c*m+p*y,r[5]=l*_+c*g+p*T,r[8]=l*v+c*E+p*x,this},e.prototype.transform=function(e,t,n,i,r,a,o){var s=this.elements,u=1,h=0;if(r%360){var d=r;u=Math.cos(d),h=Math.sin(d)}return s[0]=u*n,s[3]=-h*i,s[6]=e,s[1]=h*n,s[4]=u*i,s[7]=t,s[2]=0,s[5]=0,s[8]=1,(a||o)&&(s[6]-=a*s[0]+o*s[3],s[7]-=a*s[1]+o*s[4]),this},e.prototype.setFromMatrix4=function(e){var t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this},zen3d.Matrix3=e}(),function(){var e=function(){this.elements=new Float32Array([1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1])};e.prototype.identity=function(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this},e.prototype.set=function(e,t,n,i,r,a,o,s,u,h,d,l,c,p,f,_){var v=this.elements;return v[0]=e,v[4]=t,v[8]=n,v[12]=i,v[1]=r,v[5]=a,v[9]=o,v[13]=s,v[2]=u,v[6]=h,v[10]=d,v[14]=l,v[3]=c,v[7]=p,v[11]=f,v[15]=_,this},e.prototype.copy=function(e){return this.elements.set(e.elements),this},e.prototype.makeTranslation=function(e,t,n){return this.set(1,0,0,e,0,1,0,t,0,0,1,n,0,0,0,1),this},e.prototype.multiply=function(e){return this.multiplyMatrices(this,e)},e.prototype.premultiply=function(e){return this.multiplyMatrices(e,this)},e.prototype.multiplyMatrices=function(e,t){var n=e.elements,i=t.elements,r=this.elements,a=n[0],o=n[4],s=n[8],u=n[12],h=n[1],d=n[5],l=n[9],c=n[13],p=n[2],f=n[6],_=n[10],v=n[14],m=n[3],g=n[7],E=n[11],y=n[15],T=i[0],x=i[4],M=i[8],S=i[12],w=i[1],z=i[5],A=i[9],L=i[13],b=i[2],P=i[6],R=i[10],C=i[14],N=i[3],I=i[7],D=i[11],U=i[15];return r[0]=a*T+o*w+s*b+u*N,r[4]=a*x+o*z+s*P+u*I,r[8]=a*M+o*A+s*R+u*D,r[12]=a*S+o*L+s*C+u*U,r[1]=h*T+d*w+l*b+c*N,r[5]=h*x+d*z+l*P+c*I,r[9]=h*M+d*A+l*R+c*D,r[13]=h*S+d*L+l*C+c*U,r[2]=p*T+f*w+_*b+v*N,r[6]=p*x+f*z+_*P+v*I,r[10]=p*M+f*A+_*R+v*D,r[14]=p*S+f*L+_*C+v*U,r[3]=m*T+g*w+E*b+y*N,r[7]=m*x+g*z+E*P+y*I,r[11]=m*M+g*A+E*R+y*D,r[15]=m*S+g*L+E*C+y*U,this},e.prototype.transpose=function(){var e,t=this.elements;return e=t[1],t[1]=t[4],t[4]=e,e=t[2],t[2]=t[8],t[8]=e,e=t[6],t[6]=t[9],t[9]=e,e=t[3],t[3]=t[12],t[12]=e,e=t[7],t[7]=t[13],t[13]=e,e=t[11],t[11]=t[14],t[14]=e,this},e.prototype.inverse=function(){return this.getInverse(this)},e.prototype.getInverse=function(e){var t=this.elements,n=e.elements,i=n[0],r=n[1],a=n[2],o=n[3],s=n[4],u=n[5],h=n[6],d=n[7],l=n[8],c=n[9],p=n[10],f=n[11],_=n[12],v=n[13],m=n[14],g=n[15],E=c*m*d-v*p*d+v*h*f-u*m*f-c*h*g+u*p*g,y=_*p*d-l*m*d-_*h*f+s*m*f+l*h*g-s*p*g,T=l*v*d-_*c*d+_*u*f-s*v*f-l*u*g+s*c*g,x=_*c*h-l*v*h-_*u*p+s*v*p+l*u*m-s*c*m,M=i*E+r*y+a*T+o*x;if(0===M)return console.warn("can't invert matrix, determinant is 0"),this.identity();var S=1/M;return t[0]=E*S,t[1]=(v*p*o-c*m*o-v*a*f+r*m*f+c*a*g-r*p*g)*S,t[2]=(u*m*o-v*h*o+v*a*d-r*m*d-u*a*g+r*h*g)*S,t[3]=(c*h*o-u*p*o-c*a*d+r*p*d+u*a*f-r*h*f)*S,t[4]=y*S,t[5]=(l*m*o-_*p*o+_*a*f-i*m*f-l*a*g+i*p*g)*S,t[6]=(_*h*o-s*m*o-_*a*d+i*m*d+s*a*g-i*h*g)*S,t[7]=(s*p*o-l*h*o+l*a*d-i*p*d-s*a*f+i*h*f)*S,t[8]=T*S,t[9]=(_*c*o-l*v*o-_*r*f+i*v*f+l*r*g-i*c*g)*S,t[10]=(s*v*o-_*u*o+_*r*d-i*v*d-s*r*g+i*u*g)*S,t[11]=(l*u*o-s*c*o-l*r*d+i*c*d+s*r*f-i*u*f)*S,t[12]=x*S,t[13]=(l*v*a-_*c*a+_*r*p-i*v*p-l*r*m+i*c*m)*S,t[14]=(_*u*a-s*v*a-_*r*h+i*v*h+s*r*m-i*u*m)*S,t[15]=(s*c*a-l*u*a+l*r*h-i*c*h-s*r*p+i*u*p)*S,this},e.prototype.transform=function(e,t,n){var i=n.toMatrix4(zen3d.helpMatrix).elements,r=this.elements;return r[0]=i[0]*t.x,r[1]=i[1]*t.x,r[2]=i[2]*t.x,r[3]=0,r[4]=i[4]*t.y,r[5]=i[5]*t.y,r[6]=i[6]*t.y,r[7]=0,r[8]=i[8]*t.z,r[9]=i[9]*t.z,r[10]=i[10]*t.z,r[11]=0,r[12]=e.x,r[13]=e.y,r[14]=e.z,r[15]=1,this},e.prototype.makeRotationFromQuaternion=function(e){var t=this.elements,n=e.x,i=e.y,r=e.z,a=e.w,o=n+n,s=i+i,u=r+r,h=n*o,d=n*s,l=n*u,c=i*s,p=i*u,f=r*u,_=a*o,v=a*s,m=a*u;return t[0]=1-(c+f),t[4]=d-m,t[8]=l+v,t[1]=d+m,t[5]=1-(h+f),t[9]=p-_,t[2]=l-v,t[6]=p+_,t[10]=1-(h+c),t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this},e.prototype.lookAtRH=function(){var e=new zen3d.Vector3,t=new zen3d.Vector3,n=new zen3d.Vector3;return function(i,r,a){var o=this.elements;return n.subVectors(i,r),0===n.getLengthSquared()&&(n.z=1),n.normalize(),e.crossVectors(a,n),0===e.getLengthSquared()&&(1===Math.abs(a.z)?n.x+=1e-4:n.z+=1e-4,n.normalize(),e.crossVectors(a,n)),e.normalize(),t.crossVectors(n,e),o[0]=e.x,o[4]=t.x,o[8]=n.x,o[1]=e.y,o[5]=t.y,o[9]=n.y,o[2]=e.z,o[6]=t.z,o[10]=n.z,this}}();var t,n;e.prototype.decompose=function(i,r,a){void 0===t&&(t=new zen3d.Vector3,n=new e);var o=this.elements,s=t.set(o[0],o[1],o[2]).getLength(),u=t.set(o[4],o[5],o[6]).getLength(),h=t.set(o[8],o[9],o[10]).getLength();this.determinant()<0&&(s=-s),i.x=o[12],i.y=o[13],i.z=o[14],n.elements.set(this.elements);var d=1/s,l=1/u,c=1/h;return n.elements[0]*=d,n.elements[1]*=d,n.elements[2]*=d,n.elements[4]*=l,n.elements[5]*=l,n.elements[6]*=l,n.elements[8]*=c,n.elements[9]*=c,n.elements[10]*=c,r.setFromRotationMatrix(n),a.x=s,a.y=u,a.z=h,this},e.prototype.determinant=function(){var e=this.elements,t=e[0],n=e[4],i=e[8],r=e[12],a=e[1],o=e[5],s=e[9],u=e[13],h=e[2],d=e[6],l=e[10],c=e[14];return e[3]*(+r*s*d-i*u*d-r*o*l+n*u*l+i*o*c-n*s*c)+e[7]*(+t*s*c-t*u*l+r*a*l-i*a*c+i*u*h-r*s*h)+e[11]*(+t*u*d-t*o*c-r*a*d+n*a*c+r*o*h-n*u*h)+e[15]*(-i*o*h-t*s*d+t*o*l+i*a*d-n*a*l+n*s*h)},e.prototype.fromArray=function(e,t){void 0===t&&(t=0);for(var n=0;n<16;n++)this.elements[n]=e[n+t];return this},e.prototype.getMaxScaleOnAxis=function(){var e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],n=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],i=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,n,i))},e.prototype.toArray=function(e,t){void 0===e&&(e=[]),void 0===t&&(t=0);var n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e[t+9]=n[9],e[t+10]=n[10],e[t+11]=n[11],e[t+12]=n[12],e[t+13]=n[13],e[t+14]=n[14],e[t+15]=n[15],e},zen3d.Matrix4=e,zen3d.helpMatrix=new e}(),function(){var e=function(e,t,n,i){this._x=e||0,this._y=t||0,this._z=n||0,this._w=void 0!==i?i:1};e.prototype.normalize=function(e){var t=this.length();return 0===t?(this._x=0,this._y=0,this._z=0,this._w=1):(t=1/t,this._x=this._x*t,this._y=this._y*t,this._z=this._z*t,this._w=this._w*t),this.onChangeCallback(),this},e.prototype.length=function(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)},e.prototype.lerpQuaternions=function(e,t,n){var i=e._w,r=e._x,a=e._y,o=e._z,s=t._w,u=t._x,h=t._y,d=t._z,l=i*s+r*u+a*h+o*d;l<0&&(l=-l,s=-s,u=-u,h=-h,d=-d),this._w=i+n*(s-i),this._x=r+n*(u-r),this._y=a+n*(h-a),this._z=o+n*(d-o);var c=1/Math.sqrt(this._w*this._w+this._x*this._x+this._y*this._y+this._z*this._z);return this._w*=c,this._x*=c,this._y*=c,this._z*=c,this.onChangeCallback(),this},e.prototype.slerpQuaternions=function(e,t,n){var i=e._w,r=e._x,a=e._y,o=e._z,s=t._w,u=t._x,h=t._y,d=t._z,l=i*s+r*u+a*h+o*d;if(l<0&&(l=-l,s=-s,u=-u,h=-h,d=-d),l<.95){var c=Math.acos(l),p=1/Math.sin(c),f=Math.sin(c*(1-n))*p,_=Math.sin(c*n)*p;this._w=i*f+s*_,this._x=r*f+u*_,this._y=a*f+h*_,this._z=o*f+d*_}else{this._w=i+n*(s-i),this._x=r+n*(u-r),this._y=a+n*(h-a),this._z=o+n*(d-o);var v=1/Math.sqrt(this._w*this._w+this._x*this._x+this._y*this._y+this._z*this._z);this._w*=v,this._x*=v,this._y*=v,this._z*=v}return this.onChangeCallback(),this},Object.defineProperties(e.prototype,{x:{get:function(){return this._x},set:function(e){this._x=e,this.onChangeCallback()}},y:{get:function(){return this._y},set:function(e){this._y=e,this.onChangeCallback()}},z:{get:function(){return this._z},set:function(e){this._z=e,this.onChangeCallback()}},w:{get:function(){return this._w},set:function(e){this._w=e,this.onChangeCallback()}}}),e.prototype.set=function(e,t,n,i){return this._x=e||0,this._y=t||0,this._z=n||0,this._w=void 0!==i?i:1,this.onChangeCallback(),this},e.prototype.copy=function(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=void 0!==e.w?e.w:1,this.onChangeCallback(),this},e.prototype.setFromEuler=function(e,t){var n=Math.cos(e._x/2),i=Math.cos(e._y/2),r=Math.cos(e._z/2),a=Math.sin(e._x/2),o=Math.sin(e._y/2),s=Math.sin(e._z/2),u=e._order;return"XYZ"===u?(this._x=a*i*r+n*o*s,this._y=n*o*r-a*i*s,this._z=n*i*s+a*o*r,this._w=n*i*r-a*o*s):"YXZ"===u?(this._x=a*i*r+n*o*s,this._y=n*o*r-a*i*s,this._z=n*i*s-a*o*r,this._w=n*i*r+a*o*s):"ZXY"===u?(this._x=a*i*r-n*o*s,this._y=n*o*r+a*i*s,this._z=n*i*s+a*o*r,this._w=n*i*r-a*o*s):"ZYX"===u?(this._x=a*i*r-n*o*s,this._y=n*o*r+a*i*s,this._z=n*i*s-a*o*r,this._w=n*i*r+a*o*s):"YZX"===u?(this._x=a*i*r+n*o*s,this._y=n*o*r+a*i*s,this._z=n*i*s-a*o*r,this._w=n*i*r-a*o*s):"XZY"===u&&(this._x=a*i*r-n*o*s,this._y=n*o*r-a*i*s,this._z=n*i*s+a*o*r,this._w=n*i*r+a*o*s),!1!==t&&this.onChangeCallback(),this},e.prototype.setFromRotationMatrix=function(e){var t,n=e.elements,i=n[0],r=n[4],a=n[8],o=n[1],s=n[5],u=n[9],h=n[2],d=n[6],l=n[10],c=i+s+l;return c>0?(t=.5/Math.sqrt(c+1),this._w=.25/t,this._x=(d-u)*t,this._y=(a-h)*t,this._z=(o-r)*t):i>s&&i>l?(t=2*Math.sqrt(1+i-s-l),this._w=(d-u)/t,this._x=.25*t,this._y=(r+o)/t,this._z=(a+h)/t):s>l?(t=2*Math.sqrt(1+s-i-l),this._w=(a-h)/t,this._x=(r+o)/t,this._y=.25*t,this._z=(u+d)/t):(t=2*Math.sqrt(1+l-i-s),this._w=(o-r)/t,this._x=(a+h)/t,this._y=(u+d)/t,this._z=.25*t),this.onChangeCallback(),this},e.prototype.setFromUnitVectors=function(){var e,t=new zen3d.Vector3;return function(n,i){return void 0===t&&(t=new zen3d.Vector3),(e=n.dot(i)+1)<1e-6?(e=0,Math.abs(n.x)>Math.abs(n.z)?t.set(-n.y,n.x,0):t.set(0,-n.z,n.y)):t.crossVectors(n,i),this._x=t.x,this._y=t.y,this._z=t.z,this._w=e,this.normalize()}}(),e.prototype.premultiply=function(e){return this.multiplyQuaternions(e,this)},e.prototype.multiplyQuaternions=function(e,t){var n=e._x,i=e._y,r=e._z,a=e._w,o=t._x,s=t._y,u=t._z,h=t._w;return this._x=n*h+a*o+i*u-r*s,this._y=i*h+a*s+r*o-n*u,this._z=r*h+a*u+n*s-i*o,this._w=a*h-n*o-i*s-r*u,this.onChangeCallback(),this},e.prototype.toMatrix4=function(e){e||(e=new zen3d.Matrix4);var t=e.elements,n=2*this._x*this._y,i=2*this._x*this._z,r=2*this._x*this._w,a=2*this._y*this._z,o=2*this._y*this._w,s=2*this._z*this._w,u=this._x*this._x,h=this._y*this._y,d=this._z*this._z,l=this._w*this._w;return t[0]=u-h-d+l,t[4]=n-s,t[8]=i+o,t[12]=0,t[1]=n+s,t[5]=-u+h-d+l,t[9]=a-r,t[13]=0,t[2]=i-o,t[6]=a+r,t[10]=-u-h+d+l,t[14]=0,t[3]=0,t[7]=0,t[11]=0,t[15]=1,e},e.prototype.dot=function(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w},e.prototype.setFromAxisAngle=function(e,t){var n=t/2,i=Math.sin(n);return this._x=e.x*i,this._y=e.y*i,this._z=e.z*i,this._w=Math.cos(n),this.onChangeCallback(),this},e.prototype.fromArray=function(e,t){return void 0===t&&(t=0),this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this.onChangeCallback(),this},e.prototype.onChange=function(e){return this.onChangeCallback=e,this},e.prototype.onChangeCallback=function(){},zen3d.Quaternion=e}(),function(){var e=function(e,t){this.min=void 0!==e?e:new zen3d.Vector2(1/0,1/0),this.max=void 0!==t?t:new zen3d.Vector2(-1/0,-1/0)};e.prototype.set=function(e,t,n,i){this.min.set(e,t),this.max.set(n,i)},e.prototype.copy=function(e){return this.min.copy(e.min),this.max.copy(e.max),this},zen3d.Box2=e}(),function(){var e=function(e,t){this.min=void 0!==e?e:new zen3d.Vector3(1/0,1/0,1/0),this.max=void 0!==t?t:new zen3d.Vector3(-1/0,-1/0,-1/0)};e.prototype.set=function(e,t){this.min.copy(e),this.max.copy(t)},e.prototype.setFromPoints=function(e){this.makeEmpty();for(var t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this},e.prototype.makeEmpty=function(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this},e.prototype.expandByPoint=function(e){return this.min.min(e),this.max.max(e),this},e.prototype.expandByScalar=function(e){return this.min.addScalar(-e),this.max.addScalar(e),this},e.prototype.setFromArray=function(e,t){for(var n=1/0,i=1/0,r=1/0,a=-1/0,o=-1/0,s=-1/0,u=void 0!==t?t:3,h=0,d=e.length;h<d;h+=u){var l=e[h],c=e[h+1],p=e[h+2];l<n&&(n=l),c<i&&(i=c),p<r&&(r=p),l>a&&(a=l),c>o&&(o=c),p>s&&(s=p)}return this.min.set(n,i,r),this.max.set(a,o,s),this},e.prototype.isEmpty=function(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z},e.prototype.equals=function(e){return e.min.equals(this.min)&&e.max.equals(this.max)},e.prototype.getCenter=function(e){var t=e||new zen3d.Vector3;return this.isEmpty()?t.set(0,0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)},e.prototype.applyMatrix4=function(){var e=[new zen3d.Vector3,new zen3d.Vector3,new zen3d.Vector3,new zen3d.Vector3,new zen3d.Vector3,new zen3d.Vector3,new zen3d.Vector3,new zen3d.Vector3];return function(t){return this.isEmpty()?this:(e[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(t),e[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(t),e[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(t),e[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(t),e[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(t),e[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(t),e[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(t),e[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(t),this.setFromPoints(e),this)}}(),e.prototype.copy=function(e){return this.min.copy(e.min),this.max.copy(e.max),this},zen3d.Box3=e}(),function(){var e=function(e,t){this.center=void 0!==e?e:new zen3d.Vector3,this.radius=void 0!==t?t:0};e.prototype.set=function(e,t){return this.center.copy(e),this.radius=t,this},e.prototype.setFromArray=function(){var e=new zen3d.Box3,t=new zen3d.Vector3;return function(n,i){var r=void 0!==i?i:3,a=this.center;e.setFromArray(n,r).getCenter(a);for(var o=0,s=0,u=n.length;s<u;s+=r){var h=n[s],d=n[s+1],l=n[s+2];t.set(h,d,l),o=Math.max(o,a.distanceToSquared(t))}return this.radius=Math.sqrt(o),this}}(),e.prototype.applyMatrix4=function(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this},e.prototype.getBoundingBox=function(e){var t=e||new zen3d.Box3;return t.set(this.center,this.center),t.expandByScalar(this.radius),t},e.prototype.clone=function(){return(new e).copy(this)},e.prototype.copy=function(e){return this.center.copy(e.center),this.radius=e.radius,this},zen3d.Sphere=e}(),function(){var e=function(e,t){this.normal=void 0!==e?e:new zen3d.Vector3(1,0,0),this.constant=void 0!==t?t:0};e.prototype.set=function(e,t){return this.normal.copy(e),this.constant=t,this},e.prototype.setComponents=function(e,t,n,i){return this.normal.set(e,t,n),this.constant=i,this},e.prototype.normalize=function(){var e=1/this.normal.getLength();return this.normal.multiplyScalar(e),this.constant*=e,this},e.prototype.distanceToPoint=function(e){return this.normal.dot(e)+this.constant},e.prototype.coplanarPoint=function(e){return(e||new Vector3).copy(this.normal).multiplyScalar(-this.constant)},e.prototype.copy=function(e){return this.normal.copy(e.normal),this.constant=e.constant,this},e.prototype.applyMatrix4=function(){var e=new zen3d.Vector3,t=new zen3d.Matrix3;return function(n,i){var r=i||t.setFromMatrix4(n).inverse().transpose(),a=this.coplanarPoint(e).applyMatrix4(n),o=this.normal.applyMatrix3(r).normalize();return this.constant=-a.dot(o),this}}(),zen3d.Plane=e}(),function(){var e=function(e,t,n,i,r,a){this.planes=[void 0!==e?e:new zen3d.Plane,void 0!==t?t:new zen3d.Plane,void 0!==n?n:new zen3d.Plane,void 0!==i?i:new zen3d.Plane,void 0!==r?r:new zen3d.Plane,void 0!==a?a:new zen3d.Plane]};e.prototype.set=function(e,t,n,i,r,a){var o=this.planes;return o[0].copy(e),o[1].copy(t),o[2].copy(n),o[3].copy(i),o[4].copy(r),o[5].copy(a),this},e.prototype.setFromMatrix=function(e){var t=this.planes,n=e.elements,i=n[0],r=n[1],a=n[2],o=n[3],s=n[4],u=n[5],h=n[6],d=n[7],l=n[8],c=n[9],p=n[10],f=n[11],_=n[12],v=n[13],m=n[14],g=n[15];return t[0].setComponents(o-i,d-s,f-l,g-_).normalize(),t[1].setComponents(o+i,d+s,f+l,g+_).normalize(),t[2].setComponents(o+r,d+u,f+c,g+v).normalize(),t[3].setComponents(o-r,d-u,f-c,g-v).normalize(),t[4].setComponents(o-a,d-h,f-p,g-m).normalize(),t[5].setComponents(o+a,d+h,f+p,g+m).normalize(),this},e.prototype.intersectsSphere=function(e){for(var t=this.planes,n=e.center,i=-e.radius,r=0;r<6;r++)if(t[r].distanceToPoint(n)<i)return!1;return!0},e.prototype.intersectsBox=function(){var e=new zen3d.Vector3,t=new zen3d.Vector3;return function(n){for(var i=this.planes,r=0;r<6;r++){var a=i[r];e.x=a.normal.x>0?n.min.x:n.max.x,t.x=a.normal.x>0?n.max.x:n.min.x,e.y=a.normal.y>0?n.min.y:n.max.y,t.y=a.normal.y>0?n.max.y:n.min.y,e.z=a.normal.z>0?n.min.z:n.max.z,t.z=a.normal.z>0?n.max.z:n.min.z;var o=a.distanceToPoint(e),s=a.distanceToPoint(t);if(o<0&&s<0)return!1}return!0}}(),zen3d.Frustum=e}(),function(){var e=function(e,t,n){return this.r=0,this.g=0,this.b=0,void 0===t&&void 0===n?this.setHex(e):this.setRGB(e,t,n)};e.prototype.lerpColors=function(e,t,n){this.r=n*(t.r-e.r)+e.r,this.g=n*(t.g-e.g)+e.g,this.b=n*(t.b-e.b)+e.b,this.r=this.r,this.g=this.g,this.b=this.b},e.prototype.copy=function(e){return this.r=e.r,this.g=e.g,this.b=e.b,this},e.prototype.setHex=function(e){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(255&e)/255,this},e.prototype.setRGB=function(e,t,n){return this.r=e,this.g=t,this.b=n,this},e.prototype.setHSL=function(){function e(e,t){return(e%t+t)%t}function t(e,t,n){return n<0&&(n+=1),n>1&&(n-=1),n<1/6?e+6*(t-e)*n:n<.5?t:n<2/3?e+6*(t-e)*(2/3-n):e}return function(n,i,r){if(n=e(n,1),i=Math.max(0,Math.min(1,i)),r=Math.max(0,Math.min(1,r)),0===i)this.r=this.g=this.b=r;else{var a=r<=.5?r*(1+i):r+i-r*i,o=2*r-a;this.r=t(o,a,n+1/3),this.g=t(o,a,n),this.b=t(o,a,n-1/3)}return this}}(),e.prototype.fromArray=function(e,t){return void 0===t&&(t=0),this.r=e[t],this.g=e[t+1],this.b=e[t+2],this},e.prototype.toArray=function(e,t){return void 0===e&&(e=[]),void 0===t&&(t=0),e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e},zen3d.Color3=e}(),function(){var e=function(e,t){this.origin=void 0!==e?e:new zen3d.Vector3,this.direction=void 0!==t?t:new zen3d.Vector3};e.prototype.set=function(e,t){this.origin.copy(e),this.direction.copy(t)},e.prototype.at=function(e,t){return(t||new zen3d.Vector3).copy(this.direction).multiplyScalar(e).add(this.origin)},e.prototype.intersectsSphere=function(){var e=new zen3d.Vector3;return function(t,n){e.subVectors(t.center,this.origin);var i=e.dot(this.direction),r=e.dot(e)-i*i,a=t.radius*t.radius;if(r>a)return null;var o=Math.sqrt(a-r),s=i-o,u=i+o;return s<0&&u<0?null:s<0?this.at(u,n):this.at(s,n)}}(),e.prototype.intersectsBox=function(e,t){var n,i,r,a,o,s,u=1/this.direction.x,h=1/this.direction.y,d=1/this.direction.z,l=this.origin;return u>=0?(n=(e.min.x-l.x)*u,i=(e.max.x-l.x)*u):(n=(e.max.x-l.x)*u,i=(e.min.x-l.x)*u),h>=0?(r=(e.min.y-l.y)*h,a=(e.max.y-l.y)*h):(r=(e.max.y-l.y)*h,a=(e.min.y-l.y)*h),n>a||r>i?null:((r>n||n!==n)&&(n=r),(a<i||i!==i)&&(i=a),d>=0?(o=(e.min.z-l.z)*d,s=(e.max.z-l.z)*d):(o=(e.max.z-l.z)*d,s=(e.min.z-l.z)*d),n>s||o>i?null:((o>n||n!==n)&&(n=o),(s<i||i!==i)&&(i=s),i<0?null:this.at(n>=0?n:i,t)))},e.prototype.intersectTriangle=function(){var e=new zen3d.Vector3,t=new zen3d.Vector3,n=new zen3d.Vector3,i=new zen3d.Vector3;return function(r,a,o,s,u){t.subVectors(a,r),n.subVectors(o,r),i.crossVectors(t,n);var h,d=this.direction.dot(i);if(d>0){if(s)return null;h=1}else{if(!(d<0))return null;h=-1,d=-d}e.subVectors(this.origin,r);var l=h*this.direction.dot(n.crossVectors(e,n));if(l<0)return null;var c=h*this.direction.dot(t.cross(e));if(c<0)return null;if(l+c>d)return null;var p=-h*e.dot(i);return p<0?null:this.at(p/d,u)}}(),e.prototype.copy=function(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this},e.prototype.applyMatrix4=function(e){return this.direction.add(this.origin).applyMatrix4(e),this.origin.applyMatrix4(e),this.direction.sub(this.origin),this.direction.normalize(),this},zen3d.Ray=e}(),function(){function e(e,t,n){this.a=void 0!==e?e:new zen3d.Vector3,this.b=void 0!==t?t:new zen3d.Vector3,this.c=void 0!==n?n:new zen3d.Vector3}e.prototype.set=function(e,t,n){return this.a.copy(e),this.b.copy(t),this.c.copy(n),this},e.normal=function(){var e=new zen3d.Vector3;return function(t,n,i,r){var a=r||new zen3d.Vector3;a.subVectors(i,n),e.subVectors(t,n),a.cross(e);var o=a.getLengthSquared();return o>0?a.multiplyScalar(1/Math.sqrt(o)):a.set(0,0,0)}}(),e.barycoordFromPoint=function(){var e=new zen3d.Vector3,t=new zen3d.Vector3,n=new zen3d.Vector3;return function(i,r,a,o,s){e.subVectors(o,r),t.subVectors(a,r),n.subVectors(i,r);var u=e.dot(e),h=e.dot(t),d=e.dot(n),l=t.dot(t),c=t.dot(n),p=u*l-h*h,f=s||new zen3d.Vector3;if(0===p)return f.set(-2,-1,-1);var _=1/p,v=(l*d-h*c)*_,m=(u*c-h*d)*_;return f.set(1-v-m,m,v)}}(),e.containsPoint=function(){var t=new zen3d.Vector3;return function(n,i,r,a){var o=e.barycoordFromPoint(n,i,r,a,t);return o.x>=0&&o.y>=0&&o.x+o.y<=1}}(),zen3d.Triangle=e}(),function(){var e=function(e,t){this.posPoints=void 0,this.ctrlPoints=void 0,this.segCount=0,this.set(e,t)};e.prototype.set=function(e,t){this.posPoints=e,this.ctrlPoints=t,e.length!==t.length&&console.warn("Curve: posPoints and ctrlPoints's length not equal!"),this.segCount=e.length-1},e.prototype.calc=function(){var e=new zen3d.Vector2,t=new zen3d.Vector2,n=new zen3d.Vector2,i=new zen3d.Vector2;return function(r){for(var a=0;a<this.segCount;a++)if(r>=this.posPoints[a].x&&r<=this.posPoints[a+1].x){e.copy(this.posPoints[a]),n.copy(this.posPoints[a+1]),t.copy(this.ctrlPoints[a]),i.copy(this.ctrlPoints[a+1]);break}return e||e.copy(this.posPoints[this.posPoints.length-1]),t||t.copy(this.ctrlPoints[this.ctrlPoints.length-1]),n.copy(n||e),i.copy(i||t),r=(r-e.x)/(n.x-e.x),this._cubic_bezier(e.y,t.y,i.y,n.y,r)}}(),e.prototype.averageXSampler=function(e){e<2&&console.warn("Curve: sampler num less than 2!");for(var t=[],n=this.posPoints[0].x,i=this.posPoints[this.posPoints.length-1].x,r=(i-n)/(e-1),a=0,o=0;o<e;o++)a=o===e-1?i:n+o*r,t.push(a,this.calc(a));return t},e.prototype._cubic_bezier=function(e,t,n,i,r){return e=this._mix(e,t,r),t=this._mix(t,n,r),n=this._mix(n,i,r),e=this._mix(e,t,r),t=this._mix(t,n,r),e=this._mix(e,t,r)},e.prototype._mix=function(e,t,n){return e*(1-n)+t*n},zen3d.Curve=e}(),function(){var e=function(){this.eventMap={}};e.prototype.addEventListener=function(e,t,n){var i=this.eventMap[e];i||(i=this.eventMap[e]=[]),i.push({listener:t,thisObject:n||this})},e.prototype.removeEventListener=function(e,t,n){var i=this.eventMap[e];if(i)for(var r=0,a=i.length;r<a;r++){var o=i[r];if(o.listener==t&&o.thisObject==(n||this)){i.splice(r,1);break}}},e.prototype.dispatchEvent=function(e){e.target=this,this.notifyListener(e)},e.prototype.notifyListener=function(e){var t=this.eventMap[e.type];if(t)for(var n=0,i=t.length;n<i;n++){var r=t[n];r.listener.call(r.thisObject,e)}},zen3d.EventDispatcher=e}(),function(){function e(e,t){return e.distance-t.distance}function t(e,n,i,r){if(e.raycast(n,i),!0===r)for(var a=e.children,o=0,s=a.length;o<s;o++)t(a[o],n,i,!0)}var n=function(e,t,n,i){this.ray=new zen3d.Ray(e,t),this.near=n||0,this.far=i||1/0};n.prototype.set=function(e,t){this.ray.set(e,t)},n.prototype.setFromCamera=function(e,t){this.ray.origin.setFromMatrixPosition(t.worldMatrix),this.ray.direction.set(e.x,e.y,.5).unproject(t).sub(this.ray.origin).normalize()},n.prototype.intersectObject=function(n,i){var r=[];return t(n,this,r,i),r.sort(e),r},n.prototype.intersectObjects=function(n,i){var r=[];if(!1===Array.isArray(n))return console.warn("Raycaster.intersectObjects: objects is not an Array."),r;for(var a=0,o=n.length;a<o;a++)t(n[a],this,r,i);return r.sort(e),r},zen3d.Raycaster=n}(),function(){function e(e,t){if("highp"===t){if(e.getShaderPrecisionFormat(e.VERTEX_SHADER,e.HIGH_FLOAT).precision>0&&e.getShaderPrecisionFormat(e.FRAGMENT_SHADER,e.HIGH_FLOAT).precision>0)return"highp";t="mediump"}return"mediump"===t&&e.getShaderPrecisionFormat(e.VERTEX_SHADER,e.MEDIUM_FLOAT).precision>0&&e.getShaderPrecisionFormat(e.FRAGMENT_SHADER,e.MEDIUM_FLOAT).precision>0?"mediump":"lowp"}var t=function(e,t){var n=["","WEBKIT_","MOZ_"],i=null;for(var r in n)if(i=e.getExtension(n[r]+t))break;return i};zen3d.WebGLCapabilities=function(n){this.version=parseFloat(/^WebGL\ ([0-9])/.exec(n.getParameter(n.VERSION))[1]),this.precision="highp",this.maxPrecision=e(n,this.precision),this.maxTextures=n.getParameter(n.MAX_TEXTURE_IMAGE_UNITS),this.maxVertexTextures=n.getParameter(n.MAX_VERTEX_TEXTURE_IMAGE_UNITS),this.maxTextureSize=n.getParameter(n.MAX_TEXTURE_SIZE),this.maxCubemapSize=n.getParameter(n.MAX_CUBE_MAP_TEXTURE_SIZE),this.maxVertexUniformVectors=n.getParameter(n.MAX_VERTEX_UNIFORM_VECTORS),this.floatTextures=!!t(n,"OES_texture_float"),this.anisotropyExt=t(n,"EXT_texture_filter_anisotropic"),this.shaderTextureLOD=t(n,"EXT_shader_texture_lod"),this.maxAnisotropy=null!==this.anisotropyExt?n.getParameter(this.anisotropyExt.MAX_TEXTURE_MAX_ANISOTROPY_EXT):0;t(n,"OES_standard_derivatives"),t(n,"GL_OES_standard_derivatives"),t(n,"WEBGL_depth_texture")}}(),function(){function e(e,t,n,i){var r=new Uint8Array(4),a=e.createTexture();e.bindTexture(t,a),e.texParameteri(t,e.TEXTURE_MIN_FILTER,e.NEAREST),e.texParameteri(t,e.TEXTURE_MAG_FILTER,e.NEAREST);for(var o=0;o<i;o++)e.texImage2D(n+o,0,e.RGBA,1,1,0,e.RGBA,e.UNSIGNED_BYTE,r);return a}var t=zen3d.BLEND_TYPE,n=zen3d.CULL_FACE_TYPE,i=function(t,n){this.gl=t,this.capabilities=n,this.states={},this.currentBlending=null,this.currentBlendEquation=null,this.currentBlendSrc=null,this.currentBlendDst=null,this.currentBlendEquationAlpha=null,this.currentBlendSrcAlpha=null,this.currentBlendDstAlpha=null,this.currentPremultipliedAlpha=null,this.currentCullFace=null,this.currentViewport=new zen3d.Vector4,this.currentColorMask=null,this.currentClearColor=new zen3d.Vector4,this.currentTextureSlot=null,this.currentBoundTextures={},this.currentBoundBuffers={},this.emptyTextures={},this.emptyTextures[t.TEXTURE_2D]=e(t,t.TEXTURE_2D,t.TEXTURE_2D,1),this.emptyTextures[t.TEXTURE_CUBE_MAP]=e(t,t.TEXTURE_CUBE_MAP,t.TEXTURE_CUBE_MAP_POSITIVE_X,6),this.currentFlipSided=!1,this.currentDepthMask=!0,this.currentLineWidth=null,this.currentProgram=null,this.currentStencilMask=null,this.currentStencilFunc=null,this.currentStencilRef=null,this.currentStencilFuncMask=null,this.currentStencilFail=null,this.currentStencilZFail=null,this.currentStencilZPass=null,this.currentStencilClear=null,this.currentRenderTarget=null};i.prototype.setBlend=function(e,n,i,r,a,o,s,u){var h=this.gl;e!==t.NONE?this.enable(h.BLEND):this.disable(h.BLEND),e!==t.CUSTOM?(e===this.currentBlending&&u===this.currentPremultipliedAlpha||(e===t.NORMAL&&(u?(h.blendEquationSeparate(h.FUNC_ADD,h.FUNC_ADD),h.blendFuncSeparate(h.ONE,h.ONE_MINUS_SRC_ALPHA,h.ONE,h.ONE_MINUS_SRC_ALPHA)):(h.blendEquationSeparate(h.FUNC_ADD,h.FUNC_ADD),h.blendFuncSeparate(h.SRC_ALPHA,h.ONE_MINUS_SRC_ALPHA,h.ONE,h.ONE_MINUS_SRC_ALPHA))),e===t.ADD&&(u?(h.blendEquationSeparate(h.FUNC_ADD,h.FUNC_ADD),h.blendFuncSeparate(h.ONE,h.ONE,h.ONE,h.ONE)):(h.blendEquation(h.FUNC_ADD),h.blendFunc(h.SRC_ALPHA,h.ONE)))),this.currentBlendEquation=null,this.currentBlendSrc=null,this.currentBlendDst=null,this.currentBlendEquationAlpha=null,this.currentBlendSrcAlpha=null,this.currentBlendDstAlpha=null):(a=a||n,o=o||i,s=s||r,n===this.currentBlendEquation&&a===this.currentBlendEquationAlpha||(h.blendEquationSeparate(n,a),this.currentBlendEquation=n,this.currentBlendEquationAlpha=a),i===this.currentBlendSrc&&r===this.currentBlendDst&&o===this.currentBlendSrcAlpha&&s===this.currentBlendDstAlpha||(h.blendFuncSeparate(i,r,o,s),this.currentBlendSrc=i,this.currentBlendDst=r,this.currentBlendSrcAlpha=o,this.currentBlendDstAlpha=s)),this.currentBlending=e,this.currentPremultipliedAlpha=u},i.prototype.setFlipSided=function(e){var t=this.gl;this.currentFlipSided!==e&&(e?t.frontFace(t.CW):t.frontFace(t.CCW),this.currentFlipSided=e)},i.prototype.setCullFace=function(e){var t=this.gl;e!==n.NONE?(this.enable(t.CULL_FACE),e!==this.currentCullFace&&(e===n.BACK?t.cullFace(t.BACK):e===n.FRONT?t.cullFace(t.FRONT):t.cullFace(t.FRONT_AND_BACK))):this.disable(t.CULL_FACE),this.currentCullFace=e},i.prototype.viewport=function(e,t,n,i){var r=this.currentViewport;r.x===e&&r.y===t&&r.z===n&&r.w===i||(this.gl.viewport(e,t,n,i),r.set(e,t,n,i))},i.prototype.colorMask=function(e){this.currentColorMask!==e&&(this.gl.colorMask(e,e,e,e),this.currentColorMask=e)},i.prototype.clearColor=function(e,t,n,i){var r=this.currentClearColor;r.x===e&&r.y===t&&r.z===n&&r.w===i||(this.gl.clearColor(e,t,n,i),r.set(e,t,n,i))},i.prototype.activeTexture=function(e){var t=this.gl;void 0===e&&(e=t.TEXTURE0+this.capabilities.maxTextures-1),this.currentTextureSlot!==e&&(t.activeTexture(e),this.currentTextureSlot=e)},i.prototype.bindTexture=function(e,t){var n=this.gl;null===this.currentTextureSlot&&this.activeTexture();var i=this.currentBoundTextures[this.currentTextureSlot];void 0===i&&(i={type:void 0,texture:void 0},this.currentBoundTextures[this.currentTextureSlot]=i),i.type===e&&i.texture===t||(n.bindTexture(e,t||this.emptyTextures[e]),i.type=e,i.texture=t)},i.prototype.bindBuffer=function(e,t){var n=this.gl;this.currentBoundBuffers[e]!==t&&(n.bindBuffer(e,t),this.currentBoundBuffers[e]=t)},i.prototype.enable=function(e){!0!==this.states[e]&&(this.gl.enable(e),this.states[e]=!0)},i.prototype.disable=function(e){!1!==this.states[e]&&(this.gl.disable(e),this.states[e]=!1)},i.prototype.depthMask=function(e){e!==this.currentDepthMask&&(this.gl.depthMask(e),this.currentDepthMask=e)},i.prototype.setLineWidth=function(e){e!==this.currentLineWidth&&(this.capabilities.version>=1&&this.gl.lineWidth(e),this.currentLineWidth=e)},i.prototype.setProgram=function(e){this.currentProgram!==e&&(this.gl.useProgram(e.id),this.currentProgram=e)},i.prototype.stencilMask=function(e){this.currentStencilMask!==e&&(this.gl.stencilMask(e),this.currentStencilMask=e)},i.prototype.stencilFunc=function(e,t,n){this.currentStencilFunc===e&&this.currentStencilRef===t&&this.currentStencilFuncMask===n||(this.gl.stencilFunc(e,t,n),this.currentStencilFunc=e,this.currentStencilRef=t,this.currentStencilFuncMask=n)},i.prototype.stencilOp=function(e,t,n){this.currentStencilFail===e&&this.currentStencilZFail===t&&this.currentStencilZPass===n||(this.gl.stencilOp(e,t,n),this.currentStencilFail=e,this.currentStencilZFail=t,this.currentStencilZPass=n)},i.prototype.clearStencil=function(e){this.currentStencilClear!==e&&(this.gl.clearStencil(e),this.currentStencilClear=e)},zen3d.WebGLState=i}(),function(){var e=function(){this.properties={}};e.prototype.get=function(e){var t=e.uuid,n=this.properties[t];return void 0===n&&(n={},this.properties[t]=n),n},e.prototype.delete=function(e){delete this.properties[e.uuid]},e.prototype.clear=function(){this.properties={}},zen3d.WebGLProperties=e}(),function(){function e(e){return e.wrapS!==o.CLAMP_TO_EDGE||e.wrapT!==o.CLAMP_TO_EDGE||e.minFilter!==a.NEAREST&&e.minFilter!==a.LINEAR}function t(e){return e===a.NEAREST||e===a.NEAREST_MIPMAP_LINEAR||e===a.NEAREST_MIPMAP_NEAREST?a.NEAREST:a.LINEAR}function n(e){return u(e.width)&&u(e.height)}function i(e){if(s&&(e instanceof HTMLImageElement||e instanceof HTMLCanvasElement)){var t=document.createElementNS("http://www.w3.org/1999/xhtml","canvas");return t.width=h(e.width),t.height=h(e.height),t.getContext("2d").drawImage(e,0,0,t.width,t.height),console.warn("image is not power of two ("+e.width+"x"+e.height+"). Resized to "+t.width+"x"+t.height,e),t}return e}function r(e,t){if(e.width>t||e.height>t){if(!s)return console.warn("image is too big ("+e.width+"x"+e.height+"). max size is "+t+"x"+t,e),e;var n=t/Math.max(e.width,e.height),i=document.createElementNS("http://www.w3.org/1999/xhtml","canvas");return i.width=Math.floor(e.width*n),i.height=Math.floor(e.height*n),i.getContext("2d").drawImage(e,0,0,e.width,e.height,0,0,i.width,i.height),console.warn("image is too big ("+e.width+"x"+e.height+"). Resized to "+i.width+"x"+i.height,e),i}return e}var a=zen3d.WEBGL_TEXTURE_FILTER,o=zen3d.WEBGL_TEXTURE_WRAP,s=zen3d.isWeb,u=zen3d.isPowerOfTwo,h=zen3d.nearestPowerOfTwo,d=function(e,t,n,i){this.gl=e,this.state=t,this.properties=n,this.capabilities=i};d.prototype.setTexture2D=function(t,a){var o=this.gl,s=this.state,u=this.properties.get(t);if(t.version>0&&u.__version!==t.version){void 0===u.__webglTexture&&(t.addEventListener("dispose",this.onTextureDispose,this),u.__webglTexture=o.createTexture()),s.activeTexture(o.TEXTURE0+a),s.bindTexture(o.TEXTURE_2D,u.__webglTexture);var h=r(t.image,this.capabilities.maxTextureSize);e(t)&&!1===n(h)&&(h=i(h));var d=n(h);this.setTextureParameters(t,d);var l,c=t.mipmaps,p=t.pixelFormat,f=t.pixelType;if(t.isDataTexture)if(c.length>0&&d){for(var _=0,v=c.length;_<v;_++)l=c[_],o.texImage2D(o.TEXTURE_2D,_,p,l.width,l.height,t.border,p,f,l.data);t.generateMipmaps=!1}else o.texImage2D(o.TEXTURE_2D,0,p,h.width,h.height,t.border,p,f,h.data);else if(c.length>0&&d){for(var _=0,v=c.length;_<v;_++)l=c[_],o.texImage2D(o.TEXTURE_2D,_,p,p,f,l);t.generateMipmaps=!1}else o.texImage2D(o.TEXTURE_2D,0,p,p,f,h);return t.generateMipmaps&&d&&o.generateMipmap(o.TEXTURE_2D),void(u.__version=t.version)}s.activeTexture(o.TEXTURE0+a),s.bindTexture(o.TEXTURE_2D,u.__webglTexture)},d.prototype.setTextureCube=function(e,t){var i=this.gl,a=this.state,o=this.properties.get(e);if(e.version>0&&o.__version!==e.version){void 0===o.__webglTexture&&(e.addEventListener("dispose",this.onTextureDispose,this),o.__webglTexture=i.createTexture()),a.activeTexture(i.TEXTURE0+t),a.bindTexture(i.TEXTURE_CUBE_MAP,o.__webglTexture);for(var s=[],u=0;u<6;u++)s[u]=r(e.images[u],this.capabilities.maxCubemapSize);var h=n(s[0]);this.setTextureParameters(e,h);for(var d=e.pixelFormat,l=e.pixelType,u=0;u<6;u++)i.texImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+u,0,d,d,l,s[u]);return e.generateMipmaps&&h&&i.generateMipmap(i.TEXTURE_CUBE_MAP),void(o.__version=e.version)}a.activeTexture(i.TEXTURE0+t),a.bindTexture(i.TEXTURE_CUBE_MAP,o.__webglTexture)},d.prototype.setTextureParameters=function(e,n){var i=this.gl,r=e.textureType;n?(i.texParameteri(r,i.TEXTURE_WRAP_S,e.wrapS),i.texParameteri(r,i.TEXTURE_WRAP_T,e.wrapT),i.texParameteri(r,i.TEXTURE_MAG_FILTER,e.magFilter),i.texParameteri(r,i.TEXTURE_MIN_FILTER,e.minFilter)):(i.texParameteri(r,i.TEXTURE_WRAP_S,i.CLAMP_TO_EDGE),i.texParameteri(r,i.TEXTURE_WRAP_T,i.CLAMP_TO_EDGE),e.wrapS===i.CLAMP_TO_EDGE&&e.wrapT===i.CLAMP_TO_EDGE||console.warn("Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to zen3d.TEXTURE_WRAP.CLAMP_TO_EDGE.",e),i.texParameteri(r,i.TEXTURE_MAG_FILTER,t(e.magFilter)),i.texParameteri(r,i.TEXTURE_MIN_FILTER,t(e.minFilter)),(e.minFilter!==i.NEAREST&&e.minFilter!==i.LINEAR||e.magFilter!==i.NEAREST&&e.magFilter!==i.LINEAR)&&console.warn("Texture is not power of two. Texture.minFilter and Texture.magFilter should be set to zen3d.TEXTURE_FILTER.NEAREST or zen3d.TEXTURE_FILTER.LINEAR.",e));var a=this.capabilities.anisotropyExt;a&&e.anisotropy>1&&i.texParameterf(r,a.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(e.anisotropy,this.capabilities.maxAnisotropy))},d.prototype.setRenderTarget2D=function(e){var t=this.gl,i=this.state,r=this.properties.get(e),a=this.properties.get(e.texture);if(void 0!==a.__webglTexture&&void 0!==r.__webglFramebuffer)t.bindFramebuffer(t.FRAMEBUFFER,r.__webglFramebuffer);else{e.addEventListener("dispose",this.onRenderTargetDispose,this),a.__webglTexture=t.createTexture(),r.__webglFramebuffer=t.createFramebuffer(),t.bindFramebuffer(t.FRAMEBUFFER,r.__webglFramebuffer),i.bindTexture(t.TEXTURE_2D,a.__webglTexture);var o=n(e);this.setTextureParameters(e.texture,o);var s=e.texture.pixelFormat,u=e.texture.pixelType;if(t.texImage2D(t.TEXTURE_2D,0,s,e.width,e.height,0,s,u,null),t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,a.__webglTexture,0),e.texture.generateMipmaps&&o&&t.generateMipmap(t.TEXTURE_2D),i.bindTexture(t.TEXTURE_2D,null),e.depthBuffer)if(e.depthTexture){var h=this.properties.get(e.depthTexture);if(h.__webglTexture=t.createTexture(),i.bindTexture(t.TEXTURE_2D,h.__webglTexture),this.setTextureParameters(e.depthTexture,o),s=e.depthTexture.pixelFormat,u=e.depthTexture.pixelType,t.texImage2D(t.TEXTURE_2D,0,s,e.width,e.height,0,s,u,null),u===zen3d.WEBGL_PIXEL_TYPE.UNSIGNED_SHORT||u===zen3d.WEBGL_PIXEL_TYPE.UNSIGNED_INT)t.framebufferTexture2D(t.FRAMEBUFFER,t.DEPTH_ATTACHMENT,t.TEXTURE_2D,h.__webglTexture,0);else{if(u!==zen3d.WEBGL_PIXEL_TYPE.UNSIGNED_INT_24_8)throw new Error("Unknown depthTexture format");t.framebufferTexture2D(t.FRAMEBUFFER,t.DEPTH_STENCIL_ATTACHMENT,t.TEXTURE_2D,h.__webglTexture,0)}i.bindTexture(t.TEXTURE_2D,null)}else{r.__webglDepthbuffer=t.createRenderbuffer();var d=r.__webglDepthbuffer;t.bindRenderbuffer(t.RENDERBUFFER,d),e.stencilBuffer?(t.renderbufferStorage(t.RENDERBUFFER,t.DEPTH_STENCIL,e.width,e.height),t.framebufferRenderbuffer(t.FRAMEBUFFER,t.DEPTH_STENCIL_ATTACHMENT,t.RENDERBUFFER,d)):(t.renderbufferStorage(t.RENDERBUFFER,t.DEPTH_COMPONENT16,e.width,e.height),t.framebufferRenderbuffer(t.FRAMEBUFFER,t.DEPTH_ATTACHMENT,t.RENDERBUFFER,d)),t.bindRenderbuffer(t.RENDERBUFFER,null)}var l=t.checkFramebufferStatus(t.FRAMEBUFFER);l!==t.FRAMEBUFFER_COMPLETE&&(l===t.FRAMEBUFFER_INCOMPLETE_ATTACHMENT?console.warn("framebuffer not complete: FRAMEBUFFER_INCOMPLETE_ATTACHMENT"):l===t.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT?console.warn("framebuffer not complete: FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT"):l===t.FRAMEBUFFER_INCOMPLETE_DIMENSIONS?console.warn("framebuffer not complete: FRAMEBUFFER_INCOMPLETE_DIMENSIONS"):l===t.FRAMEBUFFER_UNSUPPORTED?console.warn("framebuffer not complete: FRAMEBUFFER_UNSUPPORTED"):console.warn("framebuffer not complete."))}},d.prototype.setRenderTargetCube=function(e){var t=this.gl,i=this.state,r=this.properties.get(e),a=this.properties.get(e.texture);if(void 0!==a.__webglTexture&&void 0!==r.__webglFramebuffer)t.bindFramebuffer(t.FRAMEBUFFER,r.__webglFramebuffer),t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_CUBE_MAP_POSITIVE_X+e.activeCubeFace,a.__webglTexture,0);else{e.addEventListener("dispose",this.onRenderTargetDispose,this),a.__webglTexture=t.createTexture(),r.__webglFramebuffer=t.createFramebuffer(),t.bindFramebuffer(t.FRAMEBUFFER,r.__webglFramebuffer),i.bindTexture(t.TEXTURE_CUBE_MAP,a.__webglTexture);var o=n(e);this.setTextureParameters(e.texture,o);for(var s=e.texture.pixelFormat,u=e.texture.pixelType,h=0;h<6;h++)t.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+h,0,s,e.width,e.height,0,s,u,null);if(t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_CUBE_MAP_POSITIVE_X+e.activeCubeFace,a.__webglTexture,0),e.texture.generateMipmaps&&o&&t.generateMipmap(t.TEXTURE_CUBE_MAP),i.bindTexture(t.TEXTURE_CUBE_MAP,null),e.depthBuffer){r.__webglDepthbuffer=t.createRenderbuffer();var d=r.__webglDepthbuffer;t.bindRenderbuffer(t.RENDERBUFFER,d),e.stencilBuffer?(t.renderbufferStorage(t.RENDERBUFFER,t.DEPTH_STENCIL,e.width,e.height),t.framebufferRenderbuffer(t.FRAMEBUFFER,t.DEPTH_STENCIL_ATTACHMENT,t.RENDERBUFFER,d)):(t.renderbufferStorage(t.RENDERBUFFER,t.DEPTH_COMPONENT16,e.width,e.height),t.framebufferRenderbuffer(t.FRAMEBUFFER,t.DEPTH_ATTACHMENT,t.RENDERBUFFER,d)),t.bindRenderbuffer(t.RENDERBUFFER,null)}}},d.prototype.updateRenderTargetMipmap=function(e){var t=this.gl,i=this.state,r=e.texture;if(r.generateMipmaps&&n(e)&&r.minFilter!==t.NEAREST&&r.minFilter!==t.LINEAR){var a=r.textureType,o=this.properties.get(r).__webglTexture;i.bindTexture(a,o),t.generateMipmap(a),i.bindTexture(a,null)}},d.prototype.onTextureDispose=function(e){var t=this.gl,n=e.target,i=this.properties.get(n);n.removeEventListener("dispose",this.onTextureDispose,this),i.__webglTexture&&t.deleteTexture(i.__webglTexture),this.properties.delete(n)},d.prototype.onRenderTargetDispose=function(e){var t=this.gl,n=e.target,i=this.properties.get(n);n.removeEventListener("dispose",this.onRenderTargetDispose,this),i.__webglTexture&&t.deleteTexture(textureProperties.__webglTexture),i.__webglFramebuffer&&t.deleteFramebuffer(i.__webglFramebuffer),i.__webglDepthbuffer&&t.deleteRenderbuffer(i.__webglDepthbuffer),this.properties.delete(n)},d.prototype.setRenderTarget=function(e){var t=this.gl,n=this.state;if(e.texture){var i=void 0!==e.activeCubeFace;if(n.currentRenderTarget!==e)i?this.setRenderTargetCube(e):this.setRenderTarget2D(e),n.currentRenderTarget=e;else if(i){var r=this.properties.get(e.texture);t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_CUBE_MAP_POSITIVE_X+e.activeCubeFace,r.__webglTexture,0)}}else n.currentRenderTarget===e||(t.bindFramebuffer(t.FRAMEBUFFER,null),n.currentRenderTarget=e)},zen3d.WebGLTexture=d}(),function(){function e(e,t,n,i){var r=n.array,a=n.dynamic?e.DYNAMIC_DRAW:e.STATIC_DRAW,o=e.createBuffer();e.bindBuffer(i,o),e.bufferData(i,r,a);var s=e.FLOAT;r instanceof Float32Array?s=e.FLOAT:r instanceof Float64Array?console.warn("Unsupported data buffer format: Float64Array."):r instanceof Uint16Array?s=e.UNSIGNED_SHORT:r instanceof Int16Array?s=e.SHORT:r instanceof Uint32Array?s=e.UNSIGNED_INT:r instanceof Int32Array?s=e.INT:r instanceof Int8Array?s=e.BYTE:r instanceof Uint8Array&&(s=e.UNSIGNED_BYTE),t.buffer=o,t.type=s,t.bytesPerElement=r.BYTES_PER_ELEMENT,t.version=n.version}function t(e,t,n,i){var r=n.array,a=n.updateRange;e.bindBuffer(i,t),!1===n.dynamic?e.bufferData(i,r,e.STATIC_DRAW):-1===a.count?e.bufferSubData(i,0,r):0===a.count?console.error("updateBuffer: dynamic BufferAttribute marked as needsUpdate but updateRange.count is 0, ensure you are using set methods or updating manually."):(e.bufferSubData(i,a.offset*r.BYTES_PER_ELEMENT,r.subarray(a.offset,a.offset+a.count)),a.count=-1)}function n(n,i,r,a){r.isInterleavedBufferAttribute&&(r=r.data);var o=i.get(r);void 0===o.buffer?e(n,o,r,a):o.version<r.version&&(t(n,o.buffer,r,a),o.version=r.version)}function i(e,t,n){n.isInterleavedBufferAttribute&&(n=n.data);var i=t.get(n);i.buffer&&e.deleteBuffer(i.buffer),buffers.delete(n)}var r=function(e,t,n,i){this.gl=e,this.state=t,this.properties=n,this.capabilities=i};r.prototype.setGeometry=function(e){var t=this.gl,i=(this.state,this.properties),r=this.properties.get(e);r.created||(e.addEventListener("dispose",this.onGeometryDispose2,this),r.created=!0),null!==e.index&&n(t,i,e.index,t.ELEMENT_ARRAY_BUFFER);for(var a in e.attributes)n(t,i,e.attributes[a],t.ARRAY_BUFFER)},r.prototype.onGeometryDispose=function(e){var t=this.gl,n=e.target;this.properties.get(n);n.removeEventListener("dispose",this.onGeometryDispose,this),null!==n.index&&i(t,properties,n.index);for(var r in n.attributes)i(t,properties,n.attributes[r]);this.properties.delete(n)},zen3d.WebGLGeometry=r}(),function(){var e=zen3d.WEBGL_UNIFORM_TYPE,t=function(e,t,n){this.gl=e,this.name=n.name,this.type=n.type,this.size=n.size,this.location=e.getUniformLocation(t,this.name),this.setValue=void 0,this.set=void 0,this._generateSetValue()};t.prototype._generateSetValue=function(){var t=this.gl,n=this.type,i=this.location;switch(n){case e.FLOAT:this.setValue=this.set=function(e){t.uniform1f(i,e)};break;case e.SAMPLER_2D:case e.SAMPLER_CUBE:case e.BOOL:case e.INT:this.setValue=this.set=function(e){t.uniform1i(i,e)};break;case e.FLOAT_VEC2:this.setValue=function(e,n){t.uniform2f(i,e,n)},this.set=function(e){t.uniform2fv(i,e)};break;case e.BOOL_VEC2:case e.INT_VEC2:this.setValue=function(e,n){t.uniform2i(i,e,n)},this.set=function(e){t.uniform2iv(i,e)};break;case e.FLOAT_VEC3:this.setValue=function(e,n,r){t.uniform3f(i,e,n,r)},this.set=function(e){t.uniform3fv(i,e)};break;case e.BOOL_VEC3:case e.INT_VEC3:this.setValue=function(e,n,r){t.uniform3i(i,e,n,r)},this.set=function(e){t.uniform3iv(i,e)};break;case e.FLOAT_VEC4:this.setValue=function(e,n,r,a){t.uniform4f(i,e,n,r,a)},this.set=function(e){t.uniform4fv(i,e)};break;case e.BOOL_VEC4:case e.INT_VEC4:this.setValue=function(e,n,r,a){t.uniform4i(i,e,n,r,a)},this.set=function(e){t.uniform4iv(i,e)};break;case e.FLOAT_MAT2:this.setValue=this.set=function(e){t.uniformMatrix2fv(i,!1,e)};break;case e.FLOAT_MAT3:this.setValue=this.set=function(e){t.uniformMatrix3fv(i,!1,e)};break;case e.FLOAT_MAT4:this.setValue=this.set=function(e){t.uniformMatrix4fv(i,!1,e)}}},zen3d.WebGLUniform=t}(),function(){var e=zen3d.WEBGL_ATTRIBUTE_TYPE,t=function(e,t,n){this.gl=e,this.name=n.name,this.type=n.type,this.size=n.size,this.location=e.getAttribLocation(t,this.name),this.count=0,this.initCount(e),this.format=e.FLOAT,this.initFormat(e)};t.prototype.initCount=function(t){switch(this.type){case e.FLOAT:case e.BYTE:case e.UNSIGNED_BYTE:case e.UNSIGNED_SHORT:this.count=1;break;case e.FLOAT_VEC2:this.count=2;break;case e.FLOAT_VEC3:this.count=3;break;case e.FLOAT_VEC4:this.count=4}},t.prototype.initFormat=function(t){switch(this.type){case e.FLOAT:case e.FLOAT_VEC2:case e.FLOAT_VEC3:case e.FLOAT_VEC4:this.format=t.FLOAT;break;case e.UNSIGNED_BYTE:this.format=t.UNSIGNED_BYTE;break;case e.UNSIGNED_SHORT:this.format=t.UNSIGNED_SHORT;break;case e.BYTE:this.format=t.BYTE}},zen3d.WebGLAttribute=t}(),function(){function e(e){for(var t=e.split("\n"),n=0;n<t.length;n++)t[n]=n+1+": "+t[n];return t.join("\n")}function t(t,n,i){var r=t.createShader(n);return t.shaderSource(r,i),t.compileShader(r),t.getShaderParameter(r,t.COMPILE_STATUS)||console.warn("shader not compiled!",t.getShaderInfoLog(r),e(i)),r}function n(e,t,n){var i=e.createProgram();return e.attachShader(i,t),e.attachShader(i,n),e.linkProgram(i),e.getProgramParameter(i,e.LINK_STATUS)||console.warn("program not linked!",e.getProgramInfoLog(i)),i}function i(e,t){for(var n={},i=e.getProgramParameter(t,e.ACTIVE_UNIFORMS),r=0;r<i;r++){var a=e.getActiveUniform(t,r),o=a.name,s=new zen3d.WebGLUniform(e,t,a);n[o]=s}return n}function r(e,t){for(var n={},i=e.getProgramParameter(t,e.ACTIVE_ATTRIBUTES),r=0;r<i;r++){var a=e.getActiveAttrib(t,r),o=a.name,s=new zen3d.WebGLAttribute(e,t,a);n[o]=s}return n}var a=function(e,a,o){this.uuid=zen3d.generateUUID(),this.vshaderSource=a,this.fshaderSource=o;var s=t(e,e.VERTEX_SHADER,this.vshaderSource),u=t(e,e.FRAGMENT_SHADER,this.fshaderSource);this.id=n(e,s,u),this.uniforms=i(e,this.id),this.attributes=r(e,this.id),e.deleteShader(s),e.deleteShader(u)};a.prototype.dispose=function(e){e.deleteProgram(this.id)},zen3d.WebGLProgram=a}(),function(){var e=zen3d.CULL_FACE_TYPE,t=zen3d.BLEND_TYPE,n=zen3d.DRAW_SIDE,i=zen3d.WEBGL_UNIFORM_TYPE,r=new zen3d.Vector3,a=new zen3d.Vector4,o=function(e){return e.material},s=function(){var e,t=new zen3d.Plane;return function(n,i){(!e||e.length<4*n.length)&&(e=new Float32Array(4*n.length));for(var r=0;r<n.length;r++)t.copy(n[r]),e[4*r+0]=t.normal.x,e[4*r+1]=t.normal.y,e[4*r+2]=t.normal.z,e[4*r+3]=t.constant;return e}}(),u=function(t){this.gl=t;var n=new zen3d.WebGLProperties;this.properties=n;var i=new zen3d.WebGLCapabilities(t);this.capabilities=i;var r=new zen3d.WebGLState(t,i);r.enable(t.STENCIL_TEST),r.enable(t.DEPTH_TEST),t.depthFunc(t.LEQUAL),r.setCullFace(e.BACK),r.setFlipSided(!1),r.clearColor(0,0,0,0),this.state=r,this.texture=new zen3d.WebGLTexture(t,r,n,i),this.geometry=new zen3d.WebGLGeometry(t,r,n,i),this._usedTextureUnits=0,this._currentGeometryProgram=""};u.prototype.clear=function(e,t,n){var i=this.gl,r=0;(void 0===e||e)&&(r|=i.COLOR_BUFFER_BIT),(void 0===t||t)&&(r|=i.DEPTH_BUFFER_BIT),(void 0===n||n)&&(r|=i.STENCIL_BUFFER_BIT),i.clear(r)},u.prototype.render=function(e,t,n){var i=e.updateRenderList(t);this.renderPass(i.opaque,t,{scene:e,getMaterial:function(t){return e.overrideMaterial||t.material}}),this.renderPass(i.transparent,t,{scene:e,getMaterial:function(t){return e.overrideMaterial||t.material}}),n&&this.renderPass(i.ui,t,{scene:e,getMaterial:function(t){return e.overrideMaterial||t.material}})},u.prototype.renderPass=function(e,t,n){n=n||{};for(var u=this.gl,h=this.state,d=n.getMaterial||o,l=n.scene||{},c=(h.currentRenderTarget.width,h.currentRenderTarget.height),p=0,f=e.length;p<f;p++){var _=e[p];if(!n.ifRender||n.ifRender(_)){var v=_.object,m=d.call(this,_),g=_.geometry,E=_.group,y=zen3d.getProgram(this,t,m,v,l);h.setProgram(y),this.geometry.setGeometry(g);var T=y.uuid+"_"+g.uuid;T!==this._currentGeometryProgram&&(this.setupVertexAttributes(y,g),this._currentGeometryProgram=T);var x=y.uniforms;for(var M in x){var S=x[M];switch(M){case"u_Projection":if(v.type===zen3d.OBJECT_TYPE.CANVAS2D&&v.isScreenCanvas)w=v.orthoCamera.projectionMatrix.elements;else var w=t.projectionMatrix.elements;S.setValue(w);break;case"u_View":if(v.type===zen3d.OBJECT_TYPE.CANVAS2D&&v.isScreenCanvas)z=v.orthoCamera.viewMatrix.elements;else var z=t.viewMatrix.elements;S.setValue(z);break;case"u_Model":var A=v.worldMatrix.elements;S.setValue(A);break;case"u_Color":L=m.diffuse;S.setValue(L.r,L.g,L.b);break;case"u_Opacity":S.setValue(m.opacity);break;case"texture":F=this.allocTexUnit();this.texture.setTexture2D(m.diffuseMap,F),S.setValue(F);break;case"normalMap":F=this.allocTexUnit();this.texture.setTexture2D(m.normalMap,F),S.setValue(F);break;case"bumpMap":F=this.allocTexUnit();this.texture.setTexture2D(m.bumpMap,F),S.setValue(F);break;case"bumpScale":S.setValue(m.bumpScale);break;case"envMap":F=this.allocTexUnit();this.texture.setTextureCube(m.envMap,F),S.setValue(F);break;case"cubeMap":F=this.allocTexUnit();this.texture.setTextureCube(m.cubeMap,F),S.setValue(F);break;case"u_EnvMap_Intensity":S.setValue(m.envMapIntensity);break;case"u_Specular":S.setValue(m.shininess);break;case"u_SpecularColor":L=m.specular;S.setValue(L.r,L.g,L.b,1);break;case"specularMap":F=this.allocTexUnit();this.texture.setTexture2D(m.specularMap,F),S.setValue(F);break;case"aoMap":F=this.allocTexUnit();this.texture.setTexture2D(m.aoMap,F),S.setValue(F);break;case"aoMapIntensity":S.setValue(m.aoMapIntensity);break;case"u_Roughness":S.setValue(m.roughness);break;case"roughnessMap":F=this.allocTexUnit();this.texture.setTexture2D(m.roughnessMap,F),S.setValue(F);break;case"u_Metalness":S.setValue(m.metalness);break;case"metalnessMap":F=this.allocTexUnit();this.texture.setTexture2D(m.metalnessMap,F),S.setValue(F);break;case"emissive":var L=m.emissive,b=m.emissiveIntensity;S.setValue(L.r*b,L.g*b,L.b*b);break;case"emissiveMap":F=this.allocTexUnit();this.texture.setTexture2D(m.emissiveMap,F),S.setValue(F);break;case"u_CameraPosition":r.setFromMatrixPosition(t.worldMatrix),S.setValue(r.x,r.y,r.z);break;case"u_FogColor":L=l.fog.color;S.setValue(L.r,L.g,L.b);break;case"u_FogDensity":S.setValue(l.fog.density);break;case"u_FogNear":S.setValue(l.fog.near);break;case"u_FogFar":S.setValue(l.fog.far);break;case"u_PointSize":S.setValue(m.size);break;case"u_PointScale":var P=.5*c;S.setValue(P);break;case"dashSize":S.setValue(m.dashSize);break;case"totalSize":S.setValue(m.dashSize+m.gapSize);break;case"scale":S.setValue(m.scale);break;case"clippingPlanes[0]":var R=s(l.clippingPlanes||[],t);u.uniform4fv(S.location,R);break;default:if(m.uniforms&&void 0!==m.uniforms[M])if(S.type===i.SAMPLER_2D){F=this.allocTexUnit();this.texture.setTexture2D(m.uniforms[M],F),S.setValue(F)}else if(S.type===i.SAMPLER_CUBE){F=this.allocTexUnit();this.texture.setTextureCube(m.uniforms[M],F),S.setValue(F)}else S.set(m.uniforms[M])}}v.type===zen3d.OBJECT_TYPE.SKINNED_MESH&&this.uploadSkeleton(x,v,y.id),v.type===zen3d.OBJECT_TYPE.SPRITE&&this.uploadSpriteUniform(x,v,t,l.fog),v.type===zen3d.OBJECT_TYPE.PARTICLE&&this.uploadParticlesUniform(x,v,t),m.acceptLight&&l.lights&&this.uploadLights(x,l.lights,v.receiveShadow,t);var C=v.worldMatrix.determinant()<0;this.setStates(m,C);var N=a.set(h.currentRenderTarget.width,h.currentRenderTarget.height,h.currentRenderTarget.width,h.currentRenderTarget.height).multiply(t.rect);if(N.z-=N.x,N.w-=N.y,N.x=Math.floor(N.x),N.y=Math.floor(N.y),N.z=Math.floor(N.z),N.w=Math.floor(N.w),v.type===zen3d.OBJECT_TYPE.CANVAS2D){v.isScreenCanvas&&(v.setRenderViewport(N.x,N.y,N.z,N.w),h.viewport(v.viewport.x,v.viewport.y,v.viewport.z,v.viewport.w));for(var I=0,D=0;D<v.drawArray.length;D++){var U=v.drawArray[D],F=this.allocTexUnit();this.texture.setTexture2D(U.texture,F),x.spriteTexture.setValue(F),u.drawElements(u.TRIANGLES,6*U.count,u.UNSIGNED_SHORT,2*I),I+=6*U.count,this._usedTextureUnits=0}}else h.viewport(N.x,N.y,N.z,N.w),this.draw(g,m,E);this._usedTextureUnits=0}}},u.prototype.setStates=function(i,r){var a=this.gl,o=this.state;i.transparent?o.setBlend(i.blending,i.blendEquation,i.blendSrc,i.blendDst,i.blendEquationAlpha,i.blendSrcAlpha,i.blendDstAlpha,i.premultipliedAlpha):o.setBlend(t.NONE),i.depthTest?(o.enable(a.DEPTH_TEST),o.depthMask(i.depthWrite)):o.disable(a.DEPTH_TEST),o.setCullFace(i.side===n.DOUBLE?e.NONE:e.BACK);var s=i.side===n.BACK;r&&(s=!s),o.setFlipSided(s),void 0!==i.lineWidth&&o.setLineWidth(i.lineWidth)},u.prototype.draw=function(e,t,n){var i=this.gl,r=null!==e.index,a=0,o=r?e.index.count:e.getAttribute("a_Position").count,s=n?n.start:0,u=n?n.count:1/0;a=Math.max(a,s),o=Math.min(o,u),r?i.drawElements(t.drawMode,o,i.UNSIGNED_SHORT,2*a):i.drawArrays(t.drawMode,a,o)},u.prototype.uploadSkeleton=function(e,t,n){if(t.skeleton&&t.skeleton.bones.length>0){var i=t.skeleton,r=this.gl;if(this.capabilities.maxVertexTextures>0&&this.capabilities.floatTextures){if(void 0===i.boneTexture){var a=Math.sqrt(4*i.bones.length);a=zen3d.nextPowerOfTwo(Math.ceil(a)),a=Math.max(4,a);var o=new Float32Array(a*a*4);o.set(i.boneMatrices);var s=new zen3d.TextureData(o,a,a);i.boneMatrices=o,i.boneTexture=s,i.boneTextureSize=a}var u=this.allocTexUnit();this.texture.setTexture2D(i.boneTexture,u),e.boneTexture&&e.boneTexture.setValue(u),e.boneTextureSize&&e.boneTextureSize.setValue(i.boneTextureSize)}else{var h=r.getUniformLocation(n,"boneMatrices");r.uniformMatrix4fv(h,!1,i.boneMatrices)}}};var h=[],d=[],l=[];u.prototype.uploadLights=function(e,t,n,i){var r=this.gl;t.ambientsNum>0&&e.u_AmbientLightColor.set(t.ambient);for(u=0;u<t.directsNum;u++){c=t.directional[u];e["u_Directional["+u+"].direction"].set(c.direction),e["u_Directional["+u+"].intensity"].setValue(1),e["u_Directional["+u+"].color"].set(c.color);p=c.shadow&&n;if(e["u_Directional["+u+"].shadow"].setValue(p?1:0),p){e["u_Directional["+u+"].shadowBias"].setValue(c.shadowBias),e["u_Directional["+u+"].shadowRadius"].setValue(c.shadowRadius),e["u_Directional["+u+"].shadowMapSize"].set(c.shadowMapSize);f=this.allocTexUnit();this.texture.setTexture2D(t.directionalShadowMap[u],f),h[u]=f}}if(h.length>0){var a=e["directionalShadowMap[0]"];r.uniform1iv(a.location,h),h.length=0;var o=e["directionalShadowMatrix[0]"];r.uniformMatrix4fv(o.location,!1,t.directionalShadowMatrix)}for(u=0;u<t.pointsNum;u++){c=t.point[u];e["u_Point["+u+"].position"].set(c.position),e["u_Point["+u+"].intensity"].setValue(1),e["u_Point["+u+"].color"].set(c.color),e["u_Point["+u+"].distance"].setValue(c.distance),e["u_Point["+u+"].decay"].setValue(c.decay);p=c.shadow&&n;if(e["u_Point["+u+"].shadow"].setValue(p?1:0),p){e["u_Point["+u+"].shadowBias"].setValue(c.shadowBias),e["u_Point["+u+"].shadowRadius"].setValue(c.shadowRadius),e["u_Point["+u+"].shadowMapSize"].set(c.shadowMapSize),e["u_Point["+u+"].shadowCameraNear"].setValue(c.shadowCameraNear),e["u_Point["+u+"].shadowCameraFar"].setValue(c.shadowCameraFar);f=this.allocTexUnit();this.texture.setTextureCube(t.pointShadowMap[u],f),d[u]=f}}if(d.length>0){var s=e["pointShadowMap[0]"];r.uniform1iv(s.location,d),d.length=0}for(var u=0;u<t.spotsNum;u++){var c=t.spot[u];e["u_Spot["+u+"].position"].set(c.position),e["u_Spot["+u+"].direction"].set(c.direction),e["u_Spot["+u+"].intensity"].setValue(1),e["u_Spot["+u+"].color"].set(c.color),e["u_Spot["+u+"].distance"].setValue(c.distance),e["u_Spot["+u+"].decay"].setValue(c.decay),e["u_Spot["+u+"].coneCos"].setValue(c.coneCos),e["u_Spot["+u+"].penumbraCos"].setValue(c.penumbraCos);var p=c.shadow&&n;if(e["u_Spot["+u+"].shadow"].setValue(p?1:0),p){e["u_Spot["+u+"].shadowBias"].setValue(c.shadowBias),e["u_Spot["+u+"].shadowRadius"].setValue(c.shadowRadius),e["u_Spot["+u+"].shadowMapSize"].set(c.shadowMapSize);var f=this.allocTexUnit();this.texture.setTexture2D(t.spotShadowMap[u],f),l[u]=f}}if(l.length>0){var _=e["spotShadowMap[0]"];r.uniform1iv(_.location,l),l.length=0;var v=e["spotShadowMatrix[0]"];r.uniformMatrix4fv(v.location,!1,t.spotShadowMatrix)}};var c=[],p=new zen3d.Vector3,f=new zen3d.Quaternion,_=new zen3d.Vector3;u.prototype.uploadSpriteUniform=function(e,t,n,i){this.gl,this.state,t.geometry;var r=t.material;e.projectionMatrix.setValue(n.projectionMatrix.elements);var a=0;i?(e.fogColor.setValue(i.color.r,i.color.g,i.color.b),i.fogType===zen3d.FOG_TYPE.NORMAL?(e.fogNear.setValue(i.near),e.fogFar.setValue(i.far),e.fogType.setValue(1),a=1):i.fogType===zen3d.FOG_TYPE.EXP2&&(e.fogDensity.setValue(i.density),e.fogType.setValue(2),a=2)):(e.fogType.setValue(0),a=0),e.alphaTest.setValue(0),e.viewMatrix.setValue(n.viewMatrix.elements),e.modelMatrix.setValue(t.worldMatrix.elements),t.worldMatrix.decompose(p,f,_),c[0]=_.x,c[1]=_.y;var o=0;i&&r.fog&&(o=a),e.fogType.setValue(o),r.diffuseMap,e.uvOffset.setValue(0,0),e.uvScale.setValue(1,1),e.opacity.setValue(r.opacity),e.color.setValue(r.diffuse.r,r.diffuse.g,r.diffuse.b),e.rotation.setValue(r.rotation),e.scale.setValue(c[0],c[1]);var s=this.allocTexUnit();this.texture.setTexture2D(r.diffuseMap,s),e.map.setValue(s)},u.prototype.uploadParticlesUniform=function(e,t,n){this.gl,this.state,t.geometry,t.material;e.uTime.setValue(t.time),e.uScale.setValue(1),e.u_Projection.setValue(n.projectionMatrix.elements),e.u_View.setValue(n.viewMatrix.elements),e.u_Model.setValue(t.worldMatrix.elements);i=this.allocTexUnit();this.texture.setTexture2D(t.particleNoiseTex,i),e.tNoise.setValue(i);var i=this.allocTexUnit();this.texture.setTexture2D(t.particleSpriteTex,i),e.tSprite.setValue(i)},u.prototype.allocTexUnit=function(){var e=this._usedTextureUnits;return e>=this.capabilities.maxTextures&&console.warn("trying to use "+e+" texture units while this GPU supports only "+this.capabilities.maxTextures),this._usedTextureUnits+=1,e},u.prototype.setupVertexAttributes=function(e,t){var n=this.gl,i=e.attributes,r=this.properties;for(var a in i){var o=i[a],s=t.getAttribute(a);if(s){var u=s.normalized,h=s.size;o.count!==h&&console.warn("WebGLCore: attribute "+a+" size not match! "+o.count+" : "+h);var d,l=(d=s.isInterleavedBufferAttribute?r.get(s.data):r.get(s)).buffer,c=d.type;o.format!==c&&console.warn("WebGLCore: attribute "+a+" type not match! "+o.format+" : "+c);var p=d.bytesPerElement;if(s.isInterleavedBufferAttribute){var f=s.data.stride,_=s.offset;n.bindBuffer(n.ARRAY_BUFFER,l),n.vertexAttribPointer(o.location,o.count,o.format,u,p*f,p*_),n.enableVertexAttribArray(o.location)}else n.bindBuffer(n.ARRAY_BUFFER,l),n.vertexAttribPointer(o.location,o.count,o.format,u,0,0),n.enableVertexAttribArray(o.location)}else console.warn("WebGLCore: geometry attribute "+a+" not found!")}if(t.index){var v=r.get(t.index);n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,v.buffer)}},zen3d.WebGLCore=u}(),zen3d.ShaderChunk={alphaTest_frag:"#ifdef ALPHATEST\n\tif ( outColor.a < ALPHATEST ) discard;\n#endif",ambientlight_pars_frag:"uniform vec4 u_AmbientLightColor;",aoMap_pars_frag:"#ifdef USE_AOMAP\n\tuniform sampler2D aoMap;\n\tuniform float aoMapIntensity;\n#endif",begin_frag:"vec4 outColor = vec4(u_Color, u_Opacity);",begin_vert:"vec3 transformed = vec3(a_Position);\n#if defined(USE_NORMAL) || defined(USE_ENV_MAP)\n    vec3 objectNormal = vec3(a_Normal);\n#endif",bsdfs:"\nvec4 BRDF_Diffuse_Lambert(vec4 diffuseColor) {\n    return RECIPROCAL_PI * diffuseColor;\n}\nvec4 F_Schlick( const in vec4 specularColor, const in float dotLH ) {\n\tfloat fresnel = pow( 1.0 - dotLH, 5.0 );\n\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nfloat G_BlinnPhong_Implicit( ) {\n\treturn 0.25;\n}\nvec4 BRDF_Specular_BlinnPhong(vec4 specularColor, vec3 N, vec3 L, vec3 V, float shininess) {\n    vec3 H = normalize(L + V);\n    float dotNH = saturate(dot(N, H));\n    float dotLH = saturate(dot(L, H));\n    vec4 F = F_Schlick(specularColor, dotLH);\n    float G = G_BlinnPhong_Implicit( );\n    float D = D_BlinnPhong(shininess, dotNH);\n    return F * G * D;\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n\tfloat a2 = pow2( alpha );\n\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\n}\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\treturn 1.0 / ( gl * gv );\n}\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\treturn 0.5 / max( gv + gl, EPSILON );\n}\nvec4 BRDF_Specular_GGX(vec4 specularColor, vec3 N, vec3 L, vec3 V, float roughness) {\n\tfloat alpha = pow2( roughness );\n\tvec3 H = normalize(L + V);\n\tfloat dotNL = saturate( dot(N, L) );\n\tfloat dotNV = saturate( dot(N, V) );\n\tfloat dotNH = saturate( dot(N, H) );\n\tfloat dotLH = saturate( dot(L, H) );\n\tvec4 F = F_Schlick( specularColor, dotLH );\n\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\tfloat D = D_GGX( alpha, dotNH );\n\treturn F * G * D;\n}\nvec4 BRDF_Specular_GGX_Environment( const in vec3 N, const in vec3 V, const in vec4 specularColor, const in float roughness ) {\n\tfloat dotNV = saturate( dot( N, V ) );\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n\tvec4 r = roughness * c0 + c1;\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n\tvec2 AB = vec2( -1.04, 1.04 ) * a004 + r.zw;\n\treturn specularColor * AB.x + AB.y;\n}\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\n\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\n}\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\n\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\n}",bumpMap_pars_frag:"#ifdef USE_BUMPMAP\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\tvec2 dHdxy_fwd(vec2 uv) {\n\t\tvec2 dSTdx = dFdx( uv );\n\t\tvec2 dSTdy = dFdy( uv );\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, uv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, uv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, uv + dSTdy ).x - Hll;\n\t\treturn vec2( dBx, dBy );\n\t}\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy) {\n\t\tvec3 vSigmaX = dFdx( surf_pos );\n\t\tvec3 vSigmaY = dFdy( surf_pos );\n\t\tvec3 vN = surf_norm;\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\t\tfloat fDet = dot( vSigmaX, R1 );\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\t}\n#endif\n",clippingPlanes_frag:"#ifdef NUM_CLIPPING_PLANES\n    vec4 plane;\n    for ( int i = 0; i < NUM_CLIPPING_PLANES; i ++ ) {\n        plane = clippingPlanes[ i ];\n        if ( dot( -v_modelPos, plane.xyz ) > plane.w ) discard;\n    }\n#endif",clippingPlanes_pars_frag:"#ifdef NUM_CLIPPING_PLANES\n    uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif",color_frag:"#ifdef USE_VCOLOR\n    outColor *= v_Color;\n#endif",color_pars_frag:"#ifdef USE_VCOLOR\n    varying vec4 v_Color;\n#endif",color_pars_vert:"#ifdef USE_VCOLOR\n    attribute vec4 a_Color;\n    varying vec4 v_Color;\n#endif",color_vert:"#ifdef USE_VCOLOR\n    v_Color = a_Color;\n#endif",common_frag:"uniform mat4 u_View;\nuniform float u_Opacity;\nuniform vec3 u_Color;\nuniform vec3 u_CameraPosition;",common_vert:"attribute vec3 a_Position;\nattribute vec3 a_Normal;\n#include <transpose>\n#include <inverse>\nuniform mat4 u_Projection;\nuniform mat4 u_View;\nuniform mat4 u_Model;\nuniform vec3 u_CameraPosition;",diffuseMap_frag:"#ifdef USE_DIFFUSE_MAP\n    vec4 texelColor = texture2D( texture, v_Uv );\n    texelColor = mapTexelToLinear( texelColor );\n    outColor *= texelColor;\n#endif",diffuseMap_pars_frag:"#ifdef USE_DIFFUSE_MAP\n    uniform sampler2D texture;\n#endif",directlight_pars_frag:"struct DirectLight\n{\n    vec3 direction;\n    vec4 color;\n    float intensity;\n    int shadow;\n    float shadowBias;\n    float shadowRadius;\n    vec2 shadowMapSize;\n};\nuniform DirectLight u_Directional[USE_DIRECT_LIGHT];",emissiveMap_frag:"#ifdef USE_EMISSIVEMAP\n\tvec4 emissiveColor = texture2D(emissiveMap, v_Uv);\n\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\n\ttotalEmissiveRadiance *= emissiveColor.rgb;\n#endif",emissiveMap_pars_frag:"#ifdef USE_EMISSIVEMAP\n\tuniform sampler2D emissiveMap;\n#endif",encodings_frag:"gl_FragColor = linearToOutputTexel( gl_FragColor );",encodings_pars_frag:"\nvec4 LinearToLinear( in vec4 value ) {\n\treturn value;\n}\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.xyz, vec3( gammaFactor ) ), value.w );\n}\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.xyz, vec3( 1.0 / gammaFactor ) ), value.w );\n}\nvec4 sRGBToLinear( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.w );\n}\nvec4 LinearTosRGB( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.w );\n}\nvec4 RGBEToLinear( in vec4 value ) {\n\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\n}\nvec4 LinearToRGBE( in vec4 value ) {\n\tfloat maxComponent = max( max( value.r, value.g ), value.b );\n\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\n\treturn vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\n}\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.xyz * value.w * maxRange, 1.0 );\n}\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.x, max( value.g, value.b ) );\n\tfloat M      = clamp( maxRGB / maxRange, 0.0, 1.0 );\n\tM            = ceil( M * 255.0 ) / 255.0;\n\treturn vec4( value.rgb / ( M * maxRange ), M );\n}\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\n}\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.x, max( value.g, value.b ) );\n\tfloat D      = max( maxRange / maxRGB, 1.0 );\n\tD            = min( floor( D ) / 255.0, 1.0 );\n\treturn vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\n}\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\nvec4 LinearToLogLuv( in vec4 value )  {\n\tvec3 Xp_Y_XYZp = value.rgb * cLogLuvM;\n\tXp_Y_XYZp = max(Xp_Y_XYZp, vec3(1e-6, 1e-6, 1e-6));\n\tvec4 vResult;\n\tvResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\n\tfloat Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\n\tvResult.w = fract(Le);\n\tvResult.z = (Le - (floor(vResult.w*255.0))/255.0)/255.0;\n\treturn vResult;\n}\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\nvec4 LogLuvToLinear( in vec4 value ) {\n\tfloat Le = value.z * 255.0 + value.w;\n\tvec3 Xp_Y_XYZp;\n\tXp_Y_XYZp.y = exp2((Le - 127.0) / 2.0);\n\tXp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\n\tXp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\n\tvec3 vRGB = Xp_Y_XYZp.rgb * cLogLuvInverseM;\n\treturn vec4( max(vRGB, 0.0), 1.0 );\n}\n",end_frag:"gl_FragColor = outColor;",envMap_frag:"#ifdef USE_ENV_MAP\n    vec3 envDir;\n    #if defined(USE_NORMAL_MAP) || defined(USE_BUMPMAP)\n        envDir = reflect(normalize(v_worldPos - u_CameraPosition), N);\n    #else\n        envDir = v_EnvPos;\n    #endif\n    vec4 envColor = textureCube(envMap, envDir);\n    envColor = envMapTexelToLinear( envColor );\n    #ifdef ENVMAP_BLENDING_MULTIPLY\n\t\toutColor = mix(outColor, envColor * outColor, u_EnvMap_Intensity);\n\t#elif defined( ENVMAP_BLENDING_MIX )\n\t\toutColor = mix(outColor, envColor, u_EnvMap_Intensity);\n\t#elif defined( ENVMAP_BLENDING_ADD )\n\t\toutColor += envColor * u_EnvMap_Intensity;\n\t#endif\n#endif",envMap_pars_frag:"#ifdef USE_ENV_MAP\n    #if defined(USE_NORMAL_MAP) || defined(USE_BUMPMAP)\n        varying vec3 v_worldPos;\n    #else\n        varying vec3 v_EnvPos;\n    #endif\n    uniform samplerCube envMap;\n    uniform float u_EnvMap_Intensity;\n#endif",envMap_pars_vert:"#ifdef USE_ENV_MAP\n    #if defined(USE_NORMAL_MAP) || defined(USE_BUMPMAP)\n        varying vec3 v_worldPos;\n    #else\n        varying vec3 v_EnvPos;\n    #endif\n#endif",envMap_vert:"#ifdef USE_ENV_MAP\n    #if defined(USE_NORMAL_MAP) || defined(USE_BUMPMAP)\n        v_worldPos = (u_Model * vec4(transformed, 1.0)).xyz;\n    #else\n        v_EnvPos = reflect(normalize((u_Model * vec4(transformed, 1.0)).xyz - u_CameraPosition), (transpose(inverse(u_Model)) * vec4(objectNormal, 1.0)).xyz);\n    #endif\n#endif",fog_frag:"#ifdef USE_FOG\n    float depth = gl_FragCoord.z / gl_FragCoord.w;\n    #ifdef USE_EXP2_FOG\n        float fogFactor = whiteCompliment( exp2( - u_FogDensity * u_FogDensity * depth * depth * LOG2 ) );\n    #else\n        float fogFactor = smoothstep( u_FogNear, u_FogFar, depth );\n    #endif\n    gl_FragColor.rgb = mix( gl_FragColor.rgb, u_FogColor, fogFactor );\n#endif",fog_pars_frag:"#ifdef USE_FOG\n    uniform vec3 u_FogColor;\n    #ifdef USE_EXP2_FOG\n        uniform float u_FogDensity;\n    #else\n        uniform float u_FogNear;\n        uniform float u_FogFar;\n    #endif\n#endif",inverse:"mat4 inverse(mat4 m) {\n    float\n    a00 = m[0][0], a01 = m[0][1], a02 = m[0][2], a03 = m[0][3],\n    a10 = m[1][0], a11 = m[1][1], a12 = m[1][2], a13 = m[1][3],\n    a20 = m[2][0], a21 = m[2][1], a22 = m[2][2], a23 = m[2][3],\n    a30 = m[3][0], a31 = m[3][1], a32 = m[3][2], a33 = m[3][3],\n    b00 = a00 * a11 - a01 * a10,\n    b01 = a00 * a12 - a02 * a10,\n    b02 = a00 * a13 - a03 * a10,\n    b03 = a01 * a12 - a02 * a11,\n    b04 = a01 * a13 - a03 * a11,\n    b05 = a02 * a13 - a03 * a12,\n    b06 = a20 * a31 - a21 * a30,\n    b07 = a20 * a32 - a22 * a30,\n    b08 = a20 * a33 - a23 * a30,\n    b09 = a21 * a32 - a22 * a31,\n    b10 = a21 * a33 - a23 * a31,\n    b11 = a22 * a33 - a23 * a32,\n    det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n    return mat4(\n        a11 * b11 - a12 * b10 + a13 * b09,\n        a02 * b10 - a01 * b11 - a03 * b09,\n        a31 * b05 - a32 * b04 + a33 * b03,\n        a22 * b04 - a21 * b05 - a23 * b03,\n        a12 * b08 - a10 * b11 - a13 * b07,\n        a00 * b11 - a02 * b08 + a03 * b07,\n        a32 * b02 - a30 * b05 - a33 * b01,\n        a20 * b05 - a22 * b02 + a23 * b01,\n        a10 * b10 - a11 * b08 + a13 * b06,\n        a01 * b08 - a00 * b10 - a03 * b06,\n        a30 * b04 - a31 * b02 + a33 * b00,\n        a21 * b02 - a20 * b04 - a23 * b00,\n        a11 * b07 - a10 * b09 - a12 * b06,\n        a00 * b09 - a01 * b07 + a02 * b06,\n        a31 * b01 - a30 * b03 - a32 * b00,\n        a20 * b03 - a21 * b01 + a22 * b00) / det;\n}",light_frag:"#ifdef USE_LIGHT\n    vec4 light;\n    vec3 L;\n    vec4 totalReflect = vec4(0., 0., 0., 0.);    vec4 indirectIrradiance = vec4(0., 0., 0., 0.);    vec4 indirectRadiance = vec4(0., 0., 0., 0.);\n    #ifdef USE_PBR\n        vec4 diffuseColor = outColor.xyzw * (1.0 - metalnessFactor);\n        vec4 specularColor = mix(vec4(0.04), outColor.xyzw, metalnessFactor);\n        float roughness = clamp(roughnessFactor, 0.04, 1.0);\n    #else\n        vec4 diffuseColor = outColor.xyzw;\n        #ifdef USE_PHONG\n            vec4 specularColor = u_SpecularColor;\n            float shininess = u_Specular;\n        #endif\n    #endif\n    #ifdef USE_AMBIENT_LIGHT\n        #ifdef USE_PBR\n            indirectIrradiance += PI * diffuseColor * u_AmbientLightColor;\n        #else\n            indirectIrradiance += diffuseColor * u_AmbientLightColor;\n        #endif\n    #endif\n    #ifdef USE_PBR\n        #ifdef USE_ENV_MAP\n    \t\tvec3 envDir;\n    \t    #if defined(USE_NORMAL_MAP) || defined(USE_BUMPMAP)\n    \t        envDir = reflect(normalize(v_worldPos - u_CameraPosition), N);\n    \t    #else\n    \t        envDir = v_EnvPos;\n    \t    #endif\n            indirectIrradiance += getLightProbeIndirectIrradiance(8, envDir);\n            indirectRadiance += getLightProbeIndirectRadiance(GGXRoughnessToBlinnExponent(roughness), 8, envDir);\n    \t#endif\n    #endif\n    #if (defined(USE_PHONG) || defined(USE_PBR))\n        vec3 V = normalize( u_CameraPosition - v_modelPos );\n    #endif\n    #ifdef USE_DIRECT_LIGHT\n    for(int i = 0; i < USE_DIRECT_LIGHT; i++) {\n        L = -u_Directional[i].direction;\n        light = u_Directional[i].color * u_Directional[i].intensity;\n        L = normalize(L);\n        float dotNL = saturate( dot(N, L) );\n        vec4 irradiance = light * dotNL;\n        #ifdef USE_SHADOW\n            irradiance *= bool( u_Directional[i].shadow ) ? getShadow( directionalShadowMap[ i ], vDirectionalShadowCoord[ i ], u_Directional[i].shadowBias, u_Directional[i].shadowRadius, u_Directional[i].shadowMapSize ) : 1.0;\n        #endif\n        #ifdef USE_PBR\n            irradiance *= PI;\n        #endif\n        vec4 reflectLight = irradiance * BRDF_Diffuse_Lambert(diffuseColor);\n        #ifdef USE_PHONG\n            reflectLight += irradiance * BRDF_Specular_BlinnPhong(specularColor, N, L, V, shininess) * specularStrength;\n        #endif\n        #ifdef USE_PBR\n            reflectLight += irradiance * BRDF_Specular_GGX(specularColor, N, L, V, roughness) * specularStrength;\n        #endif\n        totalReflect += reflectLight;\n    }\n    #endif\n    #ifdef USE_POINT_LIGHT\n    for(int i = 0; i < USE_POINT_LIGHT; i++) {\n        L = u_Point[i].position - v_modelPos;\n        float dist = pow(clamp(1. - length(L) / u_Point[i].distance, 0.0, 1.0), u_Point[i].decay);\n        light = u_Point[i].color * u_Point[i].intensity * dist;\n        L = normalize(L);\n        float dotNL = saturate( dot(N, L) );\n        vec4 irradiance = light * dotNL;\n        #ifdef USE_PBR\n            irradiance *= PI;\n        #endif\n        #ifdef USE_SHADOW\n            vec3 worldV = v_modelPos - u_Point[i].position;\n            irradiance *= bool( u_Point[i].shadow ) ? getPointShadow( pointShadowMap[ i ], worldV, u_Point[i].shadowBias, u_Point[i].shadowRadius, u_Point[i].shadowMapSize, u_Point[i].shadowCameraNear, u_Point[i].shadowCameraFar ) : 1.0;\n        #endif\n        vec4 reflectLight = irradiance * BRDF_Diffuse_Lambert(diffuseColor);\n        #ifdef USE_PHONG\n            reflectLight += irradiance * BRDF_Specular_BlinnPhong(specularColor, N, L, V, shininess) * specularStrength;\n        #endif\n        #ifdef USE_PBR\n            reflectLight += irradiance * BRDF_Specular_GGX(specularColor, N, L, V, roughness) * specularStrength;\n        #endif\n        totalReflect += reflectLight;\n    }\n    #endif\n    #ifdef USE_SPOT_LIGHT\n    for(int i = 0; i < USE_SPOT_LIGHT; i++) {\n        L = u_Spot[i].position - v_modelPos;\n        float lightDistance = length(L);\n        L = normalize(L);\n        float angleCos = dot( L, -normalize(u_Spot[i].direction) );\n        if( all( bvec2(angleCos > u_Spot[i].coneCos, lightDistance < u_Spot[i].distance) ) ) {\n            float spotEffect = smoothstep( u_Spot[i].coneCos, u_Spot[i].penumbraCos, angleCos );\n            float dist = pow(clamp(1. - lightDistance / u_Spot[i].distance, 0.0, 1.0), u_Spot[i].decay);\n            light = u_Spot[i].color * u_Spot[i].intensity * dist * spotEffect;\n            float dotNL = saturate( dot(N, L) );\n            vec4 irradiance = light * dotNL;\n            #ifdef USE_PBR\n                irradiance *= PI;\n            #endif\n            #ifdef USE_SHADOW\n                irradiance *= bool( u_Spot[i].shadow ) ? getShadow( spotShadowMap[ i ], vSpotShadowCoord[ i ], u_Spot[i].shadowBias, u_Spot[i].shadowRadius, u_Spot[i].shadowMapSize ) : 1.0;\n            #endif\n            vec4 reflectLight = irradiance * BRDF_Diffuse_Lambert(diffuseColor);\n            #ifdef USE_PHONG\n                reflectLight += irradiance * BRDF_Specular_BlinnPhong(specularColor, N, L, V, shininess) * specularStrength;\n            #endif\n            #ifdef USE_PBR\n                reflectLight += irradiance * BRDF_Specular_GGX(specularColor, N, L, V, roughness) * specularStrength;\n            #endif\n            totalReflect += reflectLight;\n        }\n    }\n    #endif\n    vec4 indirectDiffuse = indirectIrradiance * BRDF_Diffuse_Lambert(diffuseColor);\n    vec4 indirectSpecular = vec4(0., 0., 0., 0.);\n    #if defined( USE_ENV_MAP ) && defined( USE_PBR )\n        indirectSpecular += indirectRadiance * BRDF_Specular_GGX_Environment(N, V, specularColor, roughness) * specularStrength;\n    #endif\n    #ifdef USE_AOMAP\n    \tfloat ambientOcclusion = ( texture2D( aoMap, v_Uv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\n    \tindirectDiffuse *= ambientOcclusion;\n    \t#if defined( USE_ENV_MAP ) && defined( USE_PBR )\n    \t\tfloat dotNV = saturate( dot( N, V ) );\n    \t\tindirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, GGXRoughnessToBlinnExponent(roughness) );\n    \t#endif\n    #endif\n    outColor.xyz = totalReflect.xyz + indirectDiffuse.xyz + indirectSpecular.xyz;\n#endif",light_pars_frag:"#ifdef USE_AMBIENT_LIGHT\n    #include <ambientlight_pars_frag>\n#endif\n#ifdef USE_DIRECT_LIGHT\n    #include <directlight_pars_frag>\n#endif\n#ifdef USE_POINT_LIGHT\n    #include <pointlight_pars_frag>\n#endif\n#ifdef USE_SPOT_LIGHT\n    #include <spotlight_pars_frag>\n#endif\n#if defined(USE_PBR) && defined(USE_ENV_MAP)\n    vec4 getLightProbeIndirectIrradiance(const in int maxMIPLevel, const in vec3 envDir) {\n    \t#ifdef TEXTURE_LOD_EXT\n    \t\tvec4 envMapColor = textureCubeLodEXT( envMap, envDir, float( maxMIPLevel ) );\n    \t#else\n    \t\tvec4 envMapColor = textureCube( envMap, envDir, float( maxMIPLevel ) );\n    \t#endif\n        envMapColor = envMapTexelToLinear( envMapColor );\n        return PI * envMapColor * u_EnvMap_Intensity;\n    }\n    float getSpecularMIPLevel( const in float blinnShininessExponent, const in int maxMIPLevel ) {\n    \tfloat maxMIPLevelScalar = float( maxMIPLevel );\n    \tfloat desiredMIPLevel = maxMIPLevelScalar - 0.79248 - 0.5 * log2( pow2( blinnShininessExponent ) + 1.0 );\n    \treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\n    }\n    vec4 getLightProbeIndirectRadiance(const in float blinnShininessExponent, const in int maxMIPLevel, const in vec3 envDir) {\n        float specularMIPLevel = getSpecularMIPLevel( blinnShininessExponent, maxMIPLevel );\n        #ifdef TEXTURE_LOD_EXT\n    \t\tvec4 envMapColor = textureCubeLodEXT( envMap, envDir, specularMIPLevel );\n    \t#else\n    \t\tvec4 envMapColor = textureCube( envMap, envDir, specularMIPLevel );\n    \t#endif\n        envMapColor = envMapTexelToLinear( envMapColor );\n        return envMapColor * u_EnvMap_Intensity;\n    }\n    float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n    \treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n    }\n#endif",normalMap_pars_frag:"#include <tbn>\n#include <tsn>\nuniform sampler2D normalMap;",normal_frag:"#ifdef USE_NORMAL\n    #ifdef DOUBLE_SIDED\n    \tfloat flipNormal = ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n    #else\n    \tfloat flipNormal = 1.0;\n    #endif\n    #ifdef FLAT_SHADED\n    \tvec3 fdx = vec3( dFdx( v_modelPos.x ), dFdx( v_modelPos.y ), dFdx( v_modelPos.z ) );\n    \tvec3 fdy = vec3( dFdy( v_modelPos.x ), dFdy( v_modelPos.y ), dFdy( v_modelPos.z ) );\n    \tvec3 N = normalize( cross( fdx, fdy ) );\n    #else\n        vec3 N = normalize(v_Normal) * flipNormal;\n    #endif\n    #ifdef USE_NORMAL_MAP\n        vec3 normalMapColor = texture2D(normalMap, v_Uv).rgb;\n        mat3 tspace = tsn(N, -v_modelPos, vec2(v_Uv.x, 1.0 - v_Uv.y));\n        N = normalize(tspace * (normalMapColor * 2.0 - 1.0));\n    #elif defined(USE_BUMPMAP)\n        N = perturbNormalArb(-v_modelPos, N, dHdxy_fwd(v_Uv));\n    #endif\n#endif",normal_pars_frag:"#ifdef USE_NORMAL\n    varying vec3 v_Normal;\n#endif",normal_pars_vert:"#ifdef USE_NORMAL\n    varying vec3 v_Normal;\n#endif",normal_vert:"#ifdef USE_NORMAL\n    v_Normal = (transpose(inverse(u_Model)) * vec4(objectNormal, 1.0)).xyz;\n    #ifdef FLIP_SIDED\n    \tv_Normal = - v_Normal;\n    #endif\n#endif",packing:"const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256.,  256. );\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\nconst float ShiftRight8 = 1. / 256.;\nvec4 packDepthToRGBA( const in float v ) {\n    vec4 r = vec4( fract( v * PackFactors ), v );\n    r.yzw -= r.xyz * ShiftRight8;    return r * PackUpscale;\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n    return dot( v, UnpackFactors );\n}",pointlight_pars_frag:"struct PointLight\n{\n    vec3 position;\n    vec4 color;\n    float intensity;\n    float distance;\n    float decay;\n    int shadow;\n    float shadowBias;\n    float shadowRadius;\n    vec2 shadowMapSize;\n    float shadowCameraNear;\n    float shadowCameraFar;\n};\nuniform PointLight u_Point[USE_POINT_LIGHT];",premultipliedAlpha_frag:"#ifdef USE_PREMULTIPLIED_ALPHA\n    gl_FragColor.rgb = gl_FragColor.rgb * gl_FragColor.a;\n#endif",pvm_vert:"gl_Position = u_Projection * u_View * u_Model * vec4(transformed, 1.0);",shadowMap_frag:"#ifdef USE_SHADOW\n#endif",shadowMap_pars_frag:"#ifdef USE_SHADOW\n    #include <packing>\n    #ifdef USE_DIRECT_LIGHT\n        uniform sampler2D directionalShadowMap[ USE_DIRECT_LIGHT ];\n        varying vec4 vDirectionalShadowCoord[ USE_DIRECT_LIGHT ];\n    #endif\n    #ifdef USE_POINT_LIGHT\n        uniform samplerCube pointShadowMap[ USE_POINT_LIGHT ];\n    #endif\n    #ifdef USE_SPOT_LIGHT\n        uniform sampler2D spotShadowMap[ USE_SPOT_LIGHT ];\n        varying vec4 vSpotShadowCoord[ USE_SPOT_LIGHT ];\n    #endif\n    float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n        return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n    }\n    float textureCubeCompare( samplerCube depths, vec3 uv, float compare ) {\n        return step( compare, unpackRGBAToDepth( textureCube( depths, uv ) ) );\n    }\n    float getShadow( sampler2D shadowMap, vec4 shadowCoord, float shadowBias, float shadowRadius, vec2 shadowMapSize ) {\n        shadowCoord.xyz /= shadowCoord.w;\n        float depth = shadowCoord.z + shadowBias;\n        bvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n        bool inFrustum = all( inFrustumVec );\n        bvec2 frustumTestVec = bvec2( inFrustum, depth <= 1.0 );\n        bool frustumTest = all( frustumTestVec );\n        if ( frustumTest ) {\n            #ifdef USE_PCF_SOFT_SHADOW\n                float texelSize = shadowRadius / shadowMapSize.x;\n                vec2 poissonDisk[4];\n                poissonDisk[0] = vec2(-0.94201624, -0.39906216);\n                poissonDisk[1] = vec2(0.94558609, -0.76890725);\n                poissonDisk[2] = vec2(-0.094184101, -0.92938870);\n                poissonDisk[3] = vec2(0.34495938, 0.29387760);\n                return texture2DCompare( shadowMap, shadowCoord.xy + poissonDisk[0] * texelSize, depth ) * 0.25 +\n                    texture2DCompare( shadowMap, shadowCoord.xy + poissonDisk[1] * texelSize, depth ) * 0.25 +\n                    texture2DCompare( shadowMap, shadowCoord.xy + poissonDisk[2] * texelSize, depth ) * 0.25 +\n                    texture2DCompare( shadowMap, shadowCoord.xy + poissonDisk[3] * texelSize, depth ) * 0.25;\n            #else\n                return texture2DCompare( shadowMap, shadowCoord.xy, depth );\n            #endif\n        }\n        return 1.0;\n    }\n    float getPointShadow( samplerCube shadowMap, vec3 V, float shadowBias, float shadowRadius, vec2 shadowMapSize, float shadowCameraNear, float shadowCameraFar ) {\n\t\tfloat depth = ( length( V ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\t\tdepth += shadowBias;\n        #ifdef USE_PCF_SOFT_SHADOW\n            float texelSize = shadowRadius / shadowMapSize.x;\n            vec3 poissonDisk[4];\n    \t\tpoissonDisk[0] = vec3(-1.0, 1.0, -1.0);\n    \t\tpoissonDisk[1] = vec3(1.0, -1.0, -1.0);\n    \t\tpoissonDisk[2] = vec3(-1.0, -1.0, -1.0);\n    \t\tpoissonDisk[3] = vec3(1.0, -1.0, 1.0);\n            return textureCubeCompare( shadowMap, normalize(V) + poissonDisk[0] * texelSize, depth ) * 0.25 +\n                textureCubeCompare( shadowMap, normalize(V) + poissonDisk[1] * texelSize, depth ) * 0.25 +\n                textureCubeCompare( shadowMap, normalize(V) + poissonDisk[2] * texelSize, depth ) * 0.25 +\n                textureCubeCompare( shadowMap, normalize(V) + poissonDisk[3] * texelSize, depth ) * 0.25;\n        #else\n            return textureCubeCompare( shadowMap, normalize(V), depth);\n        #endif\n    }\n#endif",shadowMap_pars_vert:"#ifdef USE_SHADOW\n    #ifdef USE_DIRECT_LIGHT\n        uniform mat4 directionalShadowMatrix[ USE_DIRECT_LIGHT ];\n        varying vec4 vDirectionalShadowCoord[ USE_DIRECT_LIGHT ];\n    #endif\n    #ifdef USE_POINT_LIGHT\n    #endif\n    #ifdef USE_SPOT_LIGHT\n        uniform mat4 spotShadowMatrix[ USE_SPOT_LIGHT ];\n        varying vec4 vSpotShadowCoord[ USE_SPOT_LIGHT ];\n    #endif\n#endif",shadowMap_vert:"#ifdef USE_SHADOW\n    vec4 worldPosition = u_Model * vec4(transformed, 1.0);\n    #ifdef USE_DIRECT_LIGHT\n        for ( int i = 0; i < USE_DIRECT_LIGHT; i ++ ) {\n            vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * worldPosition;\n        }\n    #endif\n    #ifdef USE_POINT_LIGHT\n    #endif\n    #ifdef USE_SPOT_LIGHT\n        for ( int i = 0; i < USE_SPOT_LIGHT; i ++ ) {\n            vSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * worldPosition;\n        }\n    #endif\n#endif",skinning_pars_vert:"#ifdef USE_SKINNING\n    attribute vec4 skinIndex;\n\tattribute vec4 skinWeight;\n    #ifdef BONE_TEXTURE\n        uniform sampler2D boneTexture;\n        uniform int boneTextureSize;\n        mat4 getBoneMatrix( const in float i ) {\n            float j = i * 4.0;\n            float x = mod( j, float( boneTextureSize ) );\n            float y = floor( j / float( boneTextureSize ) );\n            float dx = 1.0 / float( boneTextureSize );\n            float dy = 1.0 / float( boneTextureSize );\n            y = dy * ( y + 0.5 );\n            vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n            vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n            vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n            vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n            mat4 bone = mat4( v1, v2, v3, v4 );\n            return bone;\n        }\n    #else\n        uniform mat4 boneMatrices[MAX_BONES];\n        mat4 getBoneMatrix(const in float i) {\n            mat4 bone = boneMatrices[int(i)];\n            return bone;\n        }\n    #endif\n#endif",skinning_vert:"#ifdef USE_SKINNING\n    mat4 boneMatX = getBoneMatrix( skinIndex.x );\n    mat4 boneMatY = getBoneMatrix( skinIndex.y );\n    mat4 boneMatZ = getBoneMatrix( skinIndex.z );\n    mat4 boneMatW = getBoneMatrix( skinIndex.w );\n    vec4 skinVertex = vec4(transformed, 1.0);\n    vec4 skinned = vec4( 0.0 );\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n    transformed = vec3(skinned.xyz / skinned.w);\n    #if defined(USE_NORMAL) || defined(USE_ENV_MAP)\n        mat4 skinMatrix = mat4( 0.0 );\n        skinMatrix += skinWeight.x * boneMatX;\n        skinMatrix += skinWeight.y * boneMatY;\n        skinMatrix += skinWeight.z * boneMatZ;\n        skinMatrix += skinWeight.w * boneMatW;\n        objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n    #endif\n#endif",specularMap_frag:"float specularStrength;\n#ifdef USE_SPECULARMAP\n\tvec4 texelSpecular = texture2D( specularMap, v_Uv );\n\tspecularStrength = texelSpecular.r;\n#else\n\tspecularStrength = 1.0;\n#endif",specularMap_pars_frag:"#ifdef USE_SPECULARMAP\n\tuniform sampler2D specularMap;\n#endif",spotlight_pars_frag:"struct SpotLight\n{\n    vec3 position;\n    vec4 color;\n    float intensity;\n    float distance;\n    float decay;\n    float coneCos;\n    float penumbraCos;\n    vec3 direction;\n    int shadow;\n    float shadowBias;\n    float shadowRadius;\n    vec2 shadowMapSize;\n};\nuniform SpotLight u_Spot[USE_SPOT_LIGHT];",tbn:"mat3 tbn(vec3 N, vec3 p, vec2 uv) {\n    vec3 dp1 = dFdx(p.xyz);\n    vec3 dp2 = dFdy(p.xyz);\n    vec2 duv1 = dFdx(uv.st);\n    vec2 duv2 = dFdy(uv.st);\n    vec3 dp2perp = cross(dp2, N);\n    vec3 dp1perp = cross(N, dp1);\n    vec3 T = dp2perp * duv1.x + dp1perp * duv2.x;\n    vec3 B = dp2perp * duv1.y + dp1perp * duv2.y;\n    float invmax = 1.0 / sqrt(max(dot(T,T), dot(B,B)));\n    return mat3(T * invmax, B * invmax, N);\n}",transpose:"mat4 transpose(mat4 inMatrix) {\n    vec4 i0 = inMatrix[0];\n    vec4 i1 = inMatrix[1];\n    vec4 i2 = inMatrix[2];\n    vec4 i3 = inMatrix[3];\n    mat4 outMatrix = mat4(\n        vec4(i0.x, i1.x, i2.x, i3.x),\n        vec4(i0.y, i1.y, i2.y, i3.y),\n        vec4(i0.z, i1.z, i2.z, i3.z),\n        vec4(i0.w, i1.w, i2.w, i3.w)\n    );\n    return outMatrix;\n}",tsn:"mat3 tsn(vec3 N, vec3 V, vec2 uv) {\n    vec3 q0 = dFdx( V.xyz );\n    vec3 q1 = dFdy( V.xyz );\n    vec2 st0 = dFdx( uv.st );\n    vec2 st1 = dFdy( uv.st );\n    vec3 S = normalize( q0 * st1.t - q1 * st0.t );\n    vec3 T = normalize( -q0 * st1.s + q1 * st0.s );\n    mat3 tsn = mat3( S, T, N );\n    return tsn;\n}",uv_pars_frag:"#if defined(USE_DIFFUSE_MAP) || defined(USE_NORMAL_MAP) || defined(USE_BUMPMAP) || defined(USE_SPECULARMAP) || defined(USE_EMISSIVEMAP) || defined(USE_ROUGHNESSMAP) || defined(USE_METALNESSMAP)\n    varying vec2 v_Uv;\n#endif\n#ifdef USE_AOMAP\n    varying vec2 v_Uv2;\n#endif",uv_pars_vert:"#if defined(USE_DIFFUSE_MAP) || defined(USE_NORMAL_MAP) || defined(USE_BUMPMAP) || defined(USE_SPECULARMAP) || defined(USE_EMISSIVEMAP) || defined(USE_ROUGHNESSMAP) || defined(USE_METALNESSMAP)\n    attribute vec2 a_Uv;\n    varying vec2 v_Uv;\n#endif\n#ifdef USE_AOMAP\n    attribute vec2 a_Uv2;\n    varying vec2 v_Uv2;\n#endif\n",uv_vert:"#if defined(USE_DIFFUSE_MAP) || defined(USE_NORMAL_MAP) || defined(USE_BUMPMAP) || defined(USE_SPECULARMAP) || defined(USE_EMISSIVEMAP) || defined(USE_ROUGHNESSMAP) || defined(USE_METALNESSMAP)\n    v_Uv = a_Uv;\n#endif\n#ifdef USE_AOMAP\n    v_Uv2 = a_Uv2;\n#endif",viewModelPos_pars_frag:"#if defined(USE_POINT_LIGHT) || defined(USE_SPOT_LIGHT) || defined(USE_NORMAL_MAP) || defined(USE_BUMPMAP) || defined(FLAT_SHADED) || defined(USE_PHONG) || defined(USE_PBR) || defined(NUM_CLIPPING_PLANES) \n    varying vec3 v_modelPos;\n#endif",viewModelPos_pars_vert:"#if defined(USE_POINT_LIGHT) || defined(USE_SPOT_LIGHT) || defined(USE_NORMAL_MAP) || defined(USE_BUMPMAP) || defined(FLAT_SHADED) || defined(USE_PHONG) || defined(USE_PBR)|| defined(NUM_CLIPPING_PLANES)\n    varying vec3 v_modelPos;\n#endif",viewModelPos_vert:"#if defined(USE_POINT_LIGHT) || defined(USE_SPOT_LIGHT) || defined(USE_NORMAL_MAP) || defined(USE_BUMPMAP) || defined(FLAT_SHADED) || defined(USE_PHONG) || defined(USE_PBR) || defined(NUM_CLIPPING_PLANES)\n    v_modelPos = (u_Model * vec4(transformed, 1.0)).xyz;\n#endif"},zen3d.ShaderLib={basic_frag:"#include <common_frag>\n#include <uv_pars_frag>\n#include <color_pars_frag>\n#include <diffuseMap_pars_frag>\n#include <envMap_pars_frag>\n#include <aoMap_pars_frag>\n#include <fog_pars_frag>\nvoid main() {\n    #include <begin_frag>\n    #include <color_frag>\n    #include <diffuseMap_frag>\n    #include <alphaTest_frag>\n    #include <envMap_frag>\n    #include <end_frag>\n    #include <encodings_frag>\n    #include <premultipliedAlpha_frag>\n    #include <fog_frag>\n}",basic_vert:"#include <common_vert>\n#include <uv_pars_vert>\n#include <color_pars_vert>\n#include <envMap_pars_vert>\n#include <skinning_pars_vert>\nvoid main() {\n    #include <begin_vert>\n    #include <skinning_vert>\n    #include <pvm_vert>\n    #include <uv_vert>\n    #include <color_vert>\n    #include <envMap_vert>\n}",canvas2d_frag:"#include <common_frag>\nvarying vec2 v_Uv;\nuniform sampler2D spriteTexture;\nvoid main() {\n    #include <begin_frag>\n    outColor *= texture2D(spriteTexture, v_Uv);\n    #include <end_frag>\n    #include <premultipliedAlpha_frag>\n}",canvas2d_vert:"#include <common_vert>\nattribute vec2 a_Uv;\nvarying vec2 v_Uv;\nvoid main() {\n    #include <begin_vert>\n    #include <pvm_vert>\n    v_Uv = a_Uv;\n}",cube_frag:"#include <common_frag>\nuniform samplerCube cubeMap;\nvarying vec3 v_ModelPos;\nvoid main() {\n    #include <begin_frag>\n    outColor *= textureCube(cubeMap, v_ModelPos);\n    #include <end_frag>\n}",cube_vert:"#include <common_vert>\nvarying vec3 v_ModelPos;\nvoid main() {\n    #include <begin_vert>\n    #include <pvm_vert>\n    v_ModelPos = (u_Model * vec4(transformed, 1.0)).xyz;\n}",depth_frag:"#include <common_frag>\n#include <diffuseMap_pars_frag>\n#include <uv_pars_frag>\n#include <packing>\nvoid main() {\n    #if defined(USE_DIFFUSE_MAP) && defined(ALPHATEST)\n        vec4 texelColor = texture2D( texture, v_Uv );\n        float alpha = texelColor.a * u_Opacity;\n        if(alpha < ALPHATEST) discard;\n    #endif\n    \n    #ifdef DEPTH_PACKING_RGBA\n        gl_FragColor = packDepthToRGBA(gl_FragCoord.z);\n    #else\n        gl_FragColor = vec4( vec3( 1.0 - gl_FragCoord.z ), u_Opacity );\n    #endif\n}",depth_vert:"#include <common_vert>\n#include <skinning_pars_vert>\n#include <uv_pars_vert>\nvoid main() {\n    #include <uv_vert>\n    #include <begin_vert>\n    #include <skinning_vert>\n    #include <pvm_vert>\n}",distance_frag:"#include <common_frag>\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 v_ModelPos;\n#include <packing>\nvoid main() {\n    float dist = length( v_ModelPos - u_CameraPosition );\n\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n\tdist = saturate( dist );\n    gl_FragColor = packDepthToRGBA(dist);\n}",distance_vert:"#include <common_vert>\nvarying vec3 v_ModelPos;\n#include <skinning_pars_vert>\nvoid main() {\n    #include <begin_vert>\n    #include <skinning_vert>\n    #include <pvm_vert>\n    v_ModelPos = (u_Model * vec4(transformed, 1.0)).xyz;\n}",lambert_frag:"#include <common_frag>\nuniform vec3 emissive;\n#include <uv_pars_frag>\n#include <color_pars_frag>\n#include <diffuseMap_pars_frag>\n#include <normalMap_pars_frag>\n#include <bumpMap_pars_frag>\n#include <light_pars_frag>\n#include <normal_pars_frag>\n#include <viewModelPos_pars_frag>\n#include <bsdfs>\n#include <envMap_pars_frag>\n#include <aoMap_pars_frag>\n#include <shadowMap_pars_frag>\n#include <fog_pars_frag>\n#include <emissiveMap_pars_frag>\n#include <clippingPlanes_pars_frag>\nvoid main() {\n    #include <clippingPlanes_frag>\n    #include <begin_frag>\n    #include <color_frag>\n    #include <diffuseMap_frag>\n    #include <alphaTest_frag>\n    #include <normal_frag>\n    #include <light_frag>\n    #include <envMap_frag>\n    #include <shadowMap_frag>\n    vec3 totalEmissiveRadiance = emissive;\n    #include <emissiveMap_frag>\n    outColor += vec4(totalEmissiveRadiance.rgb, 0.0);\n    #include <end_frag>\n    #include <encodings_frag>\n    #include <premultipliedAlpha_frag>\n    #include <fog_frag>\n}",lambert_vert:"#include <common_vert>\n#include <normal_pars_vert>\n#include <uv_pars_vert>\n#include <color_pars_vert>\n#include <viewModelPos_pars_vert>\n#include <envMap_pars_vert>\n#include <shadowMap_pars_vert>\n#include <skinning_pars_vert>\nvoid main() {\n    #include <begin_vert>\n    #include <skinning_vert>\n    #include <pvm_vert>\n    #include <normal_vert>\n    #include <uv_vert>\n    #include <color_vert>\n    #include <viewModelPos_vert>\n    #include <envMap_vert>\n    #include <shadowMap_vert>\n}",linedashed_frag:"#include <common_frag>\n#include <fog_pars_frag>\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\nvoid main() {\n    if ( mod( vLineDistance, totalSize ) > dashSize ) {\n\t\tdiscard;\n\t}\n    #include <begin_frag>\n    #include <end_frag>\n    #include <premultipliedAlpha_frag>\n    #include <fog_frag>\n}",linedashed_vert:"#include <common_vert>\nuniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\nvoid main() {\n    vLineDistance = scale * lineDistance;\n    vec3 transformed = vec3(a_Position);\n    #include <pvm_vert>\n}",normaldepth_frag:"#include <common_frag>\n#include <diffuseMap_pars_frag>\n#include <uv_pars_frag>\n#define USE_NORMAL\n#include <packing>\n#include <normal_pars_frag>\nvoid main() {\n    #if defined(USE_DIFFUSE_MAP) && defined(ALPHATEST)\n        vec4 texelColor = texture2D( texture, v_Uv );\n        float alpha = texelColor.a * u_Opacity;\n        if(alpha < ALPHATEST) discard;\n    #endif\n    vec4 packedNormalDepth;\n    packedNormalDepth.xyz = normalize(v_Normal) * 0.5 + 0.5;\n    packedNormalDepth.w = gl_FragCoord.z;\n    gl_FragColor = packedNormalDepth;\n}",normaldepth_vert:"#include <common_vert>\n#define USE_NORMAL\n#include <skinning_pars_vert>\n#include <normal_pars_vert>\n#include <uv_pars_vert>\nvoid main() {\n    #include <uv_vert>\n    #include <begin_vert>\n    #include <skinning_vert>\n    #include <normal_vert>\n    #include <pvm_vert>\n}",particle_frag:"float scaleLinear(float value, vec2 valueDomain) {\n    return (value - valueDomain.x) / (valueDomain.y - valueDomain.x);\n}\nfloat scaleLinear(float value, vec2 valueDomain, vec2 valueRange) {\n    return mix(valueRange.x, valueRange.y, scaleLinear(value, valueDomain));\n}\nvarying vec4 vColor;\nvarying float lifeLeft;\nuniform sampler2D tSprite;\nvoid main() {\n    float alpha = 0.;\n    if( lifeLeft > .995 ) {\n        alpha = scaleLinear( lifeLeft, vec2(1., .995), vec2(0., 1.));\n    } else {\n        alpha = lifeLeft * .75;\n    }\n    vec4 tex = texture2D( tSprite, gl_PointCoord );\n    gl_FragColor = vec4( vColor.rgb * tex.a, alpha * tex.a );\n}",particle_vert:"const vec4 bitSh = vec4(256. * 256. * 256., 256. * 256., 256., 1.);\nconst vec4 bitMsk = vec4(0.,vec3(1./256.0));\nconst vec4 bitShifts = vec4(1.) / bitSh;\n#define FLOAT_MAX\t1.70141184e38\n#define FLOAT_MIN\t1.17549435e-38\nlowp vec4 encode_float(highp float v) {\n    highp float av = abs(v);\n    if(av < FLOAT_MIN) {\n        return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n        return vec4(127.0, 128.0, 0.0, 0.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n        return vec4(255.0, 128.0, 0.0, 0.0) / 255.0;\n    }\n    highp vec4 c = vec4(0,0,0,0);\n    highp float e = floor(log2(av));\n    highp float m = av * pow(2.0, -e) - 1.0;\n    c[1] = floor(128.0 * m);\n    m -= c[1] / 128.0;\n    c[2] = floor(32768.0 * m);\n    m -= c[2] / 32768.0;\n    c[3] = floor(8388608.0 * m);\n    highp float ebias = e + 127.0;\n    c[0] = floor(ebias / 2.0);\n    ebias -= c[0] * 2.0;\n    c[1] += floor(ebias) * 128.0;\n    c[0] += 128.0 * step(0.0, -v);\n    return c / 255.0;\n}\nvec4 pack(const in float depth)\n{\n    const vec4 bit_shift = vec4(256.0*256.0*256.0, 256.0*256.0, 256.0, 1.0);\n    const vec4 bit_mask\t= vec4(0.0, 1.0/256.0, 1.0/256.0, 1.0/256.0);\n    vec4 res = mod(depth*bit_shift*vec4(255), vec4(256))/vec4(255);\n    res -= res.xxyz * bit_mask;\n    return res;\n}\nfloat unpack(const in vec4 rgba_depth)\n{\n    const vec4 bit_shift = vec4(1.0/(256.0*256.0*256.0), 1.0/(256.0*256.0), 1.0/256.0, 1.0);\n    float depth = dot(rgba_depth, bit_shift);\n    return depth;\n}\nuniform float uTime;\nuniform float uScale;\nuniform sampler2D tNoise;\nuniform mat4 u_Projection;\nuniform mat4 u_View;\nuniform mat4 u_Model;\nattribute vec4 particlePositionsStartTime;\nattribute vec4 particleVelColSizeLife;\nvarying vec4 vColor;\nvarying float lifeLeft;\nvoid main() {\n    vColor = encode_float( particleVelColSizeLife.y );\n    vec4 velTurb = encode_float( particleVelColSizeLife.x );\n    vec3 velocity = vec3( velTurb.xyz );\n    float turbulence = velTurb.w;\n    vec3 newPosition;\n    float timeElapsed = uTime - particlePositionsStartTime.a;\n    lifeLeft = 1. - (timeElapsed / particleVelColSizeLife.w);\n    gl_PointSize = ( uScale * particleVelColSizeLife.z ) * lifeLeft;\n    velocity.x = ( velocity.x - .5 ) * 3.;\n    velocity.y = ( velocity.y - .5 ) * 3.;\n    velocity.z = ( velocity.z - .5 ) * 3.;\n    newPosition = particlePositionsStartTime.xyz + ( velocity * 10. ) * ( uTime - particlePositionsStartTime.a );\n    vec3 noise = texture2D( tNoise, vec2( newPosition.x * .015 + (uTime * .05), newPosition.y * .02 + (uTime * .015) )).rgb;\n    vec3 noiseVel = ( noise.rgb - .5 ) * 30.;\n    newPosition = mix(newPosition, newPosition + vec3(noiseVel * ( turbulence * 5. ) ), (timeElapsed / particleVelColSizeLife.a) );\n    if( velocity.y > 0. && velocity.y < .05 ) {\n        lifeLeft = 0.;\n    }\n    if( velocity.x < -1.45 ) {\n        lifeLeft = 0.;\n    }\n    if( timeElapsed > 0. ) {\n        gl_Position = u_Projection * u_View * u_Model * vec4( newPosition, 1.0 );\n    } else {\n        gl_Position = u_Projection * u_View * u_Model * vec4( particlePositionsStartTime.xyz, 1.0 );\n        lifeLeft = 0.;\n        gl_PointSize = 0.;\n    }\n}",pbr_frag:"#include <common_frag>\nuniform float u_Metalness;\n#ifdef USE_METALNESSMAP\n\tuniform sampler2D metalnessMap;\n#endif\nuniform float u_Roughness;\n#ifdef USE_ROUGHNESSMAP\n\tuniform sampler2D roughnessMap;\n#endif\nuniform vec3 emissive;\n#include <uv_pars_frag>\n#include <color_pars_frag>\n#include <diffuseMap_pars_frag>\n#include <normalMap_pars_frag>\n#include <bumpMap_pars_frag>\n#include <envMap_pars_frag>\n#include <aoMap_pars_frag>\n#include <light_pars_frag>\n#include <normal_pars_frag>\n#include <viewModelPos_pars_frag>\n#include <bsdfs>\n#include <shadowMap_pars_frag>\n#include <fog_pars_frag>\n#include <emissiveMap_pars_frag>\n#include <clippingPlanes_pars_frag>\nvoid main() {\n    #include <clippingPlanes_frag>\n    #include <begin_frag>\n    #include <color_frag>\n    #include <diffuseMap_frag>\n    #include <alphaTest_frag>\n    #include <normal_frag>\n    #include <specularMap_frag>\n    float roughnessFactor = u_Roughness;\n    #ifdef USE_ROUGHNESSMAP\n    \tvec4 texelRoughness = texture2D( roughnessMap, v_Uv );\n    \troughnessFactor *= texelRoughness.g;\n    #endif\n    float metalnessFactor = u_Metalness;\n    #ifdef USE_METALNESSMAP\n    \tvec4 texelMetalness = texture2D( metalnessMap, v_Uv );\n    \tmetalnessFactor *= texelMetalness.b;\n    #endif\n    #include <light_frag>\n    #include <shadowMap_frag>\n    vec3 totalEmissiveRadiance = emissive;\n    #include <emissiveMap_frag>\n    outColor += vec4(totalEmissiveRadiance.rgb, 0.0);\n    #include <end_frag>\n    #include <encodings_frag>\n    #include <premultipliedAlpha_frag>\n    #include <fog_frag>\n}",pbr_vert:"#include <common_vert>\n#include <normal_pars_vert>\n#include <uv_pars_vert>\n#include <color_pars_vert>\n#include <viewModelPos_pars_vert>\n#include <envMap_pars_vert>\n#include <shadowMap_pars_vert>\n#include <skinning_pars_vert>\nvoid main() {\n    #include <begin_vert>\n    #include <skinning_vert>\n    #include <pvm_vert>\n    #include <normal_vert>\n    #include <uv_vert>\n    #include <color_vert>\n    #include <viewModelPos_vert>\n    #include <envMap_vert>\n    #include <shadowMap_vert>\n}",phong_frag:"#include <common_frag>\nuniform float u_Specular;\nuniform vec4 u_SpecularColor;\n#include <specularMap_pars_frag>\nuniform vec3 emissive;\n#include <uv_pars_frag>\n#include <color_pars_frag>\n#include <diffuseMap_pars_frag>\n#include <normalMap_pars_frag>\n#include <bumpMap_pars_frag>\n#include <light_pars_frag>\n#include <normal_pars_frag>\n#include <viewModelPos_pars_frag>\n#include <bsdfs>\n#include <envMap_pars_frag>\n#include <aoMap_pars_frag>\n#include <shadowMap_pars_frag>\n#include <fog_pars_frag>\n#include <emissiveMap_pars_frag>\n#include <clippingPlanes_pars_frag>\nvoid main() {\n    #include <clippingPlanes_frag>\n    #include <begin_frag>\n    #include <color_frag>\n    #include <diffuseMap_frag>\n    #include <alphaTest_frag>\n    #include <normal_frag>\n    #include <specularMap_frag>\n    #include <light_frag>\n    #include <envMap_frag>\n    #include <shadowMap_frag>\n    vec3 totalEmissiveRadiance = emissive;\n    #include <emissiveMap_frag>\n    outColor += vec4(totalEmissiveRadiance.rgb, 0.0);\n    #include <end_frag>\n    #include <encodings_frag>\n    #include <premultipliedAlpha_frag>\n    #include <fog_frag>\n}",phong_vert:"#include <common_vert>\n#include <normal_pars_vert>\n#include <uv_pars_vert>\n#include <color_pars_vert>\n#include <viewModelPos_pars_vert>\n#include <envMap_pars_vert>\n#include <shadowMap_pars_vert>\n#include <skinning_pars_vert>\nvoid main() {\n    #include <begin_vert>\n    #include <skinning_vert>\n    #include <pvm_vert>\n    #include <normal_vert>\n    #include <uv_vert>\n    #include <color_vert>\n    #include <viewModelPos_vert>\n    #include <envMap_vert>\n    #include <shadowMap_vert>\n}",point_frag:"#include <common_frag>\n#include <diffuseMap_pars_frag>\n#include <fog_pars_frag>\nvoid main() {\n    #include <begin_frag>\n    #ifdef USE_DIFFUSE_MAP\n        outColor *= texture2D(texture, vec2(gl_PointCoord.x, 1.0 - gl_PointCoord.y));\n    #endif\n    #include <end_frag>\n    #include <encodings_frag>\n    #include <premultipliedAlpha_frag>\n    #include <fog_frag>\n}",point_vert:"#include <common_vert>\nuniform float u_PointSize;\nuniform float u_PointScale;\nvoid main() {\n    #include <begin_vert>\n    #include <pvm_vert>\n    vec4 mvPosition = u_View * u_Model * vec4(transformed, 1.0);\n    #ifdef USE_SIZEATTENUATION\n        gl_PointSize = u_PointSize * ( u_PointScale / - mvPosition.z );\n    #else\n        gl_PointSize = u_PointSize;\n    #endif\n}",sprite_frag:"uniform vec3 color;\nuniform sampler2D map;\nuniform float opacity;\nuniform int fogType;\nuniform vec3 fogColor;\nuniform float fogDensity;\nuniform float fogNear;\nuniform float fogFar;\nuniform float alphaTest;\nvarying vec2 vUV;\nvoid main() {\n    vec4 texture = texture2D( map, vUV );\n    if ( texture.a < alphaTest ) discard;\n    gl_FragColor = vec4( color * texture.xyz, texture.a * opacity );\n    if ( fogType > 0 ) {\n        float depth = gl_FragCoord.z / gl_FragCoord.w;\n        float fogFactor = 0.0;\n        if ( fogType == 1 ) {\n            fogFactor = smoothstep( fogNear, fogFar, depth );\n        } else {\n            \n            fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );\n            fogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );\n        }\n        gl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );\n    }\n}",sprite_vert:"uniform mat4 modelMatrix;\nuniform mat4 viewMatrix;\nuniform mat4 projectionMatrix;\nuniform float rotation;\nuniform vec2 scale;\nuniform vec2 uvOffset;\nuniform vec2 uvScale;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvoid main() {\n    vUV = uvOffset + uv * uvScale;\n    vec2 alignedPosition = position * scale;\n    vec2 rotatedPosition;\n    rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\n    rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\n    vec4 finalPosition;\n    finalPosition = viewMatrix * modelMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\n    finalPosition.xy += rotatedPosition;\n    finalPosition = projectionMatrix * finalPosition;\n    gl_Position = finalPosition;\n}"},function(){function e(e,t){var n="";for(var i in e)n+=e[i]+"_";if(void 0!==t.defines)for(var r in t.defines)n+=r+"_"+t.defines[r]+"_";return n}function t(e,t){var n;return e?e.encoding&&(n=e.encoding):n=h.LINEAR,n===h.LINEAR&&t&&(n=h.GAMMA),n}function n(e){switch(e){case h.LINEAR:return["Linear","( value )"];case h.SRGB:return["sRGB","( value )"];case h.RGBE:return["RGBE","( value )"];case h.RGBM7:return["RGBM","( value, 7.0 )"];case h.RGBM16:return["RGBM","( value, 16.0 )"];case h.RGBD:return["RGBD","( value, 256.0 )"];case h.GAMMA:return["Gamma","( value, float( GAMMA_FACTOR ) )"];default:console.error("unsupported encoding: "+e)}}function i(e,t){var i=n(t);return"vec4 "+e+"( vec4 value ) { return "+i[0]+"ToLinear"+i[1]+"; }"}function r(e,t){var i=n(t);return"vec4 "+e+"( vec4 value ) { return LinearTo"+i[0]+i[1]+"; }"}function a(e){var t=[];for(var n in e){var i=e[n];!1!==i&&t.push("#define "+n+" "+i)}return t.join("\n")}function o(e,t,n){var a=zen3d.ShaderLib[t.materialType+"_vert"]||t.vertexShader||zen3d.ShaderLib.basic_vert,o=zen3d.ShaderLib[t.materialType+"_frag"]||t.fragmentShader||zen3d.ShaderLib.basic_frag;a=l(a),o=l(o);var s=["",n],h=["#define PI 3.14159265359","#define EPSILON 1e-6","float pow2( const in float x ) { return x*x; }","#define LOG2 1.442695","#define RECIPROCAL_PI 0.31830988618","#define saturate(a) clamp( a, 0.0, 1.0 )","#define whiteCompliment(a) ( 1.0 - saturate( a ) )",n];switch(t.materialType){case u.CUBE:case u.CANVAS2D:case u.SPRITE:case u.PARTICLE:case u.SHADER:break;case u.LAMBERT:case u.PHONG:case u.PBR:h.push(t.useRoughnessMap?"#define USE_ROUGHNESSMAP":""),h.push(t.useMetalnessMap?"#define USE_METALNESSMAP":"");case u.POINT:s.push(t.pointLightNum>0?"#define USE_POINT_LIGHT "+t.pointLightNum:""),s.push(t.spotLightNum>0?"#define USE_SPOT_LIGHT "+t.spotLightNum:""),s.push(t.directLightNum>0?"#define USE_DIRECT_LIGHT "+t.directLightNum:""),s.push(t.ambientLightNum>0?"#define USE_AMBIENT_LIGHT "+t.ambientLightNum:""),s.push(t.pointLightNum>0||t.directLightNum>0||t.ambientLightNum>0||t.spotLightNum>0?"#define USE_LIGHT":""),s.push(t.pointLightNum>0||t.directLightNum>0||t.spotLightNum>0?"#define USE_NORMAL":""),s.push((t.pointLightNum>0||t.directLightNum>0||t.spotLightNum>0)&&t.useNormalMap?"#define USE_NORMAL_MAP":""),s.push((t.pointLightNum>0||t.directLightNum>0||t.spotLightNum>0)&&t.useBumpMap?"#define USE_BUMPMAP":""),s.push((t.pointLightNum>0||t.directLightNum>0||t.spotLightNum>0)&&t.useSpecularMap?"#define USE_SPECULARMAP":""),s.push(t.useEmissiveMap?"#define USE_EMISSIVEMAP":""),s.push(t.useShadow?"#define USE_SHADOW":""),s.push(t.materialType==u.LAMBERT?"#define USE_LAMBERT":""),s.push(t.materialType==u.PHONG?"#define USE_PHONG":""),s.push(t.materialType==u.PBR?"#define USE_PBR":""),s.push(t.flipSided?"#define FLIP_SIDED":""),s.push(t.numClippingPlanes>0?"#define NUM_CLIPPING_PLANES "+t.numClippingPlanes:""),h.push(t.pointLightNum>0?"#define USE_POINT_LIGHT "+t.pointLightNum:""),h.push(t.spotLightNum>0?"#define USE_SPOT_LIGHT "+t.spotLightNum:""),h.push(t.directLightNum>0?"#define USE_DIRECT_LIGHT "+t.directLightNum:""),h.push(t.ambientLightNum>0?"#define USE_AMBIENT_LIGHT "+t.ambientLightNum:""),h.push(t.pointLightNum>0||t.directLightNum>0||t.ambientLightNum>0||t.spotLightNum>0?"#define USE_LIGHT":""),h.push(t.pointLightNum>0||t.directLightNum>0||t.spotLightNum>0?"#define USE_NORMAL":""),h.push((t.pointLightNum>0||t.directLightNum>0||t.spotLightNum>0)&&t.useNormalMap?"#define USE_NORMAL_MAP":""),h.push((t.pointLightNum>0||t.directLightNum>0||t.spotLightNum>0)&&t.useBumpMap?"#define USE_BUMPMAP":""),h.push((t.pointLightNum>0||t.directLightNum>0||t.spotLightNum>0)&&t.useSpecularMap?"#define USE_SPECULARMAP":""),h.push(t.useEmissiveMap?"#define USE_EMISSIVEMAP":""),h.push(t.useShadow?"#define USE_SHADOW":""),h.push(t.usePCFSoftShadow?"#define USE_PCF_SOFT_SHADOW":""),h.push(t.flatShading?"#define FLAT_SHADED":""),h.push(t.materialType==u.LAMBERT?"#define USE_LAMBERT":""),h.push(t.materialType==u.PHONG?"#define USE_PHONG":""),h.push(t.materialType==u.PBR?"#define USE_PBR":""),h.push(t.doubleSided?"#define DOUBLE_SIDED":""),h.push(t.envMap&&t.useShaderTextureLOD?"#define TEXTURE_LOD_EXT":""),h.push(t.numClippingPlanes>0?"#define NUM_CLIPPING_PLANES "+t.numClippingPlanes:"");case u.BASIC:if(s.push(t.useDiffuseMap?"#define USE_DIFFUSE_MAP":""),s.push(t.useEnvMap?"#define USE_ENV_MAP":""),s.push(t.sizeAttenuation?"#define USE_SIZEATTENUATION":""),s.push(t.useAOMap?"#define USE_AOMAP":""),h.push(t.useDiffuseMap?"#define USE_DIFFUSE_MAP":""),h.push(t.useEnvMap?"#define USE_ENV_MAP":""),t.useEnvMap){var c="";switch(t.envMapCombine){case d.MULTIPLY:c="ENVMAP_BLENDING_MULTIPLY";break;case d.MIX:c="ENVMAP_BLENDING_MIX";break;case d.ADD:c="ENVMAP_BLENDING_ADD"}h.push("#define "+c)}h.push(t.useAOMap?"#define USE_AOMAP":"");case u.LINE:case u.LINE_LOOP:h.push(zen3d.ShaderChunk.encodings_pars_frag),h.push("#define GAMMA_FACTOR "+t.gammaFactor),s.push(t.useVertexColors?"#define USE_VCOLOR":""),h.push(i("mapTexelToLinear",t.diffuseMapEncoding)),h.push(i("envMapTexelToLinear",t.envMapEncoding)),h.push(i("emissiveMapTexelToLinear",t.emissiveMapEncoding)),h.push(r("linearToOutputTexel",t.outputEncoding)),h.push(t.premultipliedAlpha?"#define USE_PREMULTIPLIED_ALPHA":""),h.push(t.useVertexColors?"#define USE_VCOLOR":"");case u.DEPTH:h.push(t.packDepthToRGBA?"#define DEPTH_PACKING_RGBA":"");case u.DISTANCE:s.push(t.useSkinning?"#define USE_SKINNING":""),s.push(t.bonesNum>0?"#define MAX_BONES "+t.bonesNum:""),s.push(t.useVertexTexture?"#define BONE_TEXTURE":"");case u.LINE_DASHED:h.push(t.fog?"#define USE_FOG":""),h.push(t.fogExp2?"#define USE_EXP2_FOG":""),h.push(t.alphaTest?"#define ALPHATEST "+t.alphaTest:"")}var p=["precision "+t.precision+" float;","precision "+t.precision+" int;",s.join("\n"),a].join("\n"),f=["#extension GL_OES_standard_derivatives : enable",t.useShaderTextureLOD&&t.useEnvMap?"#extension GL_EXT_shader_texture_lod : enable":"","precision "+t.precision+" float;","precision "+t.precision+" int;",h.join("\n"),o].join("\n");return new zen3d.WebGLProgram(e,p,f)}var s={},u=zen3d.MATERIAL_TYPE,h=zen3d.TEXEL_ENCODING_TYPE,d=zen3d.ENVMAP_COMBINE_TYPE,l=function(e){var t=/#include +<([\w\d.]+)>/g;return e.replace(t,function(e,t){var n=zen3d.ShaderChunk[t];if(void 0===n)throw new Error("Can not resolve #include <"+t+">");return l(n)})};zen3d.getProgram=function(n,i,r,h,d){var l=n.gl,c=n.capabilities,r=r||h.material,p=d&&r.acceptLight?d.lights:null,f=d?d.fog:null,_=d?d.clippingPlanes:null,v={};v.precision=c.maxPrecision,v.materialType=r.type;var m=n.state.currentRenderTarget;switch(r.type){case u.PBR:v.useRoughnessMap=!!r.roughnessMap,v.useMetalnessMap=!!r.metalnessMap;case u.BASIC:case u.LAMBERT:case u.PHONG:case u.POINT:case u.LINE:case u.LINE_LOOP:v.gammaFactor=i.gammaFactor,v.outputEncoding=t(m.texture||null,i.gammaOutput),v.diffuseMapEncoding=t(r.diffuseMap,i.gammaInput),v.envMapEncoding=t(r.envMap,i.gammaInput),v.emissiveMapEncoding=t(r.emissiveMap,i.gammaInput),v.useShaderTextureLOD=!!c.shaderTextureLOD,v.useVertexColors=r.vertexColors,v.numClippingPlanes=_?_.length:0,v.useAOMap=!!r.aoMap;case u.CUBE:case u.LINE_DASHED:v.useDiffuseMap=!!r.diffuseMap,v.useNormalMap=!!r.normalMap,v.useBumpMap=!!r.bumpMap,v.useSpecularMap=!!r.specularMap,v.useEnvMap=!!r.envMap,v.envMapCombine=r.envMapCombine,v.useEmissiveMap=!!r.emissiveMap,v.useDiffuseColor=!r.diffuseMap,v.ambientLightNum=p?p.ambientsNum:0,v.directLightNum=p?p.directsNum:0,v.pointLightNum=p?p.pointsNum:0,v.spotLightNum=p?p.spotsNum:0,v.flatShading=r.shading===zen3d.SHADING_TYPE.FLAT_SHADING,v.useShadow=h.receiveShadow,v.usePCFSoftShadow=h.shadowType===zen3d.SHADOW_TYPE.PCF_SOFT,v.premultipliedAlpha=r.premultipliedAlpha,v.fog=!!f,v.fogExp2=!!f&&f.fogType===zen3d.FOG_TYPE.EXP2,v.sizeAttenuation=r.sizeAttenuation,v.doubleSided=r.side===zen3d.DRAW_SIDE.DOUBLE,v.flipSided=r.side===zen3d.DRAW_SIDE.BACK;case u.DEPTH:v.packDepthToRGBA=r.packToRGBA;case u.DISTANCE:var g=h.type===zen3d.OBJECT_TYPE.SKINNED_MESH&&h.skeleton,E=c.maxVertexUniformVectors,y=c.maxVertexTextures>0&&c.floatTextures,T=0;y?T=1024:16*(T=h.skeleton?h.skeleton.bones.length:0)>E&&(console.warn("Program: too many bones ("+T+"), current cpu only support "+Math.floor(E/16)+" bones!!"),T=Math.floor(E/16)),v.useSkinning=g,v.bonesNum=T,v.useVertexTexture=y,v.alphaTest=r.alphaTest;break;case u.SHADER:v.vertexShader=r.vertexShader,v.fragmentShader=r.fragmentShader;case u.CANVAS2D:case u.PARTICLE:case u.SPRITE:}var x,M=e(v,r),S=s;if(S[M])x=S[M];else{var w="";void 0!==r.defines&&(w=a(r.defines)),x=o(l,v,w),S[M]=x}return x}}(),function(){var e=function(e){this.camera=new zen3d.Camera,this.targets=[new zen3d.Vector3(1,0,0),new zen3d.Vector3(-1,0,0),new zen3d.Vector3(0,1,0),new zen3d.Vector3(0,-1,0),new zen3d.Vector3(0,0,1),new zen3d.Vector3(0,0,-1)],this.ups=[new zen3d.Vector3(0,-1,0),new zen3d.Vector3(0,-1,0),new zen3d.Vector3(0,0,1),new zen3d.Vector3(0,0,-1),new zen3d.Vector3(0,-1,0),new zen3d.Vector3(0,-1,0)],this.camera.setPerspective(.5*Math.PI,1,1,1e3),this.position=new zen3d.Vector3,this.lookTarget=new zen3d.Vector3,this.renderTarget=e||new zen3d.RenderTargetCube(512,512),this.renderTexture=this.renderTarget.texture,this.renderTexture.minFilter=zen3d.WEBGL_TEXTURE_FILTER.LINEAR_MIPMAP_LINEAR};e.prototype.render=function(e,t){this.camera.position.copy(this.position);for(var n=0;n<6;n++)this.lookTarget.set(this.targets[n].x+this.camera.position.x,this.targets[n].y+this.camera.position.y,this.targets[n].z+this.camera.position.z),this.camera.lookAt(this.lookTarget,this.ups[n]),this.camera.updateMatrix(),this.renderTarget.activeCubeFace=n,e.texture.setRenderTarget(this.renderTarget),e.state.clearColor(0,0,0,0),e.clear(!0,!0,!0),e.render(t,this.camera),e.texture.updateRenderTargetMipmap(this.renderTarget)},zen3d.EnvironmentMapPass=e}(),function(){zen3d.RENDER_LAYER,zen3d.LAYER_RENDER_LIST;var e=function(){this.depthMaterial=new zen3d.DepthMaterial,this.depthMaterial.packToRGBA=!0,this.distanceMaterial=new zen3d.DistanceMaterial};e.prototype.render=function(e,t){var n=e.gl,i=e.state,r=i.states[n.STENCIL_TEST];r&&i.disable(n.STENCIL_TEST);for(var a=t.lights.shadows,o=0;o<a.length;o++)for(var s=a[o],u=s.shadow,h=u.camera,d=u.renderTarget,l=s.lightType==zen3d.LIGHT_TYPE.POINT,c=l?6:1,p=0;p<c;p++){l?(u.update(s,p),d.activeCubeFace=p):u.update(s);var f=t.updateRenderList(h);e.texture.setRenderTarget(d),i.clearColor(1,1,1,1),e.clear(!0,!0);var _=l?this.distanceMaterial:this.depthMaterial;_.uniforms=_.uniforms||{},_.uniforms.nearDistance=u.cameraNear,_.uniforms.farDistance=u.cameraFar,e.renderPass(f.opaque,h,{getMaterial:function(e){return _.side=e.material.side,_},ifRender:function(e){return e.object.castShadow}})}r&&i.enable(n.STENCIL_TEST)},zen3d.ShadowMapPass=e}(),function(){function e(e){var t={};for(var n in e){var i=e[n];Array.isArray(i)?t[n]=i.slice():t[n]=i}return t}var t=function(t){var n=new zen3d.Scene,i=this.camera=new zen3d.Camera;i.frustumCulled=!1,i.position.set(0,1,0),i.lookAt(new zen3d.Vector3(0,0,0),new zen3d.Vector3(0,0,-1)),i.setOrtho(-1,1,-1,1,.1,2),n.add(i);var r=new zen3d.PlaneGeometry(2,2,1,1);this.uniforms=e(t.uniforms);var a=this.material=new zen3d.ShaderMaterial(t.vertexShader,t.fragmentShader,this.uniforms);Object.assign(a.defines,t.defines);var o=new zen3d.Mesh(r,a);o.frustumCulled=!1,n.add(o),n.updateMatrix(),this.renderList=n.updateRenderList(i),this.renderConfig={}};t.prototype.render=function(e){e.renderPass(this.renderList.opaque,this.camera,this.renderConfig)},zen3d.ShaderPostPass=t}(),function(){var e=function(e,t){this.backRenderTarget=new zen3d.RenderTargetBack(e);var n=e.getContext("webgl",t||{antialias:!0,alpha:!1,stencil:!0});this.glCore=new zen3d.WebGLCore(n),this.autoClear=!0,this.performance=new zen3d.Performance,this.shadowMapPass=new zen3d.ShadowMapPass,this.shadowAutoUpdate=!0,this.shadowNeedsUpdate=!1,this.matrixAutoUpdate=!0,this.lightsAutoupdate=!0};e.prototype.render=function(e,t,n,i){var r=this.performance;r.updateFps(),r.startCounter("render",60),this.matrixAutoUpdate&&e.updateMatrix(),this.lightsAutoupdate&&e.updateLights(),r.startCounter("renderShadow",60),(this.shadowAutoUpdate||this.shadowNeedsUpdate)&&(this.shadowMapPass.render(this.glCore,e),this.shadowNeedsUpdate=!1),r.endCounter("renderShadow"),void 0===n&&(n=this.backRenderTarget),this.glCore.texture.setRenderTarget(n),(this.autoClear||i)&&(this.glCore.state.clearColor(0,0,0,0),this.glCore.clear(!0,!0,!0)),r.startCounter("renderList",60),this.glCore.render(e,t,!0),r.endCounter("renderList"),n.texture&&this.glCore.texture.updateRenderTargetMipmap(n),this.performance.endCounter("render")},zen3d.Renderer=e}(),function(){function e(e){if(void 0!==t[e.uuid])return t[e.uuid];var n;switch(e.lightType){case i.DIRECT:n={direction:new Float32Array(3),color:new Float32Array([0,0,0,1]),shadow:!1,shadowBias:0,shadowRadius:1,shadowMapSize:new Float32Array(2)};break;case i.POINT:n={position:new Float32Array(3),color:new Float32Array([0,0,0,1]),distance:0,decay:0,shadow:!1,shadowBias:0,shadowRadius:1,shadowMapSize:new Float32Array(2),shadowCameraNear:1,shadowCameraFar:1e3};break;case i.SPOT:n={position:new Float32Array(3),direction:new Float32Array(3),color:new Float32Array([0,0,0,1]),distance:0,coneCos:0,penumbraCos:0,decay:0,shadow:!1,shadowBias:0,shadowRadius:1,shadowMapSize:new Float32Array(2)}}return t[e.uuid]=n,n}var t={},n=function(){this.ambient=new Float32Array([0,0,0,1]),this.directional=[],this.directionalShadowMap=[],this.directionalShadowMatrix=[],this.point=[],this.pointShadowMap=[],this.pointShadowMatrix=[],this.spot=[],this.spotShadowMap=[],this.spotShadowMatrix=[],this.shadows=[],this.ambientsNum=0,this.directsNum=0,this.pointsNum=0,this.spotsNum=0,this.shadowsNum=0,this.totalNum=0};n.prototype.startCount=function(){for(var e=0;e<3;e++)this.ambient[e]=0;this.shadows.length=0,this.ambientsNum=0,this.directsNum=0,this.pointsNum=0,this.spotsNum=0,this.shadowsNum=0,this.totalNum=0};var i=zen3d.LIGHT_TYPE;n.prototype.add=function(e){e.lightType==i.AMBIENT?this._doAddAmbientLight(e):e.lightType==i.DIRECT?this._doAddDirectLight(e):e.lightType==i.POINT?this._doAddPointLight(e):e.lightType==i.SPOT&&this._doAddSpotLight(e),e.castShadow&&e.lightType!==i.AMBIENT&&(this.shadows.push(e),this.shadowsNum++),this.totalNum++},n.prototype.endCount=function(){},n.prototype._doAddAmbientLight=function(e){var t=e.intensity,n=e.color;this.ambient[0]+=n.r*t,this.ambient[1]+=n.g*t,this.ambient[2]+=n.b*t,this.ambientsNum++};var r=new zen3d.Vector3;n.prototype._doAddDirectLight=function(t){var n=t.intensity,i=t.color,a=e(t);a.color[0]=i.r*n,a.color[1]=i.g*n,a.color[2]=i.b*n;var o=r;if(t.getWorldDirection(o),a.direction[0]=o.x,a.direction[1]=o.y,a.direction[2]=o.z,t.castShadow?(a.shadow=!0,a.shadowBias=t.shadow.bias,a.shadowRadius=t.shadow.radius,a.shadowMapSize[0]=t.shadow.mapSize.x,a.shadowMapSize[1]=t.shadow.mapSize.y):a.shadow=!1,t.castShadow){var s=16*(this.directsNum+1);if(this.directionalShadowMatrix.length<s){var u=this.directionalShadowMatrix;this.directionalShadowMatrix=new Float32Array(s),this.directionalShadowMatrix.set(u)}this.directionalShadowMatrix.set(t.shadow.matrix.elements,16*this.directsNum),this.directionalShadowMap[this.directsNum]=t.shadow.map}this.directional[this.directsNum]=a,this.directsNum++},n.prototype._doAddPointLight=function(t){var n=t.intensity,i=t.color,a=t.distance,o=t.decay,s=e(t);s.color[0]=i.r*n,s.color[1]=i.g*n,s.color[2]=i.b*n,s.distance=a,s.decay=o;var u=r.setFromMatrixPosition(t.worldMatrix);if(s.position[0]=u.x,s.position[1]=u.y,s.position[2]=u.z,t.castShadow?(s.shadow=!0,s.shadowBias=t.shadow.bias,s.shadowRadius=t.shadow.radius,s.shadowMapSize[0]=t.shadow.mapSize.x,s.shadowMapSize[1]=t.shadow.mapSize.y,s.shadowCameraNear=t.shadow.cameraNear,s.shadowCameraFar=t.shadow.cameraFar):s.shadow=!1,t.castShadow){var h=16*(this.pointsNum+1);if(this.pointShadowMatrix.length<h){var d=this.pointShadowMatrix;this.pointShadowMatrix=new Float32Array(h),this.pointShadowMatrix.set(d)}this.pointShadowMatrix.set(t.shadow.matrix.elements,16*this.pointsNum),this.pointShadowMap[this.pointsNum]=t.shadow.map}this.point[this.pointsNum]=s,this.pointsNum++},n.prototype._doAddSpotLight=function(t){var n=t.intensity,i=t.color,a=t.distance,o=t.decay,s=e(t);s.color[0]=i.r*n,s.color[1]=i.g*n,s.color[2]=i.b*n,s.distance=a,s.decay=o;var u=r.setFromMatrixPosition(t.worldMatrix);s.position[0]=u.x,s.position[1]=u.y,s.position[2]=u.z;var h=r;t.getWorldDirection(r),s.direction[0]=h.x,s.direction[1]=h.y,s.direction[2]=h.z;var d=Math.cos(t.angle),l=Math.cos(t.angle*(1-t.penumbra));if(s.coneCos=d,s.penumbraCos=l,t.castShadow?(s.shadow=!0,s.shadowBias=t.shadow.bias,s.shadowRadius=t.shadow.radius,s.shadowMapSize[0]=t.shadow.mapSize.x,s.shadowMapSize[1]=t.shadow.mapSize.y):s.shadow=!1,t.castShadow){var c=16*(this.spotsNum+1);if(this.spotShadowMatrix.length<c){var p=this.spotShadowMatrix;this.spotShadowMatrix=new Float32Array(c),this.spotShadowMatrix.set(p)}this.spotShadowMatrix.set(t.shadow.matrix.elements,16*this.spotsNum),this.spotShadowMap[this.spotsNum]=t.shadow.map}this.spot[this.spotsNum]=s,this.spotsNum++},zen3d.LightCache=n}(),function(){var e=function(e,t){return e.z-t.z},t=function(e,t){return t.z-e.z},n=function(){this.opaque=[],this.transparent=[],this.ui=[],this._opaqueCount=0,this._transparentCount=0,this._uiCount=0};n.prototype.startCount=function(){this._opaqueCount=0,this._transparentCount=0,this._uiCount=0};var i=zen3d.OBJECT_TYPE,r=new zen3d.Vector3,a=new zen3d.Sphere;n.prototype.add=function(e,t){if(!e.frustumCulled||!t.frustumCulled||(a.copy(e.geometry.boundingSphere).applyMatrix4(e.worldMatrix),t.frustum.intersectsSphere(a)))if(r.setFromMatrixPosition(e.worldMatrix),r.applyMatrix4(t.viewMatrix).applyMatrix4(t.projectionMatrix),i.CANVAS2D!==e.type)if(Array.isArray(e.material))for(var n=e.geometry.groups,o=0;o<n.length;o++){var s=n[o],u=e.material[s.materialIndex];if(u){h={object:e,geometry:e.geometry,material:u,z:r.z,group:s};u.transparent?this.transparent[this._transparentCount++]=h:this.opaque[this._opaqueCount++]=h}}else{h={object:e,geometry:e.geometry,material:e.material,z:r.z};e.material.transparent?this.transparent[this._transparentCount++]=h:this.opaque[this._opaqueCount++]=h}else{var h={object:e,geometry:e.geometry,material:e.material,z:r.z};this.ui[this._uiCount++]=h}},n.prototype.endCount=function(){this.transparent.length=this._transparentCount,this.opaque.length=this._opaqueCount,this.ui.length=this._uiCount},n.prototype.sort=function(){this.opaque.sort(e),this.transparent.sort(t)},zen3d.RenderList=n}(),function(){var e=function(t,n){e.superClass.constructor.call(this),this.uuid=zen3d.generateUUID(),this.width=t,this.height=n,this.depthBuffer=!0,this.stencilBuffer=!0};zen3d.inherit(e,zen3d.EventDispatcher),e.prototype.resize=function(e,t){this.width===e&&this.height===t||this.dispose(),this.width=e,this.height=t},e.prototype.dispose=function(){this.dispatchEvent({type:"dispose"})},zen3d.RenderTargetBase=e}(),function(){var e=function(t){e.superClass.constructor.call(this,t.width,t.height),this.view=t};zen3d.inherit(e,zen3d.RenderTargetBase),e.prototype.resize=function(e,t){this.view.width=e,this.view.height=t,this.width=e,this.height=t},e.prototype.dispose=function(){},zen3d.RenderTargetBack=e}(),function(){var e=function(t,n){e.superClass.constructor.call(this,t,n),this.texture=new zen3d.Texture2D,this.depthTexture=null};zen3d.inherit(e,zen3d.RenderTargetBase),zen3d.RenderTarget2D=e}(),function(){var e=function(t,n){e.superClass.constructor.call(this,t,n),this.texture=new zen3d.TextureCube,this.activeCubeFace=0};zen3d.inherit(e,zen3d.RenderTargetBase),zen3d.RenderTargetCube=e}(),function(){var e=function(e,t,n){this.uuid=zen3d.generateUUID(),this.array=e,this.size=t,this.count=void 0!==e?e.length/t:0,this.normalized=!0===n,this.dynamic=!1,this.updateRange={offset:0,count:-1},this.version=0};e.prototype.setArray=function(e){this.count=void 0!==e?e.length/this.size:0,this.array=e},zen3d.BufferAttribute=e}(),function(){var e=function(e,t){this.uuid=zen3d.generateUUID(),this.array=e,this.stride=t,this.count=void 0!==e?e.length/t:0,this.dynamic=!1,this.updateRange={offset:0,count:-1},this.version=0};e.prototype.setArray=function(e){this.count=void 0!==e?e.length/this.stride:0,this.array=e},zen3d.InterleavedBuffer=e}(),function(){var e=function(e,t,n,i){this.uuid=zen3d.generateUUID(),this.data=e,this.size=t,this.offset=n,this.normalized=!0===i};e.prototype.isInterleavedBufferAttribute=!0,Object.defineProperties(e.prototype,{count:{get:function(){return this.data.count}},array:{get:function(){return this.data.array}}}),zen3d.InterleavedBufferAttribute=e}(),function(){var e=function(){e.superClass.constructor.call(this),this.uuid=zen3d.generateUUID(),this.attributes={},this.index=null,this.usageType=zen3d.WEBGL_BUFFER_USAGE.STATIC_DRAW,this.boundingBox=new zen3d.Box3,this.boundingSphere=new zen3d.Sphere,this.dirtyRange={enable:!1,start:0,count:0},this.groups=[]};zen3d.inherit(e,zen3d.EventDispatcher),e.prototype.addAttribute=function(e,t){this.attributes[e]=t},e.prototype.getAttribute=function(e){return this.attributes[e]},e.prototype.removeAttribute=function(e){delete this.attributes[e]},e.prototype.setIndex=function(e){Array.isArray(e)?this.index=new zen3d.BufferAttribute(new Uint16Array(e),1):this.index=e},e.prototype.addGroup=function(e,t,n){this.groups.push({start:e,count:t,materialIndex:void 0!==n?n:0})},e.prototype.clearGroups=function(){this.groups=[]},e.prototype.computeBoundingBox=function(){var e=this.attributes.a_Position||this.attributes.position;if(e.isInterleavedBufferAttribute){var t=e.data;this.boundingBox.setFromArray(t.array,t.stride)}else this.boundingBox.setFromArray(e.array,e.size)},e.prototype.computeBoundingSphere=function(){var e=this.attributes.a_Position||this.attributes.position;if(e.isInterleavedBufferAttribute){var t=e.data;this.boundingSphere.setFromArray(t.array,t.stride)}else this.boundingSphere.setFromArray(e.array,e.size)},e.prototype.dispose=function(){this.dispatchEvent({type:"dispose"})},zen3d.Geometry=e}(),function(){var e=function(t,n,i,r,a,o){e.superClass.constructor.call(this),this.buildGeometry(t,n,i,r,a,o)};zen3d.inherit(e,zen3d.Geometry),e.prototype.buildGeometry=function(e,t,n,i,r,a){function o(e,t,n,i,r,a,o,f,_,v,m){var g,E,y=a/_,T=o/v,x=a/2,M=o/2,S=f/2,w=_+1,z=v+1,A=0,L=0,b=new zen3d.Vector3;for(E=0;E<z;E++){var P=E*T-M;for(g=0;g<w;g++){var R=g*y-x;b[e]=R*i,b[t]=P*r,b[n]=S,h.push(b.x,b.y,b.z),b[e]=0,b[t]=0,b[n]=f>0?1:-1,d.push(b.x,b.y,b.z),l.push(g/_),l.push(1-E/v),A+=1}}for(E=0;E<v;E++)for(g=0;g<_;g++){var C=c+g+w*E,N=c+g+w*(E+1),I=c+(g+1)+w*(E+1),D=c+(g+1)+w*E;u.push(C,N,D),u.push(N,I,D),L+=6}s.addGroup(p,L,m),p+=L,c+=A}var s=this;e=e||1,t=t||1,n=n||1,i=Math.floor(i)||1,r=Math.floor(r)||1;var u=[],h=[],d=[],l=[],c=0,p=0;o("z","y","x",-1,-1,n,t,e,a=Math.floor(a)||1,r,0),o("z","y","x",1,-1,n,t,-e,a,r,1),o("x","z","y",1,1,e,n,t,i,a,2),o("x","z","y",1,-1,e,n,-t,i,a,3),o("x","y","z",1,-1,e,t,n,i,r,4),o("x","y","z",-1,-1,e,t,-n,i,r,5),this.setIndex(u),this.addAttribute("a_Position",new zen3d.BufferAttribute(new Float32Array(h),3)),this.addAttribute("a_Normal",new zen3d.BufferAttribute(new Float32Array(d),3)),this.addAttribute("a_Uv",new zen3d.BufferAttribute(new Float32Array(l),2)),this.computeBoundingBox(),this.computeBoundingSphere()},zen3d.CubeGeometry=e}(),function(){var e=function(t,n,i,r){e.superClass.constructor.call(this),this.buildGeometry(t,n,i,r)};zen3d.inherit(e,zen3d.Geometry),e.prototype.buildGeometry=function(e,t,n,i){var r,a,o=(e=e||1)/2,s=(t=t||1)/2,u=Math.floor(n)||1,h=Math.floor(i)||1,d=u+1,l=h+1,c=e/u,p=t/h,f=[],_=[],v=[],m=[];for(a=0;a<l;a++){var g=a*p-s;for(r=0;r<d;r++){var E=r*c-o;_.push(E,0,g),v.push(0,1,0),m.push(r/u),m.push(1-a/h)}}for(a=0;a<h;a++)for(r=0;r<u;r++){var y=r+d*a,T=r+d*(a+1),x=r+1+d*(a+1),M=r+1+d*a;f.push(y,T,M),f.push(T,x,M)}this.setIndex(f),this.addAttribute("a_Position",new zen3d.BufferAttribute(new Float32Array(_),3)),this.addAttribute("a_Normal",new zen3d.BufferAttribute(new Float32Array(v),3)),this.addAttribute("a_Uv",new zen3d.BufferAttribute(new Float32Array(m),2)),this.computeBoundingBox(),this.computeBoundingSphere()},zen3d.PlaneGeometry=e}(),function(){var e=function(t,n,i,r,a,o,s){e.superClass.constructor.call(this),this.buildGeometry(t,n,i,r,a,o,s)};zen3d.inherit(e,zen3d.Geometry),e.prototype.buildGeometry=function(e,t,n,i,r,a,o){e=e||1,t=Math.max(3,Math.floor(t)||8),n=Math.max(2,Math.floor(n)||6),i=void 0!==i?i:0,r=void 0!==r?r:2*Math.PI;var s,u,h=(a=void 0!==a?a:0)+(o=void 0!==o?o:Math.PI),d=0,l=[],c=new zen3d.Vector3,p=new zen3d.Vector3,f=[],_=[],v=[],m=[];for(u=0;u<=n;u++){var g=[],E=u/n;for(s=0;s<=t;s++){var y=s/t;c.x=-e*Math.cos(i+y*r)*Math.sin(a+E*o),c.y=e*Math.cos(a+E*o),c.z=e*Math.sin(i+y*r)*Math.sin(a+E*o),_.push(c.x,c.y,c.z),p.set(c.x,c.y,c.z).normalize(),v.push(p.x,p.y,p.z),m.push(y,1-E),g.push(d++)}l.push(g)}for(u=0;u<n;u++)for(s=0;s<t;s++){var T=l[u][s+1],x=l[u][s],M=l[u+1][s],S=l[u+1][s+1];(0!==u||a>0)&&f.push(T,x,S),(u!==n-1||h<Math.PI)&&f.push(x,M,S)}this.setIndex(f),this.addAttribute("a_Position",new zen3d.BufferAttribute(new Float32Array(_),3)),this.addAttribute("a_Normal",new zen3d.BufferAttribute(new Float32Array(v),3)),this.addAttribute("a_Uv",new zen3d.BufferAttribute(new Float32Array(m),2)),this.computeBoundingBox(),this.computeBoundingSphere()},zen3d.SphereGeometry=e}(),function(){var e=function(t,n,i,r,a,o,s,u){e.superClass.constructor.call(this),this.buildGeometry(t,n,i,r,a,o,s,u)};zen3d.inherit(e,zen3d.Geometry),e.prototype.buildGeometry=function(e,t,n,i,r,a,o,s){function u(n){var r,a,u,_=new zen3d.Vector2,g=new zen3d.Vector3,E=0,y=!0===n?e:t,T=!0===n?1:-1;for(a=f,r=1;r<=i;r++)l.push(0,v*T,0),c.push(0,T,0),p.push(.5,.5),f++;for(u=f,r=0;r<=i;r++){var x=r/i*s+o,M=Math.cos(x),S=Math.sin(x);g.x=y*S,g.y=v*T,g.z=y*M,l.push(g.x,g.y,g.z),c.push(0,T,0),_.x=.5*M+.5,_.y=.5*S*T+.5,p.push(_.x,_.y),f++}for(r=0;r<i;r++){var w=a+r,z=u+r;!0===n?d.push(z,z+1,w):d.push(z+1,z,w),E+=3}h.addGroup(m,E,!0===n?1:2),m+=E}var h=this;e=void 0!==e?e:1,t=void 0!==t?t:1,n=n||1,i=Math.floor(i)||8,r=Math.floor(r)||1,a=void 0!==a&&a,o=void 0!==o?o:0,s=void 0!==s?s:2*Math.PI;var d=[],l=[],c=[],p=[],f=0,_=[],v=n/2,m=0;!function(){var a,u,g=new zen3d.Vector3,E=new zen3d.Vector3,y=0,T=(t-e)/n;for(u=0;u<=r;u++){var x=[],M=u/r,S=M*(t-e)+e;for(a=0;a<=i;a++){var w=a/i,z=w*s+o,A=Math.sin(z),L=Math.cos(z);E.x=S*A,E.y=-M*n+v,E.z=S*L,l.push(E.x,E.y,E.z),g.set(A,T,L).normalize(),c.push(g.x,g.y,g.z),p.push(w,1-M),x.push(f++)}_.push(x)}for(a=0;a<i;a++)for(u=0;u<r;u++){var b=_[u][a],P=_[u+1][a],R=_[u+1][a+1],C=_[u][a+1];d.push(b,P,C),d.push(P,R,C),y+=6}h.addGroup(m,y,0),m+=y}(),!1===a&&(e>0&&u(!0),t>0&&u(!1)),this.setIndex(d),this.addAttribute("a_Position",new zen3d.BufferAttribute(new Float32Array(l),3)),this.addAttribute("a_Normal",new zen3d.BufferAttribute(new Float32Array(c),3)),this.addAttribute("a_Uv",new zen3d.BufferAttribute(new Float32Array(p),2)),this.computeBoundingBox(),this.computeBoundingSphere()},zen3d.CylinderGeometry=e}(),function(){var e=function(){e.superClass.constructor.call(this),this.uuid=zen3d.generateUUID(),this.textureType="",this.border=0,this.pixelFormat=zen3d.WEBGL_PIXEL_FORMAT.RGBA,this.pixelType=zen3d.WEBGL_PIXEL_TYPE.UNSIGNED_BYTE,this.magFilter=zen3d.WEBGL_TEXTURE_FILTER.LINEAR,this.minFilter=zen3d.WEBGL_TEXTURE_FILTER.LINEAR_MIPMAP_LINEAR,this.wrapS=zen3d.WEBGL_TEXTURE_WRAP.CLAMP_TO_EDGE,this.wrapT=zen3d.WEBGL_TEXTURE_WRAP.CLAMP_TO_EDGE,this.anisotropy=1,this.generateMipmaps=!0,this.encoding=zen3d.TEXEL_ENCODING_TYPE.LINEAR,this.version=0};zen3d.inherit(e,zen3d.EventDispatcher),e.prototype.dispose=function(){this.dispatchEvent({type:"dispose"}),this.version=0},zen3d.TextureBase=e}(),function(){var e=function(){e.superClass.constructor.call(this),this.textureType=zen3d.WEBGL_TEXTURE_TYPE.TEXTURE_2D,this.image=null,this.mipmaps=[]};zen3d.inherit(e,zen3d.TextureBase),e.fromImage=function(t){var n=new e;return n.image=t,n.version++,n},e.fromSrc=function(t){var n=new e,i=t.search(/\.(jpg|jpeg)$/)>0||0===t.search(/^data\:image\/jpeg/);return(t.search(/\.(tga)$/)>0||0===t.search(/^data\:image\/tga/)?new zen3d.TGALoader:new zen3d.ImageLoader).load(t,function(e){n.pixelFormat=i?zen3d.WEBGL_PIXEL_FORMAT.RGB:zen3d.WEBGL_PIXEL_FORMAT.RGBA,n.image=e,n.version++,n.dispatchEvent({type:"onload"})}),n},zen3d.Texture2D=e}(),function(){var e=function(){e.superClass.constructor.call(this),this.textureType=zen3d.WEBGL_TEXTURE_TYPE.TEXTURE_CUBE_MAP,this.images=[]};zen3d.inherit(e,zen3d.TextureBase),e.fromImage=function(t){for(var n=new e,i=n.images,r=0;r<6;r++)i[r]=t[r];return n.version++,n},e.fromSrc=function(t){function n(e){e&&(a.push(e),h++),h>=6?i():(u?new zen3d.TGALoader:new zen3d.ImageLoader).load(t[h],n)}function i(){r.pixelFormat=s?zen3d.WEBGL_PIXEL_FORMAT.RGB:zen3d.WEBGL_PIXEL_FORMAT.RGBA,r.version++,r.dispatchEvent({type:"onload"})}var r=new e,a=r.images,o=t[0],s=o.search(/\.(jpg|jpeg)$/)>0||0===o.search(/^data\:image\/jpeg/),u=o.search(/\.(tga)$/)>0||0===o.search(/^data\:image\/tga/),h=0;return n(),r},zen3d.TextureCube=e}(),function(){var e=function(t,n,i){e.superClass.constructor.call(this),this.image={data:t,width:n,height:i},this.pixelType=zen3d.WEBGL_PIXEL_TYPE.FLOAT,this.magFilter=zen3d.WEBGL_TEXTURE_FILTER.NEAREST,this.minFilter=zen3d.WEBGL_TEXTURE_FILTER.NEAREST,this.generateMipmaps=!1};zen3d.inherit(e,zen3d.Texture2D),e.prototype.isDataTexture=!0,zen3d.TextureData=e}(),function(){var e=function(t,n){e.superClass.constructor.call(this),this.image={width:t,height:n},this.pixelType=zen3d.WEBGL_PIXEL_TYPE.UNSIGNED_SHORT,this.pixelFormat=zen3d.WEBGL_PIXEL_FORMAT.DEPTH_COMPONENT,this.magFilter=zen3d.WEBGL_TEXTURE_FILTER.NEAREST,this.minFilter=zen3d.WEBGL_TEXTURE_FILTER.NEAREST,this.generateMipmaps=!1};zen3d.inherit(e,zen3d.Texture2D),e.prototype.isDepthTexture=!0,zen3d.TextureDepth=e}(),function(){var e=zen3d.BLEND_EQUATION,t=zen3d.BLEND_FACTOR,n=function(){this.type="",this.opacity=1,this.transparent=!1,this.blending=zen3d.BLEND_TYPE.NORMAL,this.blendSrc=t.SRC_ALPHA,this.blendDst=t.ONE_MINUS_SRC_ALPHA,this.blendEquation=e.ADD,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.premultipliedAlpha=!1,this.vertexColors=!1,this.diffuse=new zen3d.Color3(16777215),this.diffuseMap=null,this.normalMap=null,this.aoMap=null,this.aoMapIntensity=1,this.bumpMap=null,this.bumpScale=1,this.envMap=null,this.envMapIntensity=1,this.envMapCombine=zen3d.ENVMAP_COMBINE_TYPE.MULTIPLY,this.emissive=new zen3d.Color3(0),this.emissiveMap=null,this.emissiveIntensity=1,this.depthTest=!0,this.depthWrite=!0,this.alphaTest=0,this.side=zen3d.DRAW_SIDE.FRONT,this.shading=zen3d.SHADING_TYPE.SMOOTH_SHADING,this.acceptLight=!1,this.drawMode=zen3d.DRAW_MODE.TRIANGLES};n.prototype.clone=function(){return(new this.constructor).copy(this)},n.prototype.copy=function(e){return this.type=e.type,this.opacity=e.opacity,this.transparent=e.transparent,this.premultipliedAlpha=e.premultipliedAlpha,this.vertexColors=e.vertexColors,this.diffuse.copy(e.diffuse),this.diffuseMap=e.diffuseMap,this.normalMap=e.normalMap,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.envMap=e.envMap,this.envMapIntensity=e.envMapIntensity,this.envMapCombine=e.envMapCombine,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.blending=e.blending,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.alphaTest=e.alphaTest,this.side=e.side,this.shading=e.shading,this.acceptLight=e.acceptLight,this.drawMode=e.drawMode,this},zen3d.Material=n}(),function(){var e=function(){e.superClass.constructor.call(this),this.type=zen3d.MATERIAL_TYPE.BASIC};zen3d.inherit(e,zen3d.Material),zen3d.BasicMaterial=e}(),function(){var e=function(){e.superClass.constructor.call(this),this.type=zen3d.MATERIAL_TYPE.LAMBERT,this.acceptLight=!0};zen3d.inherit(e,zen3d.Material),zen3d.LambertMaterial=e}(),function(){var e=function(){e.superClass.constructor.call(this),this.type=zen3d.MATERIAL_TYPE.PHONG,this.shininess=30,this.specular=new zen3d.Color3(6710886),this.specularMap=null,this.acceptLight=!0};zen3d.inherit(e,zen3d.Material),e.prototype.copy=function(t){return e.superClass.copy.call(this,t),this.shininess=t.shininess,this.specular.copy(t.specular),this.specularMap=t.specularMap,this},zen3d.PhongMaterial=e}(),function(){var e=function(){e.superClass.constructor.call(this),this.type=zen3d.MATERIAL_TYPE.PBR,this.roughness=.5,this.metalness=.5,this.roughnessMap=null,this.metalnessMap=null,this.acceptLight=!0};zen3d.inherit(e,zen3d.Material),e.prototype.copy=function(t){return e.superClass.copy.call(this,t),this.roughness=t.roughness,this.metalness=t.metalness,this},zen3d.PBRMaterial=e}(),function(){var e=function(){e.superClass.constructor.call(this),this.type=zen3d.MATERIAL_TYPE.CUBE,this.side=zen3d.DRAW_SIDE.BACK,this.cubeMap=null};zen3d.inherit(e,zen3d.Material),e.prototype.copy=function(t){return e.superClass.copy.call(this,t),this.cubeMap=t.cubeMap,this},zen3d.CubeMaterial=e}(),function(){var e=function(){e.superClass.constructor.call(this),this.type=zen3d.MATERIAL_TYPE.POINT,this.size=1,this.sizeAttenuation=!0,this.drawMode=zen3d.DRAW_MODE.POINTS};zen3d.inherit(e,zen3d.Material),e.prototype.copy=function(t){return e.superClass.copy.call(this,t),this.size=t.size,this.sizeAttenuation=t.sizeAttenuation,this},zen3d.PointsMaterial=e}(),function(){var e=function(){e.superClass.constructor.call(this),this.type=zen3d.MATERIAL_TYPE.LINE,this.lineWidth=1,this.drawMode=zen3d.DRAW_MODE.LINES};zen3d.inherit(e,zen3d.Material),e.prototype.copy=function(t){return e.superClass.copy.call(this,t),this.lineWidth=t.lineWidth,this},zen3d.LineMaterial=e}(),function(){var e=function(){e.superClass.constructor.call(this),this.type=zen3d.MATERIAL_TYPE.LINE_LOOP,this.lineWidth=1,this.drawMode=zen3d.DRAW_MODE.LINE_LOOP};zen3d.inherit(e,zen3d.Material),e.prototype.copy=function(t){return e.superClass.copy.call(this,t),this.lineWidth=t.lineWidth,this},zen3d.LineLoopMaterial=e}(),function(){var e=function(){e.superClass.constructor.call(this),this.type=zen3d.MATERIAL_TYPE.LINE_DASHED,this.lineWidth=1,this.scale=1,this.dashSize=3,this.gapSize=1,this.drawMode=zen3d.DRAW_MODE.LINE_STRIP};zen3d.inherit(e,zen3d.Material),e.prototype.copy=function(t){return e.superClass.copy.call(this,t),this.lineWidth=t.lineWidth,this.scale=t.scale,this.dashSize=t.dashSize,this.gapSize=t.gapSize,this},zen3d.LineDashedMaterial=e}(),function(){var e=function(){e.superClass.constructor.call(this),this.type=zen3d.MATERIAL_TYPE.SPRITE,this.rotation=0,this.fog=!1};zen3d.inherit(e,zen3d.Material),e.prototype.copy=function(t){return e.superClass.copy.call(this,t),this.rotation=t.rotation,this.fog=t.fog,this},zen3d.SpriteMaterial=e}(),function(){var e=function(t,n,i){e.superClass.constructor.call(this),this.type=zen3d.MATERIAL_TYPE.SHADER,this.vertexShader=t||"",this.fragmentShader=n||"",this.defines={},this.uniforms=i||{}};zen3d.inherit(e,zen3d.Material),e.prototype.copy=function(t){return e.superClass.copy.call(this,t),this.vertexShader=t.vertexShader,this.fragmentShader=t.fragmentShader,this},zen3d.ShaderMaterial=e}(),function(){var e=function(){e.superClass.constructor.call(this),this.type=zen3d.MATERIAL_TYPE.DEPTH,this.blending=zen3d.BLEND_TYPE.NONE,this.packToRGBA=!1};zen3d.inherit(e,zen3d.Material),zen3d.DepthMaterial=e}(),function(){var e=function(){e.superClass.constructor.call(this),this.type=zen3d.MATERIAL_TYPE.DISTANCE,this.blending=zen3d.BLEND_TYPE.NONE};zen3d.inherit(e,zen3d.Material),zen3d.DistanceMaterial=e}(),function(){var e=function(){e.superClass.constructor.call(this),this.type=zen3d.MATERIAL_TYPE.PARTICLE,this.transparent=!0,this.blending=zen3d.BLEND_TYPE.ADD,this.depthTest=!0,this.depthWrite=!1,this.drawMode=zen3d.DRAW_MODE.POINTS};zen3d.inherit(e,zen3d.Material),zen3d.ParticleMaterial=e}(),function(){var e=function(){this.uuid=zen3d.generateUUID(),this.name="",this.type="",this.position=new zen3d.Vector3,this.scale=new zen3d.Vector3(1,1,1);var e=this.euler=new zen3d.Euler,t=this.quaternion=new zen3d.Quaternion;e.onChange(function(){t.setFromEuler(e,!1)}),t.onChange(function(){e.setFromQuaternion(t,void 0,!1)}),this.matrix=new zen3d.Matrix4,this.worldMatrix=new zen3d.Matrix4,this.children=new Array,this.parent=null,this.castShadow=!1,this.receiveShadow=!1,this.shadowType=zen3d.SHADOW_TYPE.PCF_SOFT,this.frustumCulled=!0,this.userData={}};Object.defineProperties(e.prototype,{rotation:{get:function(){return this.euler},set:function(e){this.euler.copyFrom(e),this.quaternion.setFromEuler(e)}}}),e.prototype.add=function(e){this.children.push(e),e.parent=this},e.prototype.remove=function(e){var t=this.children.indexOf(e);-1!==t&&this.children.splice(t,1),e.parent=null},e.prototype.getObjectByName=function(e){return this.getObjectByProperty("name",e)},e.prototype.getObjectByProperty=function(e,t){if(this[e]===t)return this;for(var n=0,i=this.children.length;n<i;n++){var r=this.children[n].getObjectByProperty(e,t);if(void 0!==r)return r}},e.prototype.updateMatrix=function(){var e=this.matrix.transform(this.position,this.scale,this.quaternion);if(this.worldMatrix.copy(e),this.parent){var t=this.parent.worldMatrix;this.worldMatrix.premultiply(t)}for(var n=this.children,i=0,r=n.length;i<r;i++)n[i].updateMatrix()},e.prototype.getWorldDirection=function(){var e=new zen3d.Vector3,t=new zen3d.Quaternion,n=new zen3d.Vector3;return function(i){var r=i||new zen3d.Vector3;return this.worldMatrix.decompose(e,t,n),r.set(0,0,1).applyQuaternion(t),r}}(),e.prototype.lookAt=function(){var e=new zen3d.Matrix4;return function(t,n){e.lookAtRH(t,this.position,n),this.quaternion.setFromRotationMatrix(e)}}(),e.prototype.raycast=function(){},e.prototype.traverse=function(e){e(this);for(var t=this.children,n=0,i=t.length;n<i;n++)t[n].traverse(e)},e.prototype.clone=function(e){return(new this.constructor).copy(this,e)},e.prototype.copy=function(e,t){if(void 0===t&&(t=!0),this.name=e.name,this.type=e.type,this.position.copy(e.position),this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.worldMatrix.copy(e.worldMatrix),this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.userData=JSON.parse(JSON.stringify(e.userData)),!0===t)for(var n=0;n<e.children.length;n++){var i=e.children[n];this.add(i.clone())}return this},zen3d.Object3D=e}(),function(){var e=function(){e.superClass.constructor.call(this),this.type=zen3d.OBJECT_TYPE.SCENE,this.overrideMaterial=null,this.fog=null,this.clippingPlanes=[],this._renderLists={},this.lights=new zen3d.LightCache};zen3d.inherit(e,zen3d.Object3D),e.prototype.updateRenderList=function(e){var t=e.uuid;this._renderLists[t]||(this._renderLists[t]=new zen3d.RenderList);var n=this._renderLists[t];return n.startCount(),this._doUpdateRenderList(this,e,n),n.endCount(),n.sort(),n},e.prototype.getRenderList=function(e){return this._renderLists[e.uuid]},e.prototype.updateLights=function(){this.lights;return this.lights.startCount(),this._doUpdateLights(this),this.lights.endCount(),this.lights};var t=zen3d.OBJECT_TYPE;e.prototype._doUpdateRenderList=function(e,n,i){if(e.geometry&&e.material&&i.add(e,n),t.CANVAS2D!==e.type)for(var r=e.children,a=0,o=r.length;a<o;a++)this._doUpdateRenderList(r[a],n,i)},e.prototype._doUpdateLights=function(e){if(t.LIGHT===e.type&&this.lights.add(e),t.CANVAS2D!==e.type)for(var n=e.children,i=0,r=n.length;i<r;i++)this._doUpdateLights(n[i])},zen3d.Scene=e}(),zen3d.Fog=function(e,t,n){this.fogType=zen3d.FOG_TYPE.NORMAL,this.color=new zen3d.Color3(void 0!==e?e:0),this.near=void 0!==t?t:1,this.far=void 0!==n?n:1e3},zen3d.FogExp2=function(e,t){this.fogType=zen3d.FOG_TYPE.EXP2,this.color=new zen3d.Color3(void 0!==e?e:0),this.density=void 0!==t?t:25e-5},function(){var e=function(){e.superClass.constructor.call(this),this.type=zen3d.OBJECT_TYPE.GROUP};zen3d.inherit(e,zen3d.Object3D),zen3d.Group=e}(),function(){var e=function(){e.superClass.constructor.call(this),this.type=zen3d.OBJECT_TYPE.LIGHT,this.lightType="",this.color=new zen3d.Color3(16777215),this.intensity=1};zen3d.inherit(e,zen3d.Object3D),e.prototype.copy=function(t){return e.superClass.copy.call(this,t),this.type=t.type,this.lightType=t.lightType,this.color.copy(t.color),this.intensity=t.intensity,this},zen3d.Light=e}(),function(){var e=function(){e.superClass.constructor.call(this),this.lightType=zen3d.LIGHT_TYPE.AMBIENT};zen3d.inherit(e,zen3d.Light),zen3d.AmbientLight=e}(),function(){var e=function(){e.superClass.constructor.call(this),this.lightType=zen3d.LIGHT_TYPE.DIRECT,this.shadow=new zen3d.DirectionalLightShadow};zen3d.inherit(e,zen3d.Light),e.prototype.copy=function(t){return e.superClass.copy.call(this,t),this.shadow.copy(t.shadow),this},zen3d.DirectionalLight=e}(),function(){var e=function(){e.superClass.constructor.call(this),this.lightType=zen3d.LIGHT_TYPE.POINT,this.decay=2,this.distance=200,this.shadow=new zen3d.PointLightShadow};zen3d.inherit(e,zen3d.Light),e.prototype.copy=function(t){return e.superClass.copy.call(this,t),this.shadow.copy(t.shadow),this},zen3d.PointLight=e}(),function(){var e=function(){e.superClass.constructor.call(this),this.lightType=zen3d.LIGHT_TYPE.SPOT,this.decay=2,this.distance=200,this.penumbra=0,this.angle=Math.PI/6,this.shadow=new zen3d.SpotLightShadow};zen3d.inherit(e,zen3d.Light),e.prototype.copy=function(t){return e.superClass.copy.call(this,t),this.shadow.copy(t.shadow),this},zen3d.SpotLight=e}(),function(){var e=function(){this.camera=new zen3d.Camera,this.matrix=new zen3d.Matrix4,this.bias=3e-4,this.radius=2,this.cameraNear=1,this.cameraFar=500,this.mapSize=new zen3d.Vector2(512,512),this.renderTarget=null,this.map=null};e.prototype.update=function(e,t){},e.prototype.copy=function(e){return this.camera.copy(e.camera),this.matrix.copy(e.matrix),this.bias=e.bias,this.radius=e.radius,this.cameraNear=e.cameraNear,this.cameraFar=e.cameraFar,this.mapSize.copy(e.mapSize),this},e.prototype.clone=function(){return(new this.constructor).copy(this)},zen3d.LightShadow=e}(),function(){var e=function(){e.superClass.constructor.call(this),this.camera.frustumCulled=!1,this.renderTarget=new zen3d.RenderTarget2D(this.mapSize.x,this.mapSize.y);var t=this.renderTarget.texture;t.generateMipmaps=!1,t.minFilter=zen3d.WEBGL_TEXTURE_FILTER.LINEAR,this.map=t,this.windowSize=500,this._lookTarget=new zen3d.Vector3,this._up=new zen3d.Vector3(0,1,0)};zen3d.inherit(e,zen3d.LightShadow),e.prototype.update=function(e){this._updateCamera(e),this._updateMatrix(),this.mapSize.x===this.renderTarget.width&&this.mapSize.y===this.renderTarget.height||this.renderTarget.resize(this.mapSize.x,this.mapSize.y)},e.prototype._updateCamera=function(e){var t=this.camera,n=this._lookTarget;e.getWorldDirection(this._lookTarget),t.position.setFromMatrixPosition(e.worldMatrix),n.set(n.x+t.position.x,n.y+t.position.y,n.z+t.position.z),t.lookAt(n,this._up),t.updateMatrix();var i=this.windowSize/2;t.setOrtho(-i,i,-i,i,this.cameraNear,this.cameraFar)},e.prototype._updateMatrix=function(){var e=this.matrix,t=this.camera;e.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),e.multiply(t.projectionMatrix),e.multiply(t.viewMatrix)},e.prototype.copy=function(t){return e.superClass.copy.call(this,t),this.windowSize=t.windowSize,this},zen3d.DirectionalLightShadow=e}(),function(){var e=function(){e.superClass.constructor.call(this),this.renderTarget=new zen3d.RenderTarget2D(this.mapSize.x,this.mapSize.y);var t=this.renderTarget.texture;t.generateMipmaps=!1,t.minFilter=zen3d.WEBGL_TEXTURE_FILTER.LINEAR,this.map=t,this._lookTarget=new zen3d.Vector3,this._up=new zen3d.Vector3(0,1,0)};zen3d.inherit(e,zen3d.LightShadow),e.prototype.update=function(e){this._updateCamera(e),this._updateMatrix(),this.mapSize.x===this.renderTarget.width&&this.mapSize.y===this.renderTarget.height||this.renderTarget.resize(this.mapSize.x,this.mapSize.y)},e.prototype._updateCamera=function(e){var t=this.camera,n=this._lookTarget;e.getWorldDirection(this._lookTarget),t.position.setFromMatrixPosition(e.worldMatrix),n.set(n.x+t.position.x,n.y+t.position.y,n.z+t.position.z),t.lookAt(n,this._up),t.updateMatrix(),t.setPerspective(2*e.angle,1,this.cameraNear,this.cameraFar)},e.prototype._updateMatrix=function(){var e=this.matrix,t=this.camera;e.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),e.multiply(t.projectionMatrix),e.multiply(t.viewMatrix)},zen3d.SpotLightShadow=e}(),function(){var e=function(){e.superClass.constructor.call(this),this.renderTarget=new zen3d.RenderTargetCube(this.mapSize.x,this.mapSize.y);var t=this.renderTarget.texture;t.generateMipmaps=!1,t.minFilter=zen3d.WEBGL_TEXTURE_FILTER.LINEAR,this.map=t,this._targets=[new zen3d.Vector3(1,0,0),new zen3d.Vector3(-1,0,0),new zen3d.Vector3(0,1,0),new zen3d.Vector3(0,-1,0),new zen3d.Vector3(0,0,1),new zen3d.Vector3(0,0,-1)],this._ups=[new zen3d.Vector3(0,-1,0),new zen3d.Vector3(0,-1,0),new zen3d.Vector3(0,0,1),new zen3d.Vector3(0,0,-1),new zen3d.Vector3(0,-1,0),new zen3d.Vector3(0,-1,0)],this._lookTarget=new zen3d.Vector3};zen3d.inherit(e,zen3d.LightShadow),e.prototype.update=function(e,t){this._updateCamera(e,t),this._updateMatrix(),this.mapSize.x===this.renderTarget.width&&this.mapSize.y===this.renderTarget.height||this.renderTarget.resize(this.mapSize.x,this.mapSize.y)},e.prototype._updateCamera=function(e,t){var n=this.camera,i=this._lookTarget,r=this._targets,a=this._ups;n.position.setFromMatrixPosition(e.worldMatrix),i.set(r[t].x+n.position.x,r[t].y+n.position.y,r[t].z+n.position.z),n.lookAt(i,a[t]),n.updateMatrix(),n.setPerspective(.5*Math.PI,1,this.cameraNear,this.cameraFar)},e.prototype._updateMatrix=function(){var e=this.matrix,t=this.camera;e.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),e.multiply(t.projectionMatrix),e.multiply(t.viewMatrix)},zen3d.PointLightShadow=e}(),function(){var e=function(){e.superClass.constructor.call(this),this.type=zen3d.OBJECT_TYPE.CAMERA,this.viewMatrix=new zen3d.Matrix4,this.projectionMatrix=new zen3d.Matrix4,this.frustum=new zen3d.Frustum,this.gammaFactor=2,this.gammaInput=!1,this.gammaOutput=!1,this.rect=new zen3d.Vector4(0,0,1,1),this.frustumCulled=!0};zen3d.inherit(e,zen3d.Object3D),e.prototype.lookAt=function(){var e=new zen3d.Matrix4;return function(t,n){e.lookAtRH(this.position,t,n),this.quaternion.setFromRotationMatrix(e)}}(),e.prototype.setOrtho=function(e,t,n,i,r,a){this.projectionMatrix.set(2/(t-e),0,0,-(t+e)/(t-e),0,2/(i-n),0,-(i+n)/(i-n),0,0,-2/(a-r),-(a+r)/(a-r),0,0,0,1)},e.prototype.setPerspective=function(e,t,n,i){this.projectionMatrix.set(1/(t*Math.tan(e/2)),0,0,0,0,1/Math.tan(e/2),0,0,0,0,-(i+n)/(i-n),-2*i*n/(i-n),0,0,-1,0)},e.prototype.getWorldDirection=function(){var e=new zen3d.Vector3,t=new zen3d.Quaternion,n=new zen3d.Vector3;return function(i){var r=i||new zen3d.Vector3;return this.worldMatrix.decompose(e,t,n),r.set(0,0,-1).applyQuaternion(t),r}}();var t=new zen3d.Matrix4;e.prototype.updateMatrix=function(){e.superClass.updateMatrix.call(this),this.viewMatrix.getInverse(this.worldMatrix),t.multiplyMatrices(this.projectionMatrix,this.viewMatrix),this.frustum.setFromMatrix(t)},e.prototype.copy=function(t,n){return e.superClass.copy.call(this,t,n),this.viewMatrix.copy(t.viewMatrix),this.projectionMatrix.copy(t.projectionMatrix),this},zen3d.Camera=e}(),function(){var e=function(t,n){e.superClass.constructor.call(this),this.geometry=t,this.material=n,this.type=zen3d.OBJECT_TYPE.MESH};zen3d.inherit(e,zen3d.Object3D),e.prototype.raycast=function(){function e(e,t,n,i,r,a,s){return zen3d.Triangle.barycoordFromPoint(e,t,n,i,o),r.multiplyScalar(o.x),a.multiplyScalar(o.y),s.multiplyScalar(o.z),r.add(a).add(s),r.clone()}function t(e,t,n,i,r,a,o){e.material;if(null===n.intersectTriangle(a,r,i,!0,o))return null;f.copy(o),f.applyMatrix4(e.worldMatrix);var s=t.ray.origin.distanceTo(f);return s<t.near||s>t.far?null:{distance:s,point:f.clone(),object:e}}var n=new zen3d.Sphere,i=new zen3d.Box3,r=new zen3d.Matrix4,a=new zen3d.Ray,o=new zen3d.Vector3,s=new zen3d.Vector3,u=new zen3d.Vector3,h=new zen3d.Vector3,d=new zen3d.Vector2,l=new zen3d.Vector2,c=new zen3d.Vector2,p=new zen3d.Vector3,f=new zen3d.Vector3;return function(o,f){var _=this.geometry,v=this.worldMatrix;if(n.copy(_.boundingSphere),n.applyMatrix4(v),o.ray.intersectsSphere(n)&&(i.copy(_.boundingBox),i.applyMatrix4(v),o.ray.intersectsBox(i))){r.getInverse(v),a.copy(o.ray).applyMatrix4(r);for(var m,g,E,y=_.index.array,T=_.getAttribute("a_Position"),x=_.getAttribute("a_Uv"),M=0;M<y.length;M+=3){m=y[M],g=y[M+1],E=y[M+2],s.fromArray(T.array,3*m),u.fromArray(T.array,3*g),h.fromArray(T.array,3*E);var S=t(this,o,a,s,u,h,p);S&&(d.fromArray(x.array,2*m),l.fromArray(x.array,2*g),c.fromArray(x.array,2*E),S.uv=e(p,s,u,h,d,l,c),S.face=[m,g,E],S.faceIndex=m,f.push(S))}}}}(),e.prototype.clone=function(){return new this.constructor(this.geometry,this.material).copy(this)},zen3d.Mesh=e}(),function(){var e=function(t,n){e.superClass.constructor.call(this,t,n),this.type=zen3d.OBJECT_TYPE.SKINNED_MESH,this.skeleton=void 0};zen3d.inherit(e,zen3d.Mesh),e.prototype.updateMatrix=function(){e.superClass.updateMatrix.call(this),this.skeleton&&this.skeleton.updateBones()},e.prototype.clone=function(){return new this.constructor(this.geometry,this.material).copy(this)},zen3d.SkinnedMesh=e}(),function(){var e=function(t,n){e.superClass.constructor.call(this),this.geometry=t,this.material=n,this.type=zen3d.OBJECT_TYPE.POINT};zen3d.inherit(e,zen3d.Object3D),zen3d.Points=e}(),function(){var e=function(t,n){e.superClass.constructor.call(this),this.geometry=t,this.material=n,this.type=zen3d.OBJECT_TYPE.LINE};zen3d.inherit(e,zen3d.Object3D),e.prototype.raycast=function(){},zen3d.Line=e}(),function(){var e=new zen3d.Geometry,t=new Float32Array([-.5,-.5,0,0,.5,-.5,1,0,.5,.5,1,1,-.5,.5,0,1]),n=new zen3d.InterleavedBuffer(t,4);e.addAttribute("position",new zen3d.InterleavedBufferAttribute(n,2,0)),e.addAttribute("uv",new zen3d.InterleavedBufferAttribute(n,2,2)),e.setIndex([0,1,2,0,2,3]),e.computeBoundingBox(),e.computeBoundingSphere();var i=function(t){i.superClass.constructor.call(this),this.geometry=e,this.material=void 0!==t?t:new zen3d.SpriteMaterial,this.type=zen3d.OBJECT_TYPE.SPRITE};zen3d.inherit(i,zen3d.Object3D),i.geometry=e,zen3d.Sprite=i}(),function(){function e(e,i,r,a){return t[0]=Math.floor(a),t[1]=Math.floor(r),t[2]=Math.floor(i),t[3]=Math.floor(e),n[0]}var t=new Uint8Array(4),n=new Float32Array(t.buffer),i=function(t){i.superClass.constructor.call(this);var t=t||{};this.maxParticleCount=t.maxParticleCount||1e4,this.particleNoiseTex=t.particleNoiseTex||null,this.particleSpriteTex=t.particleSpriteTex||null,this.geometry=new zen3d.Geometry;for(var n=[],r=0;r<this.maxParticleCount;r++)n[8*r+0]=100,n[8*r+1]=0,n[8*r+2]=0,n[8*r+3]=0,n[8*r+4]=e(128,128,0,0),n[8*r+5]=e(0,254,0,254),n[8*r+6]=1,n[8*r+7]=0;var a=new zen3d.InterleavedBuffer(new Float32Array(n),8);a.dynamic=!0;var o;o=new zen3d.InterleavedBufferAttribute(a,3,0),this.geometry.addAttribute("a_Position",o),o=new zen3d.InterleavedBufferAttribute(a,4,0),this.geometry.addAttribute("particlePositionsStartTime",o),o=new zen3d.InterleavedBufferAttribute(a,4,4),this.geometry.addAttribute("particleVelColSizeLife",o),this.particleCursor=0,this.time=0,this.type=zen3d.OBJECT_TYPE.PARTICLE,this.material=new zen3d.ParticleMaterial,this.frustumCulled=!1};zen3d.inherit(i,zen3d.Object3D);var r=new zen3d.Vector3,a=new zen3d.Vector3,o=0,s=0,u=new zen3d.Color3,h=0,d=0,l=0,c=0;i.prototype.spawn=function(t){r=void 0!==(t=t||{}).position?r.copy(t.position):r.set(0,0,0),a=void 0!==t.velocity?a.copy(t.velocity):a.set(0,0,0),o=void 0!==t.positionRandomness?t.positionRandomness:0,s=void 0!==t.velocityRandomness?t.velocityRandomness:0,u=void 0!==t.color?u.copy(t.color):u.setRGB(1,1,1),h=void 0!==t.colorRandomness?t.colorRandomness:1,g=void 0!==t.turbulence?t.turbulence:1,d=void 0!==t.lifetime?t.lifetime:5,l=void 0!==t.size?t.size:10,c=void 0!==t.sizeRandomness?t.sizeRandomness:0;var n=this.particleCursor,i=this.geometry.getAttribute("particlePositionsStartTime").data,p=i.array,f=i.stride;p[n*f+0]=r.x+(Math.random()-.5)*o,p[n*f+1]=r.y+(Math.random()-.5)*o,p[n*f+2]=r.z+(Math.random()-.5)*o,p[n*f+3]=this.time+.02*(Math.random()-.5);var _=a.x+(Math.random()-.5)*s,v=a.y+(Math.random()-.5)*s,m=a.z+(Math.random()-.5)*s,g=Math.floor(254*g);_=Math.floor((_- -2)/4*250),v=Math.floor((v- -2)/4*250),m=Math.floor((m- -2)/4*250),p[n*f+4]=e(_,v,m,g);var E=254*u.r+(Math.random()-.5)*h*254,y=254*u.g+(Math.random()-.5)*h*254,T=254*u.b+(Math.random()-.5)*h*254;E>254&&(E=254),E<0&&(E=0),y>254&&(y=254),y<0&&(y=0),T>254&&(T=254),T<0&&(T=0),p[n*f+5]=e(E,y,T,254),p[n*f+6]=l+(Math.random()-.5)*c,p[n*f+7]=d,++this.particleCursor>=this.maxParticleCount?(this.particleCursor=0,i.version++,i.updateRange.offset=0,i.updateRange.count=-1):(i.version++,i.updateRange.count>-1?i.updateRange.count=this.particleCursor*f-i.updateRange.offset:(i.updateRange.offset=n*f,i.updateRange.count=f))},i.prototype.update=function(e){this.time=e},zen3d.ParticleContainer=i}(),function(){var e=function(){e.superClass.constructor.call(this),this.type="bone",this.offsetMatrix=new zen3d.Matrix4};zen3d.inherit(e,zen3d.Object3D),zen3d.Bone=e}(),function(){var e=function(t){e.superClass.constructor.call(this),this.type="skeleton",this.bones=t||[],this.boneMatrices=new Float32Array(16*this.bones.length),this.boneTexture=void 0,this.boneTextureSize=0};zen3d.inherit(e,zen3d.Object3D);var t=new zen3d.Matrix4;e.prototype.updateBones=function(){this.updateMatrix();for(var e=0;e<this.bones.length;e++){var n=this.bones[e];t.multiplyMatrices(n.worldMatrix,n.offsetMatrix),t.toArray(this.boneMatrices,16*e)}void 0!==this.boneTexture&&this.boneTexture.version++},zen3d.Skeleton=e}(),function(){var e=function(){this._keys=[],this._values=[]};e.prototype.addFrame=function(e,t){this._keys.push(e),this._values.push(t)},e.prototype.removeFrame=function(e){var t=this.keys.indexOf(e);t>-1&&(this._keys.splice(t,1),this._values.splice(t,1))},e.prototype.clearFrame=function(){this._keys.length=0,this._values.length=0},e.prototype.sortFrame=function(){},e.prototype.getRange=function(e,t){var n=this._getLastKeyIndex(e),i=this._keys[n],r=this._keys[n+1],a=this._values[n],o=this._values[n+1];return t=t||{key1:0,value1:0,key2:0,value2:0},t.key1=i,t.key2=r,t.value1=a,t.value2=o,t},e.prototype._getLastKeyIndex=function(e){var t,n=0,i=this._keys.length;for(t=0;t<i;t++)e>=this._keys[t]&&(n=t);return n},zen3d.KeyframeData=e}(),function(){var e={key1:0,value1:0,key2:0,value2:0},t=function(e,t){this.target=void 0,this.path=void 0,this.bind(e,t),this.data=new zen3d.KeyframeData,this._frame=0,this.interpolant=!0};t.prototype.bind=function(e,t){if((t=t.split(".")).length>1){for(var n=e[t[0]],i=1;i<t.length-1;i++)n=n[t[i]];this.path=t[t.length-1],this.target=n}else this.path=t[0],this.target=e},Object.defineProperties(t.prototype,{frame:{get:function(){return this._frame},set:function(e){this._frame=e,this._updateValue(e)}}}),t.prototype._updateValue=function(t){this.data.getRange(t,e);var n=e.key1,i=e.key2,r=e.value1,a=e.value2;if(this.interpolant)if(void 0!==r&&void 0!==a){var o=(t-n)/(i-n);this.target[this.path]=(a-r)*o+r}else this.target[this.path]=r;else this.target[this.path]=r},zen3d.KeyframeTrack=t}(),function(){var e={key1:0,value1:0,key2:0,value2:0},t=function(e,n){t.superClass.constructor.call(this,e,n)};zen3d.inherit(t,zen3d.KeyframeTrack),t.prototype._updateValue=function(t){this.data.getRange(t,e);var n=e.key1,i=e.key2,r=e.value1,a=e.value2;if(this.interpolant)if(void 0!==r&&void 0!==a){var o=(t-n)/(i-n);this.target[this.path].slerpQuaternions(r,a,o)}else this.target[this.path].copy(r);else this.target[this.path].copy(r)},zen3d.QuaternionKeyframeTrack=t}(),function(){var e={key1:0,value1:0,key2:0,value2:0},t=function(e,n){t.superClass.constructor.call(this,e,n)};zen3d.inherit(t,zen3d.KeyframeTrack),t.prototype._updateValue=function(t){this.data.getRange(t,e);var n=e.key1,i=e.key2,r=e.value1,a=e.value2;if(this.interpolant)if(void 0!==r&&void 0!==a){var o=(t-n)/(i-n);this.target[this.path].lerpVectors(r,a,o)}else this.target[this.path].copy(r);else this.target[this.path].copy(r)},zen3d.VectorKeyframeTrack=t}(),function(){var e={key1:0,value1:0,key2:0,value2:0},t=function(e,n){t.superClass.constructor.call(this,e,n)};zen3d.inherit(t,zen3d.KeyframeTrack),t.prototype._updateValue=function(t){this.data.getRange(t,e);var n=e.key1,i=e.key2,r=e.value1,a=e.value2;if(this.interpolant)if(void 0!==r&&void 0!==a){var o=(t-n)/(i-n);this.target[this.path].lerpColors(r,a,o)}else this.target[this.path].copy(r);else this.target[this.path].copy(r)},zen3d.ColorKeyframeTrack=t}(),function(){var e=function(e){this.name=e||"",this.tracks=[],this.loop=!0,this.startFrame=0,this.endFrame=0,this.frame=0};e.prototype.update=function(e){this.frame+=e,this.frame>this.endFrame&&(this.loop?this.frame=this.startFrame:this.frame=this.endFrame),this.setFrame(this.frame)},e.prototype.setFrame=function(e){for(var t=0,n=this.tracks.length;t<n;t++)this.tracks[t].frame=e;this.frame=e},zen3d.KeyframeClip=e}(),function(){var e=function(){this._clips={},this._currentClipName=""};Object.defineProperties(e.prototype,{currentClipName:{get:function(){return this._currentClipName}},currentClip:{get:function(){return this._clips[this._currentClipName]}}}),e.prototype.add=function(e){this._clips[e.name]=e},e.prototype.remove=function(e){delete this._clips[e.name]},e.prototype.update=function(e){var t=this._clips[this._currentClipName];t&&t.update(e)},e.prototype.active=function(e){var t=this._clips[e];t?(this._currentClipName=e,t.setFrame(t.startFrame)):console.warn("KeyframeAnimation: try to active a undefind clip!")},e.prototype.getAllClipNames=function(){var e=[];for(var t in this._clips)e.push(t);return e},zen3d.KeyframeAnimation=e}(),function(){var e=function(){this.texturePath="./"};e.prototype.load=function(e,t,n,i){this.texturePath=this.extractUrlBase(e),(new zen3d.FileLoader).setResponseType("json").load(e,function(e){var n=this.parse(e);t(n.object,n.animation)}.bind(this),n,i)},e.prototype.parseNodeTree=function(e){var t=new zen3d.Object3D;if(t.name=e.name,t.matrix.fromArray(e.transformation).transpose(),e.children)for(var n=0;n<e.children.length;n++){var i=this.parseNodeTree(e.children[n]);t.add(i)}return t},e.prototype.cloneNodeToBones=function(e,t){var n=new zen3d.Bone;if(n.name=e.name,n.matrix.copy(e.matrix),n.matrix.decompose(n.position,n.quaternion,n.scale),t[e.name]||(t[e.name]=[]),t[e.name].push(n),e.children)for(var i=0;i<e.children.length;i++){var r=this.cloneNodeToBones(e.children[i],t);n.add(r)}return n},e.prototype.parseSkeleton=function(e,t,n,i){for(var r=[],a=n.getObjectByName(e);a.parent;)r.push(a.parent.name),a=a.parent;r.push(a);var o,s=[],u=[],h=n.getObjectByName(function(e){for(var t,i=n.getObjectByName(e);i.parent&&(t=i.parent,!(r.indexOf(t.name)>-1));)i=t;return i.name}(t[0].name)),d=this.cloneNodeToBones(h,i);u.push(d);for(f=0;f<t.length;f++){var l=t[f],c=d.getObjectByName(l.name);c||(h=n.getObjectByName(l.name),d=this.cloneNodeToBones(h,i),u.push(d),c=d.getObjectByName(l.name));var p=t[f].offsetmatrix;c.offsetMatrix.fromArray(p).transpose(),s.push(c)}o=new zen3d.Skeleton(s);for(var f=0;f<u.length;f++)o.add(u[f]);return o},e.prototype.parseAnimations=function(e,t){for(var n=new zen3d.KeyframeAnimation,i=0;i<e.length;i++){for(var r=e[i],a=r.name,o=r.channels,s=0,u=new zen3d.KeyframeClip(a),h=0;h<o.length;h++){var d=o[h],l=d.name;if(t[l])for(f=0;f<t[l].length;f++){for(var c=t[l][f],p=new zen3d.VectorKeyframeTrack(c,"position"),f=0;f<d.positionkeys.length;f++){m=d.positionkeys[f];p.data.addFrame(m[0],new zen3d.Vector3(m[1][0],m[1][1],m[1][2])),m[0]>s&&(s=m[0])}u.tracks.push(p);for(var _=new zen3d.QuaternionKeyframeTrack(c,"quaternion"),f=0;f<d.rotationkeys.length;f++){m=d.rotationkeys[f];_.data.addFrame(m[0],new zen3d.Quaternion(m[1][1],m[1][2],m[1][3],m[1][0])),m[0]>s&&(s=m[0])}u.tracks.push(_);for(var v=new zen3d.VectorKeyframeTrack(c,"scale"),f=0;f<d.scalingkeys.length;f++){var m=d.scalingkeys[f];v.data.addFrame(m[0],new zen3d.Vector3(m[1][0],m[1][1],m[1][2])),m[0]>s&&(s=m[0])}u.tracks.push(v)}else console.log(l)}u.startFrame=0,u.endFrame=s,u.loop=!0,n.add(u)}return n},e.prototype.parse=function(e){for(var t=this.parseNodeTree(e.rootnode),n=this.parseList(e.meshes,this.parseMesh),i=this.parseList(e.materials,this.parseMaterial),r={},a={},o=0;o<e.meshes.length;o++)e.meshes[o].bones&&(a[o]=this.parseSkeleton(e.meshes[o].name,e.meshes[o].bones,t,r));var s;return e.animations&&(s=this.parseAnimations(e.animations,r)),{object:this.parseObject(e,e.rootnode,n,i,a),animation:s}},e.prototype.parseList=function(e,t){for(var n=new Array(e.length),i=0;i<e.length;++i)n[i]=t.call(this,e[i]);return n},e.prototype.parseMaterial=function(e){var t=new zen3d.PhongMaterial,n=null,i=null,r=e.properties;for(var a in e.properties)if("$tex.file"===(r=e.properties[a]).key){if(1==r.semantic)o=(o=this.texturePath+r.value).replace(/.\\/g,""),(n=new zen3d.Texture2D.fromSrc(o)).wrapS=n.wrapT=zen3d.WEBGL_TEXTURE_WRAP.REPEAT;else if(2==r.semantic);else if(5==r.semantic);else if(6==r.semantic){var o=this.texturePath+r.value;o=o.replace(/.\\/g,""),(i=new zen3d.Texture2D.fromSrc(o)).wrapS=i.wrapT=zen3d.WEBGL_TEXTURE_WRAP.REPEAT}}else if("?mat.name"===r.key);else if("$clr.ambient"===r.key);else if("$clr.diffuse"===r.key){s=r.value;t.diffuse.setRGB(s[0],s[1],s[2])}else if("$clr.specular"===r.key){s=r.value;t.specular.setRGB(s[0],s[1],s[2])}else if("$clr.emissive"===r.key){var s=r.value;t.emissive.setRGB(s[0],s[1],s[2])}else"$mat.opacity"===r.key?(t.transparent=r.value<1,t.opacity=r.value):"$mat.shadingm"===r.key?r.value:"$mat.shininess"===r.key&&(t.shininess=r.value);return t.diffuseMap=n,t.normalMap=i,t},e.prototype.parseMesh=function(e){var t=new zen3d.Geometry,n=e.faces,i=e.vertices,r=e.normals,a=e.texturecoords&&e.texturecoords[0],o=i.length/3,s=[],u=e.bones,h=[];if(u){for(p=0;p<o;p++)h[p]=[];for(var d,l,c,p=0;p<u.length;p++){(d=u[p]).name,d.offsetmatrix,l=d.weights;for(var f=0;f<l.length;f++)h[(c=l[f])[0]].push({index:p,weight:c[1]})}for(p=0;p<o;p++){(y=h[p]).sort(function(e,t){return t.weight-e.weight});var _=y[0]?y[0].weight:0,v=y[1]?y[1].weight:0,m=y[2]?y[2].weight:0,g=y[3]?y[3].weight:0,E=_+v+m+g;E>0&&(_/=E,v/=E,m/=E,g/=E),y[0]&&(y[0].weight=_),y[1]&&(y[1].weight=v),y[2]&&(y[2].weight=m),y[3]&&(y[3].weight=g)}}for(p=0;p<o;p++){if(s.push(i[3*p+0]),s.push(i[3*p+1]),s.push(i[3*p+2]),s.push(r[3*p+0]),s.push(r[3*p+1]),s.push(r[3*p+2]),s.push(0),s.push(0),s.push(0),u)for(var y=h[p],T=0;T<4;T++)y[T]?s.push(y[T].index):s.push(0);else s.push(1),s.push(1),s.push(1),s.push(1);if(a?(s.push(a[2*p+0]),s.push(1-a[2*p+1])):(s.push(0),s.push(0)),u)for(var y=h[p],T=0;T<4;T++)y[T]?s.push(y[T].weight):s.push(0);else s.push(0),s.push(0)}if(u){M=new zen3d.InterleavedBuffer(new Float32Array(s),19);x=new zen3d.InterleavedBufferAttribute(M,3,0),t.addAttribute("a_Position",x),x=new zen3d.InterleavedBufferAttribute(M,3,3),t.addAttribute("a_Normal",x),x=new zen3d.InterleavedBufferAttribute(M,4,9),t.addAttribute("skinIndex",x),x=new zen3d.InterleavedBufferAttribute(M,4,15),t.addAttribute("skinWeight",x),x=new zen3d.InterleavedBufferAttribute(M,2,13),t.addAttribute("a_Uv",x)}else{var x,M=new zen3d.InterleavedBuffer(new Float32Array(s),17);x=new zen3d.InterleavedBufferAttribute(M,3,0),t.addAttribute("a_Position",x),x=new zen3d.InterleavedBufferAttribute(M,3,3),t.addAttribute("a_Normal",x),x=new zen3d.InterleavedBufferAttribute(M,4,9),t.addAttribute("a_Color",x),x=new zen3d.InterleavedBufferAttribute(M,2,13),t.addAttribute("a_Uv",x)}for(var S=[],p=0;p<n.length;p++)S.push(n[p][0]),S.push(n[p][1]),S.push(n[p][2]);return t.setIndex(S),t.computeBoundingBox(),t.computeBoundingSphere(),t},e.prototype.parseObject=function(e,t,n,i,r){var a=new zen3d.Group;a.name=t.name||"",a.matrix.fromArray(t.transformation).transpose(),a.matrix.decompose(a.position,a.quaternion,a.scale);for(var o,s=0;t.meshes&&s<t.meshes.length;++s){var u=t.meshes[s],h=i[e.meshes[u].materialindex];r[u]?(o=new zen3d.SkinnedMesh(n[u],h)).skeleton=r[u]:o=new zen3d.Mesh(n[u],h),o.frustumCulled=!1,a.add(o)}for(s=0;t.children&&s<t.children.length;++s)a.add(this.parseObject(e,t.children[s],n,i,r));return a},e.prototype.extractUrlBase=function(e){var t=e.split("/");return t.pop(),(t.length<1?".":t.join("/"))+"/"},zen3d.AssimpJsonLoader=e}(),function(){var e=function(){this.path=void 0,this.responseType=void 0,this.withCredentials=void 0,this.mimeType=void 0,this.requestHeader=void 0};e.prototype.load=function(e,t,n,i){void 0===e&&(e=""),void 0!=this.path&&(e=this.path+e);var r=/^data:(.*?)(;base64)?,(.*)$/,a=e.match(r);if(a){var o=a[1],s=!!a[2],u=a[3];u=window.decodeURIComponent(u),s&&(u=window.atob(u));try{var h,d=(this.responseType||"").toLowerCase();switch(d){case"arraybuffer":case"blob":h=new ArrayBuffer(u.length);for(var l=new Uint8Array(h),c=0;c<u.length;c++)l[c]=u.charCodeAt(c);"blob"===d&&(h=new Blob([h],{type:o}));break;case"document":var p=new DOMParser;h=p.parseFromString(u,o);break;case"json":h=JSON.parse(u);break;default:h=u}window.setTimeout(function(){t&&t(h)},0)}catch(e){window.setTimeout(function(){i&&i(e)},0)}}else{var f=new XMLHttpRequest;f.open("GET",e,!0),f.addEventListener("load",function(e){var n=e.target.response;200===this.status?t&&t(n):0===this.status?(console.warn("THREE.FileLoader: HTTP Status 0 received."),t&&t(n)):i&&i(e)},!1),void 0!==n&&f.addEventListener("progress",function(e){n(e)},!1),void 0!==i&&f.addEventListener("error",function(e){i(e)},!1),void 0!==this.responseType&&(f.responseType=this.responseType),void 0!==this.withCredentials&&(f.withCredentials=this.withCredentials),f.overrideMimeType&&f.overrideMimeType(void 0!==this.mimeType?this.mimeType:"text/plain");for(var _ in this.requestHeader)f.setRequestHeader(_,this.requestHeader[_]);f.send(null)}},e.prototype.setPath=function(e){return this.path=e,this},e.prototype.setResponseType=function(e){return this.responseType=e,this},e.prototype.setWithCredentials=function(e){return this.withCredentials=e,this},e.prototype.setMimeType=function(e){return this.mimeType=e,this},e.prototype.setRequestHeader=function(e){return this.requestHeader=e,this},zen3d.FileLoader=e}(),function(){var e=function(){this.crossOrigin=void 0,this.path=void 0};e.prototype.load=function(e,t,n,i){void 0===e&&(e=""),void 0!==this.path&&(e=this.path+e);var r=document.createElementNS("http://www.w3.org/1999/xhtml","img");return r.addEventListener("load",function(){t&&t(this)},!1),r.addEventListener("error",function(e){i&&i(e)},!1),"data:"!==e.substr(0,5)&&void 0!==this.crossOrigin&&(r.crossOrigin=this.crossOrigin),r.src=e,r},e.prototype.setCrossOrigin=function(e){return this.crossOrigin=e,this},e.prototype.setPath=function(e){return this.path=e,this},zen3d.ImageLoader=e}(),function(){var e=function(){};e.prototype.load=function(e,t,n,i){var r=this,a=new zen3d.FileLoader;a.setResponseType("arraybuffer"),a.load(e,function(e){void 0!==t&&t(r.parse(e))},n,i)},e.prototype.parse=function(e){function t(e,t,n,i,r,a,o,s,u){var h,d,l,c=u,p=0,f=x.width;for(l=t;l!==i;l+=n)for(d=r;d!==o;d+=a,p++)h=s[p],e[4*(d+f*l)+3]=255,e[4*(d+f*l)+2]=c[3*h+0],e[4*(d+f*l)+1]=c[3*h+1],e[4*(d+f*l)+0]=c[3*h+2];return e}function n(e,t,n,i,r,a,o,s){var u,h,d,l=0,c=x.width;for(d=t;d!==i;d+=n)for(h=r;h!==o;h+=a,l+=2)u=s[l+0]+(s[l+1]<<8),e[4*(h+c*d)+0]=(31744&u)>>7,e[4*(h+c*d)+1]=(992&u)>>2,e[4*(h+c*d)+2]=(31&u)>>3,e[4*(h+c*d)+3]=32768&u?0:255;return e}function i(e,t,n,i,r,a,o,s){var u,h,d=0,l=x.width;for(h=t;h!==i;h+=n)for(u=r;u!==o;u+=a,d+=3)e[4*(u+l*h)+3]=255,e[4*(u+l*h)+2]=s[d+0],e[4*(u+l*h)+1]=s[d+1],e[4*(u+l*h)+0]=s[d+2];return e}function r(e,t,n,i,r,a,o,s){var u,h,d=0,l=x.width;for(h=t;h!==i;h+=n)for(u=r;u!==o;u+=a,d+=4)e[4*(u+l*h)+2]=s[d+0],e[4*(u+l*h)+1]=s[d+1],e[4*(u+l*h)+0]=s[d+2],e[4*(u+l*h)+3]=s[d+3];return e}function a(e,t,n,i,r,a,o,s){var u,h,d,l=0,c=x.width;for(d=t;d!==i;d+=n)for(h=r;h!==o;h+=a,l++)u=s[l],e[4*(h+c*d)+0]=u,e[4*(h+c*d)+1]=u,e[4*(h+c*d)+2]=u,e[4*(h+c*d)+3]=255;return e}function o(e,t,n,i,r,a,o,s){var u,h,d=0,l=x.width;for(h=t;h!==i;h+=n)for(u=r;u!==o;u+=a,d+=2)e[4*(u+l*h)+0]=s[d+0],e[4*(u+l*h)+1]=s[d+0],e[4*(u+l*h)+2]=s[d+0],e[4*(u+l*h)+3]=s[d+1];return e}var s=0,u=1,h=2,d=3,l=9,c=10,p=11,f=48,_=4,v=0,m=1,g=2,E=3;e.length<19&&console.error("TGALoader.parse: Not enough data to contain header.");var y=new Uint8Array(e),T=0,x={id_length:y[T++],colormap_type:y[T++],image_type:y[T++],colormap_index:y[T++]|y[T++]<<8,colormap_length:y[T++]|y[T++]<<8,colormap_size:y[T++],origin:[y[T++]|y[T++]<<8,y[T++]|y[T++]<<8],width:y[T++]|y[T++]<<8,height:y[T++]|y[T++]<<8,pixel_size:y[T++],flags:y[T++]};!function(e){switch(e.image_type){case u:case l:(e.colormap_length>256||24!==e.colormap_size||1!==e.colormap_type)&&console.error("TGALoader.parse.tgaCheckHeader: Invalid type colormap data for indexed type");break;case h:case d:case c:case p:e.colormap_type&&console.error("TGALoader.parse.tgaCheckHeader: Invalid type colormap data for colormap type");break;case s:console.error("TGALoader.parse.tgaCheckHeader: No data");default:console.error('TGALoader.parse.tgaCheckHeader: Invalid type " '+e.image_type+'"')}(e.width<=0||e.height<=0)&&console.error("TGALoader.parse.tgaCheckHeader: Invalid image size"),8!==e.pixel_size&&16!==e.pixel_size&&24!==e.pixel_size&&32!==e.pixel_size&&console.error('TGALoader.parse.tgaCheckHeader: Invalid pixel size "'+e.pixel_size+'"')}(x),x.id_length+T>e.length&&console.error("TGALoader.parse: No data"),T+=x.id_length;var M=!1,S=!1,w=!1;switch(x.image_type){case l:M=!0,S=!0;break;case u:S=!0;break;case c:M=!0;break;case h:break;case p:M=!0,w=!0;break;case d:w=!0}var z=document.createElement("canvas");z.width=x.width,z.height=x.height;var A=z.getContext("2d"),L=A.createImageData(x.width,x.height),b=function(e,t,n,i,r){var a,o,s,u;if(o=n.pixel_size>>3,s=n.width*n.height*o,t&&(u=r.subarray(i,i+=n.colormap_length*(n.colormap_size>>3))),e){a=new Uint8Array(s);for(var h,d,l,c=0,p=new Uint8Array(o);c<s;)if(h=r[i++],d=1+(127&h),128&h){for(l=0;l<o;++l)p[l]=r[i++];for(l=0;l<d;++l)a.set(p,c+l*o);c+=o*d}else{for(d*=o,l=0;l<d;++l)a[c+l]=r[i++];c+=d}}else a=r.subarray(i,i+=t?n.width*n.height:s);return{pixel_data:a,palettes:u}}(M,S,x,T,y);!function(e,s,u,h,d){var l,c,p,y,T,M;switch((x.flags&f)>>_){default:case g:l=0,p=1,T=s,c=0,y=1,M=u;break;case v:l=0,p=1,T=s,c=u-1,y=-1,M=-1;break;case E:l=s-1,p=-1,T=-1,c=0,y=1,M=u;break;case m:l=s-1,p=-1,T=-1,c=u-1,y=-1,M=-1}if(w)switch(x.pixel_size){case 8:a(e,c,y,M,l,p,T,h);break;case 16:o(e,c,y,M,l,p,T,h);break;default:console.error("TGALoader.parse.getTgaRGBA: not support this format")}else switch(x.pixel_size){case 8:t(e,c,y,M,l,p,T,h,d);break;case 16:n(e,c,y,M,l,p,T,h);break;case 24:i(e,c,y,M,l,p,T,h);break;case 32:r(e,c,y,M,l,p,T,h);break;default:console.error("TGALoader.parse.getTgaRGBA: not support this format")}}(L.data,x.width,x.height,b.pixel_data,b.palettes);return A.putImageData(L,0,0),z},zen3d.TGALoader=e}(),function(){function e(e){if("undefined"!=typeof TextDecoder)return(new TextDecoder).decode(e);for(var t="",n=0,i=e.length;n<i;n++)t+=String.fromCharCode(e[n]);return decodeURIComponent(escape(t))}function t(e){var t=e.split("/");return t.pop(),(t.length<1?".":t.join("/"))+"/"}function n(){return new zen3d.PBRMaterial}function i(e,t){return"string"!=typeof e||""===e?"":/^(https?:)?\/\//i.test(e)?e:/^data:.*,.*$/i.test(e)?e:/^blob:.*$/i.test(e)?e:t+e}function r(){var e={};return{get:function(t){return e[t]},add:function(t,n){e[t]=n},remove:function(t){delete e[t]},removeAll:function(){e={}}}}function a(e,t,n){this.json=e||{},this.extensions=t||{},this.options=n||{},this.cache=new r,this.primitiveCache=[],this.textureLoader=new zen3d.ImageLoader,this.fileLoader=new zen3d.FileLoader,this.fileLoader.setResponseType("arraybuffer")}function o(e,t){if(e.indices!==t.indices)return!1;var n=e.attributes||{},i=t.attributes||{},r=Object.keys(n),a=Object.keys(i);if(r.length!==a.length)return!1;for(var o=0,s=r.length;o<s;o++){var u=r[o];if(n[u]!==i[u])return!1}return!0}function s(e,t){for(var n=0,i=e.length;n<i;n++){var r=e[n];if(o(r.primitive,t))return r.promise}return null}function u(e,t,n){var i=t.attributes;for(var r in i){var a=E[r],o=n[i[r]];a&&(a in e.attributes||e.addAttribute(a,o))}void 0===t.indices||e.index||e.setIndex(n[t.indices]),e.computeBoundingBox(),e.computeBoundingSphere()}function h(e){this.name=f.KHR_LIGHTS,this.lights={};var t=(e.extensions&&e.extensions[f.KHR_LIGHTS]||{}).lights||{};for(var n in t){var i,r=t[n],a=(new zen3d.Color3).fromArray(r.color);switch(r.type){case"directional":(i=new zen3d.DirectionalLight).color.copy(a),i.position.set(0,0,1);break;case"point":(i=new zen3d.PointLight).color.copy(a);break;case"spot":(i=new zen3d.SpotLight).color.copy(a),i.position.set(0,0,1);break;case"ambient":(i=new zen3d.AmbientLight).color.copy(a)}i&&(void 0!==r.constantAttenuation&&(i.intensity=r.constantAttenuation),void 0!==r.linearAttenuation&&(i.distance=1/r.linearAttenuation),void 0!==r.quadraticAttenuation&&(i.decay=r.quadraticAttenuation),void 0!==r.fallOffAngle&&(i.angle=r.fallOffAngle),void 0!==r.fallOffExponent&&console.warn("GLTFLoader:: light.fallOffExponent not currently supported."),i.name=r.name||"light_"+n,this.lights[n]=i)}}function d(t){this.name=f.KHR_BINARY_GLTF,this.content=null,this.body=null;var n=new DataView(t,0,v);if(this.header={magic:e(new Uint8Array(t.slice(0,4))),version:n.getUint32(4,!0),length:n.getUint32(8,!0)},this.header.magic!==_)throw new Error("GLTFLoader: Unsupported glTF-Binary header.");if(this.header.version<2)throw new Error("GLTFLoader: Legacy binary file detected. Use LegacyGLTFLoader instead.");for(var i=new DataView(t,v),r=0;r<i.byteLength;){var a=i.getUint32(r,!0);r+=4;var o=i.getUint32(r,!0);if(r+=4,o===m.JSON){var s=new Uint8Array(t,v+r,a);this.content=e(s)}else if(o===m.BIN){var u=v+r;this.body=t.slice(u,u+a)}r+=a}if(null===this.content)throw new Error("GLTFLoader: JSON content not found.")}function l(e){if(!e)throw new Error("GLTFLoader: No DRACOLoader instance provided.");this.name=f.KHR_DRACO_MESH_COMPRESSION,this.dracoLoader=e}var c=function(){var e=new RegExp("[\\[\\]\\.:\\/]","g");return function(t){return t.replace(/\s/g,"_").replace(e,"")}}(),p=function(){};p.prototype.load=function(e,n,i,r){var a=this,o=t(e),s=new zen3d.FileLoader;s.setResponseType("arraybuffer"),s.load(e,function(e){void 0!==n&&a.parse(e,o,n,r)},i,r)},p.prototype.parse=function(t,n,i,r){var o,s={};if("string"==typeof t)o=t;else if(e(new Uint8Array(t,0,4))===_){try{s[f.KHR_BINARY_GLTF]=new d(t)}catch(e){return void(r&&r(e))}o=s[f.KHR_BINARY_GLTF].content}else o=e(new Uint8Array(t));var u=JSON.parse(o);void 0===u.asset||u.asset.version[0]<2?r&&r(new Error("GLTFLoader: Unsupported asset. glTF versions >=2.0 are supported. Use LegacyGLTFLoader instead.")):(u.extensionsUsed&&(u.extensionsUsed.indexOf(f.KHR_LIGHTS)>=0&&(s[f.KHR_LIGHTS]=new h(u)),u.extensionsUsed.indexOf(f.KHR_MATERIALS_UNLIT)>=0&&console.warn("GLTFLoader:: KHR_MATERIALS_UNLIT not currently supported."),u.extensionsUsed.indexOf(f.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS)>=0&&console.warn("GLTFLoader:: KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS not currently supported."),u.extensionsUsed.indexOf(f.KHR_DRACO_MESH_COMPRESSION)>=0&&(console.warn("GLTFLoader:: no draco loader."),s[f.KHR_DRACO_MESH_COMPRESSION]=new l)),console.time("GLTFLoader"),new a(u,s,{path:n}).parse(function(e,t,n,r,a){console.timeEnd("GLTFLoader"),i({scene:e,scenes:t,cameras:n,animations:r,asset:a})},r))},zen3d.GLTFLoader=p,a.prototype.parse=function(e,t){var n=this.json;this.cache.removeAll(),this.markDefs(),this.getMultiDependencies(["scene","animation","camera"]).then(function(t){var i=t.scenes||[],r=i[n.scene||0],a=t.animations||[],o=n.asset,s=t.cameras||[];e(r,i,s,a,o)}).catch(t)},a.prototype.markDefs=function(){for(var e=this.json.nodes||[],t=this.json.skins||[],n=this.json.meshes||[],i={},r={},a=0,o=t.length;a<o;a++)for(var s=t[a].joints,u=0,h=s.length;u<h;u++)e[s[u]].isBone=!0;for(var d=0,l=e.length;d<l;d++){var c=e[d];void 0!==c.mesh&&(void 0===i[c.mesh]&&(i[c.mesh]=r[c.mesh]=0),i[c.mesh]++,void 0!==c.skin&&(n[c.mesh].isSkinnedMesh=!0))}this.json.meshReferences=i,this.json.meshUses=r},a.prototype.getDependency=function(e,t){var n=e+":"+t,i=this.cache.get(n);return i||(i=this["load"+e.charAt(0).toUpperCase()+e.slice(1)](t),this.cache.add(n,i)),i},a.prototype.getDependencies=function(e){var t=this.cache.get(e);if(!t){var n=this,i=this.json[e+("mesh"===e?"es":"s")]||[];t=Promise.all(i.map(function(t,i){return n.getDependency(e,i)})),this.cache.add(e,t)}return t},a.prototype.getMultiDependencies=function(e){for(var t={},n=[],i=0,r=e.length;i<r;i++){var a=e[i],o=this.getDependencies(a);o=o.then(function(e,n){t[e]=n}.bind(this,a+("mesh"===a?"es":"s"))),n.push(o)}return Promise.all(n).then(function(){return t})},a.prototype.loadScene=function(){function e(t,n,i,r,a){var o=r[t],s=i.nodes[t];if(void 0!==s.skin)for(var u=!0===o.isGroup?o.children:[o],h=0,d=u.length;h<d;h++){for(var l=u[h],c=a[s.skin],p=[],f=0,_=c.joints.length;f<_;f++){var v=c.joints[f],m=r[v];if(m){p.push(m);var g=new zen3d.Matrix4;void 0!==c.inverseBindMatrices&&g.fromArray(c.inverseBindMatrices.array,16*f),m.offsetMatrix.copy(g)}else console.warn('GLTFLoader: Joint "%s" could not be found.',v)}var E=new zen3d.Skeleton(p);l.skeleton=E}if(n.add(o),s.children)for(var y=s.children,h=0,d=y.length;h<d;h++)e(y[h],o,i,r,a)}return function(t){var n=this.json,i=this.extensions,r=this.json.scenes[t];return this.getMultiDependencies(["node","skin"]).then(function(t){var a=new zen3d.Scene;void 0!==r.name&&(a.name=r.name),r.extras&&(a.userData=r.extras);for(var o=r.nodes||[],s=0,u=o.length;s<u;s++)e(o[s],a,n,t.nodes,t.skins);if(r.extensions&&r.extensions[f.KHR_LIGHTS]&&void 0!==r.extensions[f.KHR_LIGHTS].light){var h=i[f.KHR_LIGHTS].lights;a.add(h[r.extensions[f.KHR_LIGHTS].light])}return a})}}(),a.prototype.loadNode=function(e){this.json;var t=this.extensions,n=this.json.meshReferences,i=this.json.meshUses,r=this.json.nodes[e];return this.getMultiDependencies(["mesh","skin","camera"]).then(function(e){var a;if(!0===r.isBone?a=new zen3d.Bone:void 0!==r.mesh?(a=e.meshes[r.mesh].clone(),n[r.mesh]>1&&(a.name+="_instance_"+i[r.mesh]++)):a=void 0!==r.camera?e.cameras[r.camera]:r.extensions&&r.extensions[f.KHR_LIGHTS]&&void 0!==r.extensions[f.KHR_LIGHTS].light?t[f.KHR_LIGHTS].lights[r.extensions[f.KHR_LIGHTS].light]:new zen3d.Object3D,void 0!==r.name&&(a.name=c(r.name)),r.extras&&(a.userData=r.extras),void 0!==r.matrix){var o=new zen3d.Matrix4;o.fromArray(r.matrix),a.matrix.multiplyMatrices(o,a.matrix),a.matrix.decompose(a.position,a.quaternion,a.scale)}else void 0!==r.translation&&a.position.fromArray(r.translation),void 0!==r.rotation&&a.quaternion.fromArray(r.rotation),void 0!==r.scale&&a.scale.fromArray(r.scale);return a})},a.prototype.loadCamera=function(e){console.warn("GLTFLoader: camera is not supported yet")},a.prototype.loadSkin=function(e){console.warn("GLTFLoader: skin is not supported yet")},a.prototype.loadAnimation=function(e){console.warn("GLTFLoader: animation is not supported yet")},a.prototype.loadMesh=function(e){var t=this,i=(this.json,this.extensions,this.json.meshes[e]);return this.getMultiDependencies(["accessor","material"]).then(function(r){var a=new zen3d.Group,o=i.primitives;return t.loadGeometries(o).then(function(s){for(var u=0,h=o.length;u<h;u++){var d=o[u],l=s[u],c=void 0===d.material?n():r.materials[d.material];c.aoMap&&void 0===l.attributes.a_Uv2&&void 0!==l.attributes.a_Uv&&(console.log("GLTFLoader: Duplicating UVs to support aoMap."),l.addAttribute("a_Uv2",new zen3d.BufferAttribute(l.attributes.a_Uv.array,2)));var p=void 0!==l.attributes.a_Color,f=void 0===l.attributes.a_Normal,_=!0===i.isSkinnedMesh;(p||f||_)&&(c.isGLTFSpecularGlossinessMaterial?console.warn("GLTFLoader: GLTFSpecularGlossinessMaterial not support"):c=c.clone()),p&&(c.vertexColors=!0),f&&(c.shading=zen3d.SHADING_TYPE.FLAT_SHADING);var v;if(d.mode===g.TRIANGLES||d.mode===g.TRIANGLE_STRIP||d.mode===g.TRIANGLE_FAN||void 0===d.mode)v=_?new zen3d.SkinnedMesh(l,c):new zen3d.Mesh(l,c),d.mode===g.TRIANGLE_STRIP?c.drawMode=zen3d.DRAW_MODE.TRIANGLE_STRIP:d.mode===g.TRIANGLE_FAN&&(c.drawMode=zen3d.DRAW_MODE.TRIANGLE_FAN);else if(d.mode===g.LINES||d.mode===g.LINE_STRIP||d.mode===g.LINE_LOOP){console.warn("GLTFLoader: line material may has bug");var m="LineBasicMaterial:"+c.uuid,E=t.cache.get(m);E||(E=new zen3d.LineMaterial,zen3d.Material.prototype.copy.call(E,c),E.color.copy(c.color),E.lights=!1,t.cache.add(m,E)),c=E,v=d.mode===g.LINES?new zen3d.Line(l,c):(d.mode,g.LINE_STRIP,new zen3d.Line(l,c))}else{if(d.mode!==g.POINTS)throw new Error("GLTFLoader: Primitive mode unsupported: "+d.mode);var m="PointsMaterial:"+c.uuid,y=t.cache.get(m);y||(y=new zen3d.PointsMaterial,zen3d.Material.prototype.copy.call(y,c),y.diffuse.copy(c.color),y.diffuseMap=c.map,y.acceptLight=!1,t.cache.add(m,y)),c=y,v=new zen3d.Points(l,c)}if(v.name=i.name||"mesh_"+e,void 0!==i.extras&&(v.userData=i.extras),void 0!==d.extras&&(v.geometry.userData=d.extras),!(o.length>1))return v;v.name+="_"+u,a.add(v)}return a})})},a.prototype.loadGeometries=function(e){var t=this,n=this.extensions,i=this.primitiveCache;return this.getDependencies("accessor").then(function(r){for(var a=[],o=[],h=0,d=e.length;h<d;h++){var l,c=e[h],p=s(i,c);if(p)o.push(p.then(function(e){a.push(e)}));else if(c.extensions&&c.extensions[f.KHR_DRACO_MESH_COMPRESSION]){var _=n[f.KHR_DRACO_MESH_COMPRESSION].decodePrimitive(c,t).then(function(e){return u(e,c,r),a.push(e),e});i.push({primitive:c,promise:_}),o.push(_)}else u(l=new zen3d.Geometry,c,r),i.push({primitive:c,promise:Promise.resolve(l)}),a.push(l)}return Promise.all(o).then(function(){return a})})},a.prototype.loadAccessor=function(e){var t=this,n=this.json,i=this.json.accessors[e];if(void 0===i.bufferView&&void 0===i.sparse)return null;var r=[];return void 0!==i.bufferView?r.push(this.getDependency("bufferView",i.bufferView)):r.push(null),void 0!==i.sparse&&(r.push(this.getDependency("bufferView",i.sparse.indices.bufferView)),r.push(this.getDependency("bufferView",i.sparse.values.bufferView))),Promise.all(r).then(function(e){var r,a,o=e[0],s=y[i.type],u=T[i.componentType],h=u.BYTES_PER_ELEMENT,d=h*s,l=i.byteOffset||0,c=n.bufferViews[i.bufferView].byteStride,p=!0===i.normalized;if(c&&c!==d){var f="InterleavedBuffer:"+i.bufferView+":"+i.componentType,_=t.cache.get(f);_||(r=new u(o),_=new zen3d.InterleavedBuffer(r,c/h),t.cache.add(f,_)),a=new zen3d.InterleavedBufferAttribute(_,s,l/h,p)}else r=null===o?new u(i.count*s):new u(o,l,i.count*s),a=new zen3d.BufferAttribute(r,s,p);if(void 0!==i.sparse){var v=y.SCALAR,m=T[i.sparse.indices.componentType],g=i.sparse.indices.byteOffset||0,E=i.sparse.values.byteOffset||0,x=new m(e[1],g,i.sparse.count*v),M=new u(e[2],E,i.sparse.count*s);null!==o&&a.setArray(a.array.slice());for(var S=0,w=x.length;S<w;S++){var z=x[S];if(a.array[z*a.itemSize]=M[S*s],s>=2&&(a.array[z*a.itemSize+1]=M[S*s+1]),s>=3&&(a.array[z*a.itemSize+2]=M[S*s+2]),s>=4&&(a.array[z*a.itemSize+3]=M[S*s+3]),s>=5)throw new Error("zen3d.GLTFLoader: Unsupported itemSize in sparse BufferAttribute.")}}return a})},a.prototype.loadBufferView=function(e){var t=this.json.bufferViews[e];return this.getDependency("buffer",t.buffer).then(function(e){var n=t.byteLength||0,i=t.byteOffset||0;return e.slice(i,i+n)})},a.prototype.loadBuffer=function(e){var t=this.json.buffers[e],n=this.fileLoader;if(t.type&&"arraybuffer"!==t.type)throw new Error("zen3d.GLTFLoader: "+t.type+" buffer type is not supported.");if(void 0===t.uri&&0===e)return Promise.resolve(this.extensions[f.KHR_BINARY_GLTF].body);var r=this.options;return new Promise(function(e,a){n.load(i(t.uri,r.path),e,void 0,function(){a(new Error('zen3d.GLTFLoader: Failed to load buffer "'+t.uri+'".'))})})},a.prototype.loadMaterial=function(e){var t,n=this,i=(this.json,this.extensions,this.json.materials[e]),r={},a=i.extensions||{},o=[];if(a[f.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS]);else if(a[f.KHR_MATERIALS_UNLIT]);else if(void 0!==i.pbrMetallicRoughness){t=zen3d.PBRMaterial;var s=i.pbrMetallicRoughness;if(r.diffuse=new zen3d.Color3(1,1,1),r.opacity=1,Array.isArray(s.baseColorFactor)){var u=s.baseColorFactor;r.diffuse.fromArray(u),r.opacity=u[3]}if(void 0!==s.baseColorTexture&&o.push(n.assignTexture(r,"diffuseMap",s.baseColorTexture.index)),r.metalness=void 0!==s.metallicFactor?s.metallicFactor:1,r.roughness=void 0!==s.roughnessFactor?s.roughnessFactor:1,void 0!==s.metallicRoughnessTexture){var h=s.metallicRoughnessTexture.index;o.push(n.assignTexture(r,"metalnessMap",h)),o.push(n.assignTexture(r,"roughnessMap",h))}}else t=zen3d.PhongMaterial;!0===i.doubleSided&&(r.side=zen3d.DRAW_SIDE.DOUBLE);var d=i.alphaMode||x.OPAQUE;return d===x.BLEND?(r.transparent=!0,r.depthWrite=!1):(r.transparent=!1,r.depthWrite=!0,x.MASK),void 0!==i.normalTexture&&o.push(n.assignTexture(r,"normalMap",i.normalTexture.index)),void 0!==i.occlusionTexture&&(o.push(n.assignTexture(r,"aoMap",i.occlusionTexture.index)),void 0!==i.occlusionTexture.strength&&(r.aoMapIntensity=i.occlusionTexture.strength)),void 0!==i.emissiveFactor&&(r.emissive=(new zen3d.Color3).fromArray(i.emissiveFactor)),void 0!==i.emissiveTexture&&o.push(n.assignTexture(r,"emissiveMap",i.emissiveTexture.index)),Promise.all(o).then(function(){var e;t===zen3d.ShaderMaterial||(e=new t);for(var n in r)e[n]=r[n];return e.map&&(e.map.encoding=zen3d.TEXEL_ENCODING_TYPE.SRGB),e.emissiveMap&&(e.emissiveMap.encoding=zen3d.TEXEL_ENCODING_TYPE.SRGB),i.extras&&(e.userData=i.extras),e})},a.prototype.assignTexture=function(e,t,n){return this.getDependency("texture",n).then(function(n){e[t]=n})},a.prototype.loadTexture=function(e){var t=this,n=this.json,r=this.options,a=this.textureLoader,o=window.URL||window.webkitURL,s=n.textures[e],u=n.images[s.source],h=u.uri,d=!1;return void 0!==u.bufferView&&(h=t.getDependency("bufferView",u.bufferView).then(function(e){d=!0;var t=new Blob([e],{type:u.mimeType});return h=o.createObjectURL(t)})),Promise.resolve(h).then(function(e){var t=a;return new Promise(function(n,a){t.load(i(e,r.path),n,void 0,a)})}).then(function(e){var t=zen3d.Texture2D.fromImage(e);!0===d&&o.revokeObjectURL(h),t.pixelFormat=void 0!==s.format?M[s.format]:zen3d.WEBGL_PIXEL_FORMAT.RGBA,void 0!==s.internalFormat&&t.pixelFormat!==M[s.internalFormat]&&console.warn("zen3d.GLTFLoader: Three.js does not support texture internalFormat which is different from texture format. internalFormat will be forced to be the same value as format."),t.type=void 0!==s.type?S[s.type]:zen3d.WEBGL_PIXEL_TYPE.UNSIGNED_BYTE;var i=(n.samplers||{})[s.sampler]||{};return t.magFilter=w[i.magFilter]||zen3d.WEBGL_TEXTURE_FILTER.LINEAR,t.minFilter=w[i.minFilter]||zen3d.WEBGL_TEXTURE_FILTER.LINEAR_MIPMAP_LINEAR,t.wrapS=z[i.wrapS]||zen3d.WEBGL_TEXTURE_WRAP.REPEAT,t.wrapT=z[i.wrapT]||zen3d.WEBGL_TEXTURE_WRAP.REPEAT,t})};var f={KHR_BINARY_GLTF:"KHR_binary_glTF",KHR_DRACO_MESH_COMPRESSION:"KHR_draco_mesh_compression",KHR_LIGHTS:"KHR_lights",KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS:"KHR_materials_pbrSpecularGlossiness",KHR_MATERIALS_UNLIT:"KHR_materials_unlit"},_="glTF",v=12,m={JSON:1313821514,BIN:5130562};l.prototype.decodePrimitive=function(e,t){var n=this.dracoLoader,i=e.extensions[this.name].bufferView,r=e.extensions[this.name].attributes,a={};for(var o in r)o in E&&(a[E[o]]=r[o]);return t.getDependency("bufferView",i).then(function(e){return new Promise(function(t){n.decodeDracoFile(e,t,a)})})};var g={FLOAT:5126,FLOAT_MAT3:35675,FLOAT_MAT4:35676,FLOAT_VEC2:35664,FLOAT_VEC3:35665,FLOAT_VEC4:35666,LINEAR:9729,REPEAT:10497,SAMPLER_2D:35678,POINTS:0,LINES:1,LINE_LOOP:2,LINE_STRIP:3,TRIANGLES:4,TRIANGLE_STRIP:5,TRIANGLE_FAN:6,UNSIGNED_BYTE:5121,UNSIGNED_SHORT:5123},E={POSITION:"a_Position",NORMAL:"a_Normal",TEXCOORD_0:"a_Uv",TEXCOORD0:"a_Uv",TEXCOORD:"a_Uv",TEXCOORD_1:"a_Uv2",COLOR_0:"a_Color",COLOR0:"a_Color",COLOR:"a_Color",WEIGHTS_0:"skinWeight",WEIGHT:"skinWeight",JOINTS_0:"skinIndex",JOINT:"skinIndex"},y={SCALAR:1,VEC2:2,VEC3:3,VEC4:4,MAT2:4,MAT3:9,MAT4:16},T={5120:Int8Array,5121:Uint8Array,5122:Int16Array,5123:Uint16Array,5125:Uint32Array,5126:Float32Array},x={OPAQUE:"OPAQUE",MASK:"MASK",BLEND:"BLEND"},M={6406:zen3d.WEBGL_PIXEL_FORMAT.ALPHA,6407:zen3d.WEBGL_PIXEL_FORMAT.RGB,6408:zen3d.WEBGL_PIXEL_FORMAT.RGBA,6409:zen3d.WEBGL_PIXEL_FORMAT.LUMINANCE,6410:zen3d.WEBGL_PIXEL_FORMAT.LUMINANCE_ALPHA},S={5121:zen3d.WEBGL_PIXEL_TYPE.UNSIGNED_BYTE,32819:zen3d.WEBGL_PIXEL_TYPE.UNSIGNED_SHORT_4_4_4_4,32820:zen3d.WEBGL_PIXEL_TYPE.UNSIGNED_SHORT_5_5_5_1,33635:zen3d.WEBGL_PIXEL_TYPE.UNSIGNED_SHORT_5_6_5},w={9728:zen3d.WEBGL_TEXTURE_FILTER.NEAREST,9729:zen3d.WEBGL_TEXTURE_FILTER.LINEAR,9984:zen3d.WEBGL_TEXTURE_FILTER.NEAREST_MIPMAP_NEAREST,9985:zen3d.WEBGL_TEXTURE_FILTER.LINEAR_MIPMAP_NEAREST,9986:zen3d.WEBGL_TEXTURE_FILTER.NEAREST_MIPMAP_LINEAR,9987:zen3d.WEBGL_TEXTURE_FILTER.LINEAR_MIPMAP_LINEAR},z={33071:zen3d.WEBGL_TEXTURE_WRAP.CLAMP_TO_EDGE,33648:zen3d.WEBGL_TEXTURE_WRAP.MIRRORED_REPEAT,10497:zen3d.WEBGL_TEXTURE_WRAP.REPEAT}}(),function(){var e=function(){this._entities={},this.enableCounter=!1};e.prototype.getEntity=function(e){return this._entities[e]},e.prototype.getFps=function(){var e=this.getEntity("fps");return e&&e.averageDelta?Math.floor(1e3/e.averageDelta):0},e.prototype.updateFps=function(){this.enableCounter&&(this.endCounter("fps"),this.startCounter("fps",60))},e.prototype.getNow=function(){return window.performance?window.performance.now():(new Date).getTime()},e.prototype.startCounter=function(e,t){if(this.enableCounter){var n=this._entities[e];n||(n={start:0,end:0,delta:0,_cache:[],averageRange:1,averageDelta:0},this._entities[e]=n),n.start=this.getNow(),n.averageRange=t||1}},e.prototype.endCounter=function(e){if(this.enableCounter){var t=this._entities[e];if(t&&(t.end=this.getNow(),t.delta=t.end-t.start,t.averageRange>1)){t._cache.push(t.delta);var n=t._cache.length;if(n>=t.averageRange){n>t.averageRange&&(t._cache.shift(),n--);for(var i=0,r=0;r<n;r++)i+=t._cache[r];t.averageDelta=i/n}}}},zen3d.Performance=e}(),function(){var e=function(e,t){this.camera=e,this.lookAtPoint=t,this.up=new zen3d.Vector3(0,1,0),this.distance=100,this._panAngle=0,this._panRad=0,this.minPanAngle=-1/0,this.maxPanAngle=1/0,this._tiltAngle=0,this._tiltRad=0,this.minTileAngle=-90,this.maxTileAngle=90,this.bindMouse=void 0,this._lastMouseX,this._lastMouseY,this._mouseDown=!1,this.bindTouch=void 0,this._lastTouchX,this._lastTouchY,this._fingerTwo=!1,this._lastDistance,this._lastPosition=new zen3d.Vector3,this._lastQuaternion=new zen3d.Quaternion};Object.defineProperties(e.prototype,{panAngle:{get:function(){return this._panAngle},set:function(e){this._panAngle=Math.max(this.minPanAngle,Math.min(this.maxPanAngle,e)),this._panRad=this._panAngle*Math.PI/180}},tiltAngle:{get:function(){return this._tiltAngle},set:function(e){this._tiltAngle=Math.max(this.minTileAngle,Math.min(this.maxTileAngle,e)),this._tiltRad=this._tiltAngle*Math.PI/180}}});e.prototype.update=function(){this.bindMouse&&this._updateMouse(),this.bindTouch&&this._updateTouch();var e=this.distance*Math.sin(this._panRad)*Math.cos(this._tiltRad),t=this.distance*Math.sin(this._tiltRad),n=this.distance*Math.cos(this._panRad)*Math.cos(this._tiltRad),i=this.camera,r=this.lookAtPoint;return i.position.set(e+r.x,t+r.y,n+r.z),i.lookAt(r,this.up),(this._lastPosition.distanceToSquared(i.position)>1e-6||8*(1-this._lastQuaternion.dot(i.quaternion))>1e-6)&&(this._lastPosition.copy(i.position),this._lastQuaternion.copy(i.quaternion),!0)},e.prototype._updateMouse=function(){var e=this.bindMouse;if(e.isPressed(0))if(this._mouseDown&&void 0!=this._lastMouseX&&void 0!=this._lastMouseY){var t=e.position.x-this._lastMouseX,n=e.position.y-this._lastMouseY;this.panAngle-=t,this.tiltAngle+=n,this._lastMouseX=e.position.x,this._lastMouseY=e.position.y}else this._mouseDown=!0,this._lastMouseX=e.position.x,this._lastMouseY=e.position.y;else e.wasReleased(0)&&(this._mouseDown=!1);this.distance=Math.max(this.distance-2*e.wheel,1)};var t=new zen3d.Vector2,n=new zen3d.Vector2;e.prototype._updateTouch=function(e){if((e=this.bindTouch).touchCount>0)if(1==e.touchCount){var i=e.getTouch(0);if(i.phase==zen3d.TouchPhase.BEGAN||this._fingerTwo||void 0==this._lastTouchX||void 0==this._lastTouchY)this._lastTouchX=i.position.x,this._lastTouchY=i.position.y;else{var r=i.position.x-this._lastTouchX,a=i.position.y-this._lastTouchY;this.panAngle-=.5*r,this.tiltAngle+=.5*a,this._lastTouchX=i.position.x,this._lastTouchY=i.position.y}this._fingerTwo=!1}else if(2==e.touchCount){var o=e.getTouch(0),s=e.getTouch(1);if(o.phase==zen3d.TouchPhase.BEGAN||s.phase==zen3d.TouchPhase.BEGAN||0==this._fingerTwo||void 0==this._lastDistance)t.set(o.position.x,o.position.y),n.set(s.position.x,s.position.y),this._lastDistance=t.distanceTo(n);else{t.set(o.position.x,o.position.y),n.set(s.position.x,s.position.y);var u=t.distanceTo(n),h=u-this._lastDistance;this.distance=Math.max(this.distance-h,1),this._lastDistance=u}this._fingerTwo=!0}else this._fingerTwo=!1},zen3d.HoverController=e}(),function(){var e=function(e){this.camera=e,this.camera.euler.order="YXZ",this.bindKeyboard=void 0,this.bindMouse=void 0,this._lastMouseX,this._lastMouseY,this._mouseDown=!1,this._lastPosition=new zen3d.Vector3,this._lastQuaternion=new zen3d.Quaternion};e.prototype.update=function(){this.bindKeyboard&&this.keyboardUpdate(),this.bindMouse&&this.mouseUpdate();var e=this.camera;return(this._lastPosition.distanceToSquared(e.position)>1e-6||8*(1-this._lastQuaternion.dot(e.quaternion))>1e-6)&&(this._lastPosition.copy(e.position),this._lastQuaternion.copy(e.quaternion),!0)};var t=new zen3d.Vector3,n=new zen3d.Vector3,i=new zen3d.Vector3;e.prototype.keyboardUpdate=function(){var e=this.bindKeyboard;t.set(0,0,-1).applyQuaternion(this.camera.quaternion),n.set(0,1,0).applyQuaternion(this.camera.quaternion),i.set(1,0,0).applyQuaternion(this.camera.quaternion),e.isPressed("W")&&this.camera.position.add(t),e.isPressed("A")&&this.camera.position.sub(i),e.isPressed("S")&&this.camera.position.sub(t),e.isPressed("D")&&this.camera.position.add(i),e.isPressed("E")&&this.camera.position.add(n),e.isPressed("Q")&&this.camera.position.sub(n)},e.prototype.mouseUpdate=function(){var e=this.bindMouse;if(e.isPressed(0))if(this._mouseDown&&void 0!=this._lastMouseX&&void 0!=this._lastMouseY){var n=e.position.x-this._lastMouseX,i=e.position.y-this._lastMouseY;this.camera.euler.x-=.01*i,this.camera.euler.y-=.01*n,this._lastMouseX=e.position.x,this._lastMouseY=e.position.y}else this._mouseDown=!0,this._lastMouseX=e.position.x,this._lastMouseY=e.position.y;else e.wasReleased(0)&&(this._mouseDown=!1);0!==e.wheel&&(t.set(0,0,-1).applyQuaternion(this.camera.quaternion).multiplyScalar(e.wheel),this.camera.position.add(t))},zen3d.FreeController=e}();