!function(){var e=function(t){e.superClass.constructor.call(this,t),this.vrDisplay=void 0,navigator.getVRDisplays?navigator.getVRDisplays().then(function(t){0<t.length?this.vrDisplay=t[0]:console.warn("HMD not available")}.bind(this)).catch(function(){console.warn("RendererVR: Unable to get VR Displays")}):console.warn("getVRDisplays not exist in navigator"),this.frameData=null,"VRFrameData"in window?this.frameData=new window.VRFrameData:console.warn("VRFrameData not exist")};zen3d.inherit(e,zen3d.Renderer);var c=new zen3d.Matrix4;e.prototype.render=function(t,e,a,r){var i=this.vrDisplay,n=this.frameData,s=e.cameraL,o=e.cameraR;i&&(i.depthNear=e.near,i.depthFar=e.far,i.getFrameData(n),s.projectionMatrix.elements=n.leftProjectionMatrix,c.elements=n.leftViewMatrix,c.inverse().decompose(s.position,s.quaternion,s.scale),s.position.add(e.position),s.updateMatrix(),o.projectionMatrix.elements=n.leftProjectionMatrix,c.elements=n.rightViewMatrix,c.inverse().decompose(o.position,o.quaternion,o.scale),o.position.add(e.position),o.updateMatrix(),this.matrixAutoUpdate&&t.updateMatrix(),this.lightsAutoupdate&&t.updateLights(),(this.shadowAutoUpdate||this.shadowNeedsUpdate)&&(this.shadowMapPass.render(this.glCore,t),this.shadowNeedsUpdate=!1),void 0===a&&(a=this.backRenderTarget),this.glCore.texture.setRenderTarget(a),(this.autoClear||r)&&(this.glCore.state.clearColor(0,0,0,0),this.glCore.clear(!0,!0,!0)),this.forwardPass.render(this.glCore,t,s),this.forwardPass.render(this.glCore,t,o),a.texture&&this.glCore.texture.updateRenderTargetMipmap(a),i.submitFrame())},zen3d.RendererVR=e}(),function(){var t=function(){t.superClass.constructor.call(this),this.type=zen3d.OBJECT_TYPE.CAMERA,this.cameraL=new zen3d.Camera,this.cameraR=new zen3d.Camera,this.cameraL.rect.set(0,0,.5,1),this.cameraR.rect.set(.5,0,1,1),this.near=1,this.far=1e3};zen3d.inherit(t,zen3d.Object3D),Object.defineProperties(t.prototype,{gammaFactor:{get:function(){return this.cameraL.gammaFactor},set:function(t){this.cameraL.gammaFactor=t,this.cameraR.gammaFactor=t}},gammaInput:{get:function(){return this.cameraL.gammaInput},set:function(t){this.cameraL.gammaInput=t,this.cameraR.gammaInput=t}},gammaOutput:{get:function(){return this.cameraL.gammaOutput},set:function(t){this.cameraL.gammaOutput=t,this.cameraR.gammaOutput=t}}}),zen3d.CameraVR=t}();